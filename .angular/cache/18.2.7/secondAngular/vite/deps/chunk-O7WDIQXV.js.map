{
  "version": 3,
  "sources": ["../../../../../../node_modules/@taiga-ui/cdk/fesm2022/taiga-ui-cdk-directives-swipe.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { inject, Injectable, Directive, Output } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { tuiTypedFromEvent } from '@taiga-ui/cdk/observables';\nimport { tuiInjectElement } from '@taiga-ui/cdk/utils/dom';\nimport { tuiIsPresent } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { Observable, merge, pairwise, filter, map } from 'rxjs';\nimport { tuiCreateToken } from '@taiga-ui/cdk/utils';\nconst TUI_SWIPE_OPTIONS = tuiCreateToken({\n  timeout: 500,\n  threshold: 30\n});\nclass TuiSwipeService extends Observable {\n  constructor() {\n    const doc = inject(DOCUMENT);\n    const el = tuiInjectElement();\n    const {\n      timeout,\n      threshold\n    } = inject(TUI_SWIPE_OPTIONS);\n    super(subscriber => merge(tuiTypedFromEvent(el, 'touchstart', {\n      passive: true\n    }), tuiTypedFromEvent(doc, 'touchend')).pipe(pairwise(), filter(([first, second]) => !!first.touches.length && first.touches[0]?.identifier === second.changedTouches[0]?.identifier), map(([start, end]) => {\n      const startX = start.touches[0]?.clientX ?? 0;\n      const startY = start.touches[0]?.clientY ?? 0;\n      const endX = end.changedTouches[0]?.clientX ?? 0;\n      const endY = end.changedTouches[0]?.clientY ?? 0;\n      const distanceX = startX - endX;\n      const distanceY = startY - endY;\n      const duration = end.timeStamp - start.timeStamp;\n      if ((Math.abs(distanceX) > threshold || Math.abs(distanceY) > threshold) && duration < timeout) {\n        return {\n          direction: tuiGetSwipeDirection(distanceX, distanceY),\n          events: [start, end]\n        };\n      }\n      return null;\n    }), filter(tuiIsPresent)).subscribe(subscriber));\n  }\n  static {\n    this.ɵfac = function TuiSwipeService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiSwipeService)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: TuiSwipeService,\n      factory: TuiSwipeService.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiSwipeService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\nfunction tuiGetSwipeDirection(deltaX, deltaY) {\n  if (Math.abs(deltaY) > Math.abs(deltaX)) {\n    return deltaY > 0 ? 'top' : 'bottom';\n  }\n  return deltaX > 0 ? 'left' : 'right';\n}\nclass TuiSwipe {\n  constructor() {\n    this.tuiSwipe = inject(TuiSwipeService);\n  }\n  static {\n    this.ɵfac = function TuiSwipe_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiSwipe)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiSwipe,\n      selectors: [[\"\", \"tuiSwipe\", \"\"]],\n      outputs: {\n        tuiSwipe: \"tuiSwipe\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([TuiSwipeService])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiSwipe, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: '[tuiSwipe]',\n      providers: [TuiSwipeService]\n    }]\n  }], null, {\n    tuiSwipe: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_SWIPE_OPTIONS, TuiSwipe, TuiSwipeService };\n"],
  "mappings": "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",
  "names": []
}
