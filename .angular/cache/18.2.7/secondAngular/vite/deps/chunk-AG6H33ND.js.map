{
  "version": 3,
  "sources": ["../../../../../../node_modules/@taiga-ui/kit/fesm2022/taiga-ui-kit-components-calendar-month.mjs", "../../../../../../node_modules/@taiga-ui/kit/fesm2022/taiga-ui-kit-components-checkbox.mjs", "../../../../../../node_modules/@taiga-ui/kit/fesm2022/taiga-ui-kit-components-data-list-wrapper.mjs", "../../../../../../node_modules/@taiga-ui/kit/fesm2022/taiga-ui-kit-components-slider.mjs", "../../../../../../node_modules/@taiga-ui/kit/fesm2022/taiga-ui-kit-components-range.mjs", "../../../../../../node_modules/@taiga-ui/kit/fesm2022/taiga-ui-kit-pipes-stringify-content.mjs", "../../../../../../node_modules/@maskito/kit/index.esm.js"],
  "sourcesContent": ["import { __decorate } from 'tslib';\nimport { NgIf, AsyncPipe, NgForOf } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, EventEmitter, Component, ChangeDetectionStrategy, Input, Output } from '@angular/core';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { TUI_FALSE_HANDLER } from '@taiga-ui/cdk/constants';\nimport { TuiDay, TUI_FIRST_DAY, TUI_LAST_DAY, TuiMonthRange, TuiMonth, TuiYear } from '@taiga-ui/cdk/date-time';\nimport { TuiHovered } from '@taiga-ui/cdk/directives/hovered';\nimport { TuiLet } from '@taiga-ui/cdk/directives/let';\nimport { TuiRepeatTimes } from '@taiga-ui/cdk/directives/repeat-times';\nimport { tuiNullableSame, tuiPure } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { TuiCalendarYear } from '@taiga-ui/core/components/calendar';\nimport { TuiLink } from '@taiga-ui/core/components/link';\nimport { TuiScrollbar } from '@taiga-ui/core/components/scrollbar';\nimport { TuiSpinButton } from '@taiga-ui/core/components/spin-button';\nimport { TUI_CALENDAR_MONTHS } from '@taiga-ui/kit/tokens';\nfunction TuiCalendarMonth_tui_scrollbar_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tui-scrollbar\", 2)(1, \"tui-calendar-year\", 3);\n    i0.ɵɵlistener(\"yearClick\", function TuiCalendarMonth_tui_scrollbar_0_Template_tui_calendar_year_yearClick_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onPickerYearClick($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"initialItem\", ctx_r1.year.year)(\"max\", ctx_r1.computedMax.year)(\"min\", ctx_r1.computedMin.year)(\"value\", ctx_r1.value);\n  }\n}\nfunction TuiCalendarMonth_ng_template_1_div_3_ng_container_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵlistener(\"click\", function TuiCalendarMonth_ng_template_1_div_3_ng_container_1_div_1_Template_div_click_0_listener() {\n      const item_r5 = i0.ɵɵrestoreView(_r4).tuiLet;\n      const ctx_r1 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r1.onItemClick(item_r5));\n    })(\"tuiHoveredChange\", function TuiCalendarMonth_ng_template_1_div_3_ng_container_1_div_1_Template_div_tuiHoveredChange_0_listener($event) {\n      const item_r5 = i0.ɵɵrestoreView(_r4).tuiLet;\n      const ctx_r1 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r1.onItemHovered($event, item_r5));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_11_0;\n    const item_r5 = ctx.tuiLet;\n    const column_r6 = i0.ɵɵnextContext().$implicit;\n    const row_r7 = i0.ɵɵnextContext().$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"t-cell_disabled\", ctx_r1.disabledItemHandlerWithMinMax(item_r5))(\"t-cell_today\", ctx_r1.isItemToday(item_r5));\n    i0.ɵɵattribute(\"data-range\", ctx_r1.getItemRange(item_r5));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", (tmp_11_0 = ctx_r1.months()) == null ? null : tmp_11_0[row_r7 * 4 + column_r6], \" \");\n  }\n}\nfunction TuiCalendarMonth_ng_template_1_div_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TuiCalendarMonth_ng_template_1_div_3_ng_container_1_div_1_Template, 2, 6, \"div\", 9);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const column_r6 = ctx.$implicit;\n    const row_r7 = i0.ɵɵnextContext().$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"tuiLet\", ctx_r1.getTuiMonth(row_r7 * 4 + column_r6, ctx_r1.year.year));\n  }\n}\nfunction TuiCalendarMonth_ng_template_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtemplate(1, TuiCalendarMonth_ng_template_1_div_3_ng_container_1_Template, 2, 1, \"ng-container\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"tuiRepeatTimesOf\", 4);\n  }\n}\nfunction TuiCalendarMonth_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tui-spin-button\", 4);\n    i0.ɵɵlistener(\"leftClick\", function TuiCalendarMonth_ng_template_1_Template_tui_spin_button_leftClick_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onPreviousYear());\n    })(\"rightClick\", function TuiCalendarMonth_ng_template_1_Template_tui_spin_button_rightClick_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onNextYear());\n    });\n    i0.ɵɵelementStart(1, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function TuiCalendarMonth_ng_template_1_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onYearClick());\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(3, TuiCalendarMonth_ng_template_1_div_3_Template, 2, 1, \"div\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"focusable\", false)(\"leftDisabled\", ctx_r1.previousYearDisabled)(\"rightDisabled\", ctx_r1.nextYearDisabled);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.year.formattedYear, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"tuiRepeatTimesOf\", 3);\n  }\n}\nconst TODAY = TuiDay.currentLocal();\nclass TuiCalendarMonth {\n  constructor() {\n    this.isYearPickerShown = false;\n    this.months = toSignal(inject(TUI_CALENDAR_MONTHS));\n    this.value = null;\n    this.year = TODAY;\n    this.disabledItemHandler = TUI_FALSE_HANDLER;\n    this.minLength = null;\n    this.maxLength = null;\n    this.min = TUI_FIRST_DAY;\n    this.max = TUI_LAST_DAY;\n    this.monthClick = new EventEmitter();\n    this.hoveredItemChange = new EventEmitter();\n    this.yearChange = new EventEmitter();\n    this.hoveredItem = null;\n  }\n  get isSingle() {\n    return this.value instanceof TuiMonthRange && this.value.isSingleMonth;\n  }\n  onNextYear() {\n    this.updateActiveYear(this.year.append({\n      year: 1\n    }));\n  }\n  onPreviousYear() {\n    this.updateActiveYear(this.year.append({\n      year: -1\n    }));\n  }\n  getItemRange(item) {\n    const {\n      value,\n      hoveredItem\n    } = this;\n    if (!(value instanceof TuiMonthRange)) {\n      return value?.monthSame(item) ? 'active' : null;\n    }\n    const months = item.month + item.year * 12;\n    const hovered = hoveredItem ? hoveredItem.month + hoveredItem.year * 12 : null;\n    const from = value.from.month + value.from.year * 12;\n    const to = value.to.month + value.to.year * 12;\n    const picking = this.isSingle ? hovered : null;\n    const min = Math.min(from, to, picking ?? from);\n    const max = Math.max(from, to, picking ?? from);\n    if (min === max && min === months) {\n      return 'active';\n    }\n    if (min === months) {\n      return 'start';\n    }\n    if (max === months) {\n      return 'end';\n    }\n    return min < months && months < max ? 'middle' : null;\n  }\n  get computedMin() {\n    return this.min ?? TUI_FIRST_DAY;\n  }\n  get computedMax() {\n    return this.max ?? TUI_LAST_DAY;\n  }\n  get previousYearDisabled() {\n    return this.year.yearSameOrBefore(this.computedMin);\n  }\n  get nextYearDisabled() {\n    return this.year.yearSameOrAfter(this.computedMax);\n  }\n  get disabledItemHandlerWithMinMax() {\n    return this.calculateDisabledItemHandlerWithMinMax(this.disabledItemHandler, this.value, this.computedMin, this.computedMax, this.minLength, this.maxLength);\n  }\n  getTuiMonth(monthNumber, yearNumber) {\n    return new TuiMonth(yearNumber, monthNumber);\n  }\n  isItemToday(item) {\n    return TODAY.monthSame(item);\n  }\n  onPickerYearClick(year) {\n    this.isYearPickerShown = false;\n    if (this.year.year !== year) {\n      this.updateActiveYear(new TuiYear(year));\n    }\n  }\n  onItemClick(month) {\n    if (!this.disabledItemHandlerWithMinMax(month)) {\n      this.monthClick.emit(month);\n    }\n  }\n  onYearClick() {\n    this.isYearPickerShown = true;\n  }\n  onItemHovered(hovered, item) {\n    this.updateHoveredItem(hovered ? item : null);\n  }\n  calculateDisabledItemHandlerWithMinMax(disabledItemHandler, value, min, max, minLength, maxLength) {\n    return item => {\n      const delta = value instanceof TuiMonthRange && value.isSingleMonth ? Math.abs(item.year * 12 + item.month - value.from.year * 12 - value.from.month) : 0;\n      const tooLong = delta && maxLength && delta > maxLength;\n      const tooShort = delta && minLength && delta < minLength;\n      return tooLong || tooShort || item.monthBefore(min) || item.monthAfter(max) || disabledItemHandler(item);\n    };\n  }\n  updateHoveredItem(month) {\n    if (tuiNullableSame(this.hoveredItem, month, (a, b) => a.monthSame(b))) {\n      return;\n    }\n    this.hoveredItem = month;\n    this.hoveredItemChange.emit(month);\n  }\n  updateActiveYear(year) {\n    this.year = year;\n    this.yearChange.emit(year);\n  }\n  static {\n    this.ɵfac = function TuiCalendarMonth_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiCalendarMonth)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiCalendarMonth,\n      selectors: [[\"tui-calendar-month\"]],\n      hostVars: 2,\n      hostBindings: function TuiCalendarMonth_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"_picking\", ctx.isSingle);\n        }\n      },\n      inputs: {\n        value: \"value\",\n        year: \"year\",\n        disabledItemHandler: \"disabledItemHandler\",\n        minLength: \"minLength\",\n        maxLength: \"maxLength\",\n        min: \"min\",\n        max: \"max\"\n      },\n      outputs: {\n        monthClick: \"monthClick\",\n        hoveredItemChange: \"hoveredItemChange\",\n        yearChange: \"yearChange\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 3,\n      vars: 2,\n      consts: [[\"monthSelect\", \"\"], [\"class\", \"t-scrollbar\", 4, \"ngIf\", \"ngIfElse\"], [1, \"t-scrollbar\"], [3, \"yearClick\", \"initialItem\", \"max\", \"min\", \"value\"], [1, \"t-spin\", 3, \"leftClick\", \"rightClick\", \"focusable\", \"leftDisabled\", \"rightDisabled\"], [\"automation-id\", \"tui-calendar-month__active-year\", \"tabIndex\", \"-1\", \"tuiLink\", \"\", \"type\", \"button\", 3, \"click\"], [\"class\", \"t-row\", 4, \"tuiRepeatTimes\", \"tuiRepeatTimesOf\"], [1, \"t-row\"], [4, \"tuiRepeatTimes\", \"tuiRepeatTimesOf\"], [\"class\", \"t-cell\", 3, \"t-cell_disabled\", \"t-cell_today\", \"click\", \"tuiHoveredChange\", 4, \"tuiLet\"], [1, \"t-cell\", 3, \"click\", \"tuiHoveredChange\"]],\n      template: function TuiCalendarMonth_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, TuiCalendarMonth_tui_scrollbar_0_Template, 2, 4, \"tui-scrollbar\", 1)(1, TuiCalendarMonth_ng_template_1_Template, 4, 5, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          const monthSelect_r8 = i0.ɵɵreference(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.isYearPickerShown)(\"ngIfElse\", monthSelect_r8);\n        }\n      },\n      dependencies: [NgIf, TuiCalendarYear, TuiHovered, TuiLet, TuiLink, TuiRepeatTimes, TuiScrollbar, TuiSpinButton],\n      styles: [\".t-row[_ngcontent-%COMP%]{display:flex;justify-content:flex-start;font:var(--tui-font-text-m)}.t-row[_ngcontent-%COMP%]:first-child{justify-content:flex-end}.t-row[_ngcontent-%COMP%]:last-child{justify-content:flex-start}.t-cell[_ngcontent-%COMP%]{position:relative;display:flex;align-items:center;justify-content:center;line-height:2rem;isolation:isolate;cursor:pointer;overflow:hidden;border:.125rem solid transparent;box-sizing:border-box;-webkit-mask:linear-gradient(transparent calc(50% - 1rem),#000 calc(50% - 1rem),#000 calc(50% + 1rem),transparent calc(50% + 1rem));mask:linear-gradient(transparent calc(50% - 1rem),#000 calc(50% - 1rem),#000 calc(50% + 1rem),transparent calc(50% + 1rem))}.t-cell[_ngcontent-%COMP%]:first-child{border-inline-start-color:transparent!important}.t-cell[_ngcontent-%COMP%]:last-child{border-inline-end-color:transparent!important}.t-cell[_ngcontent-%COMP%]:before, .t-cell[_ngcontent-%COMP%]:after{position:absolute;top:0;left:0;bottom:0;right:0;content:\\\"\\\";z-index:-1;border-radius:var(--tui-radius-m)}.t-cell[_ngcontent-%COMP%]:after{-webkit-mask:url('data:image/svg+xml,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 12 32\\\"><path d=\\\"M0.2856 0L0.6763 0C2.9265 0 4.9876 1.259 6.0147 3.2611L10.2442 11.5048C11.5301 14.0113 11.5683 16.9754 10.3472 19.5141L5.9766 28.6007C4.9772 30.6786 2.8754 32 0.5696 32H0.285645V0Z\\\"></path></svg>') right / .75rem 100% no-repeat,linear-gradient(#000,#000) left / calc(100% - .7rem) 100% no-repeat;mask:url('data:image/svg+xml,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 12 32\\\"><path d=\\\"M0.2856 0L0.6763 0C2.9265 0 4.9876 1.259 6.0147 3.2611L10.2442 11.5048C11.5301 14.0113 11.5683 16.9754 10.3472 19.5141L5.9766 28.6007C4.9772 30.6786 2.8754 32 0.5696 32H0.285645V0Z\\\"></path></svg>') right / .75rem 100% no-repeat,linear-gradient(#000,#000) left / calc(100% - .7rem) 100% no-repeat}.t-cell[data-range][_ngcontent-%COMP%]:before{background:var(--tui-background-neutral-1)}._picking[_nghost-%COMP%]   .t-cell[data-range][_ngcontent-%COMP%]:before{background:var(--tui-background-neutral-1-hover)}.t-cell[data-range=middle][_ngcontent-%COMP%]{border-color:var(--tui-background-neutral-1)}._picking[_nghost-%COMP%]   .t-cell[data-range=middle][_ngcontent-%COMP%]{border-color:var(--tui-background-neutral-1-hover)}.t-cell[data-range=middle][_ngcontent-%COMP%]:not(:first-child):before{border-start-start-radius:0;border-end-start-radius:0}.t-cell[data-range=middle][_ngcontent-%COMP%]:not(:last-child):before{border-start-end-radius:0;border-end-end-radius:0}.t-cell[data-range=start][_ngcontent-%COMP%]{border-inline-end-color:var(--tui-background-neutral-1);color:var(--tui-text-primary-on-accent-1)}._picking[_nghost-%COMP%]   .t-cell[data-range=start][_ngcontent-%COMP%]{border-inline-end-color:var(--tui-background-neutral-1-hover)}.t-cell[data-range=start][_ngcontent-%COMP%]:not(:last-child):before{right:-1rem}.t-cell[data-range=start][_ngcontent-%COMP%]:after{background:var(--tui-background-accent-1)}.t-cell[data-range=end][_ngcontent-%COMP%]{border-inline-start-color:var(--tui-background-neutral-1);color:var(--tui-text-primary-on-accent-1)}._picking[_nghost-%COMP%]   .t-cell[data-range=end][_ngcontent-%COMP%]{border-inline-start-color:var(--tui-background-neutral-1-hover)}.t-cell[data-range=end][_ngcontent-%COMP%]:not(:first-child):before{left:-1rem}.t-cell[data-range=end][_ngcontent-%COMP%]:after{background:var(--tui-background-accent-1);transform:scaleX(-1)}.t-cell[data-range=active][_ngcontent-%COMP%]{color:var(--tui-text-primary-on-accent-1)}.t-cell[data-range=active][_ngcontent-%COMP%]:after{background:var(--tui-background-accent-1);-webkit-mask:none;mask:none}.t-cell_disabled[_ngcontent-%COMP%]{opacity:var(--tui-disabled-opacity);pointer-events:none}.t-cell_today[_ngcontent-%COMP%]{text-decoration:underline;text-underline-offset:.25rem}@media (hover: hover){.t-cell[_ngcontent-%COMP%]:hover:not([data-range=start]):not([data-range=end]):before{background:var(--tui-background-neutral-1-hover)}.t-cell[data-range=start][_ngcontent-%COMP%]:hover:after, .t-cell[data-range=end][_ngcontent-%COMP%]:hover:after, .t-cell[data-range=active][_ngcontent-%COMP%]:hover:after{background:var(--tui-background-accent-1-hover)}}[_nghost-%COMP%]{display:block;block-size:12rem;inline-size:16rem;padding:1.125rem;box-sizing:content-box}.t-spin[_ngcontent-%COMP%]{margin-block-end:1rem}.t-cell[_ngcontent-%COMP%]{inline-size:4rem;border-block-start-width:.75rem;border-block-end-width:.75rem}.t-scrollbar[_ngcontent-%COMP%]{block-size:inherit;inline-size:inherit}\"],\n      changeDetection: 0\n    });\n  }\n}\n__decorate([tuiPure], TuiCalendarMonth.prototype, \"calculateDisabledItemHandlerWithMinMax\", null);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiCalendarMonth, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      selector: 'tui-calendar-month',\n      imports: [AsyncPipe, NgForOf, NgIf, TuiCalendarYear, TuiHovered, TuiLet, TuiLink, TuiRepeatTimes, TuiScrollbar, TuiSpinButton],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        '[class._picking]': 'isSingle'\n      },\n      template: \"<tui-scrollbar\\n    *ngIf=\\\"isYearPickerShown; else monthSelect\\\"\\n    class=\\\"t-scrollbar\\\"\\n>\\n    <tui-calendar-year\\n        [initialItem]=\\\"year.year\\\"\\n        [max]=\\\"computedMax.year\\\"\\n        [min]=\\\"computedMin.year\\\"\\n        [value]=\\\"value\\\"\\n        (yearClick)=\\\"onPickerYearClick($event)\\\"\\n    />\\n</tui-scrollbar>\\n<ng-template #monthSelect>\\n    <tui-spin-button\\n        class=\\\"t-spin\\\"\\n        [focusable]=\\\"false\\\"\\n        [leftDisabled]=\\\"previousYearDisabled\\\"\\n        [rightDisabled]=\\\"nextYearDisabled\\\"\\n        (leftClick)=\\\"onPreviousYear()\\\"\\n        (rightClick)=\\\"onNextYear()\\\"\\n    >\\n        <button\\n            automation-id=\\\"tui-calendar-month__active-year\\\"\\n            tabIndex=\\\"-1\\\"\\n            tuiLink\\n            type=\\\"button\\\"\\n            (click)=\\\"onYearClick()\\\"\\n        >\\n            {{ year.formattedYear }}\\n        </button>\\n    </tui-spin-button>\\n    <div\\n        *tuiRepeatTimes=\\\"let row of 3\\\"\\n        class=\\\"t-row\\\"\\n    >\\n        <ng-container *tuiRepeatTimes=\\\"let column of 4\\\">\\n            <div\\n                *tuiLet=\\\"getTuiMonth(row * 4 + column, year.year) as item\\\"\\n                class=\\\"t-cell\\\"\\n                [attr.data-range]=\\\"getItemRange(item)\\\"\\n                [class.t-cell_disabled]=\\\"disabledItemHandlerWithMinMax(item)\\\"\\n                [class.t-cell_today]=\\\"isItemToday(item)\\\"\\n                (click)=\\\"onItemClick(item)\\\"\\n                (tuiHoveredChange)=\\\"onItemHovered($event, item)\\\"\\n            >\\n                {{ months()?.[row * 4 + column] }}\\n            </div>\\n        </ng-container>\\n    </div>\\n</ng-template>\\n\",\n      styles: [\".t-row{display:flex;justify-content:flex-start;font:var(--tui-font-text-m)}.t-row:first-child{justify-content:flex-end}.t-row:last-child{justify-content:flex-start}.t-cell{position:relative;display:flex;align-items:center;justify-content:center;line-height:2rem;isolation:isolate;cursor:pointer;overflow:hidden;border:.125rem solid transparent;box-sizing:border-box;-webkit-mask:linear-gradient(transparent calc(50% - 1rem),#000 calc(50% - 1rem),#000 calc(50% + 1rem),transparent calc(50% + 1rem));mask:linear-gradient(transparent calc(50% - 1rem),#000 calc(50% - 1rem),#000 calc(50% + 1rem),transparent calc(50% + 1rem))}.t-cell:first-child{border-inline-start-color:transparent!important}.t-cell:last-child{border-inline-end-color:transparent!important}.t-cell:before,.t-cell:after{position:absolute;top:0;left:0;bottom:0;right:0;content:\\\"\\\";z-index:-1;border-radius:var(--tui-radius-m)}.t-cell:after{-webkit-mask:url('data:image/svg+xml,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 12 32\\\"><path d=\\\"M0.2856 0L0.6763 0C2.9265 0 4.9876 1.259 6.0147 3.2611L10.2442 11.5048C11.5301 14.0113 11.5683 16.9754 10.3472 19.5141L5.9766 28.6007C4.9772 30.6786 2.8754 32 0.5696 32H0.285645V0Z\\\"></path></svg>') right / .75rem 100% no-repeat,linear-gradient(#000,#000) left / calc(100% - .7rem) 100% no-repeat;mask:url('data:image/svg+xml,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 12 32\\\"><path d=\\\"M0.2856 0L0.6763 0C2.9265 0 4.9876 1.259 6.0147 3.2611L10.2442 11.5048C11.5301 14.0113 11.5683 16.9754 10.3472 19.5141L5.9766 28.6007C4.9772 30.6786 2.8754 32 0.5696 32H0.285645V0Z\\\"></path></svg>') right / .75rem 100% no-repeat,linear-gradient(#000,#000) left / calc(100% - .7rem) 100% no-repeat}.t-cell[data-range]:before{background:var(--tui-background-neutral-1)}:host._picking .t-cell[data-range]:before{background:var(--tui-background-neutral-1-hover)}.t-cell[data-range=middle]{border-color:var(--tui-background-neutral-1)}:host._picking .t-cell[data-range=middle]{border-color:var(--tui-background-neutral-1-hover)}.t-cell[data-range=middle]:not(:first-child):before{border-start-start-radius:0;border-end-start-radius:0}.t-cell[data-range=middle]:not(:last-child):before{border-start-end-radius:0;border-end-end-radius:0}.t-cell[data-range=start]{border-inline-end-color:var(--tui-background-neutral-1);color:var(--tui-text-primary-on-accent-1)}:host._picking .t-cell[data-range=start]{border-inline-end-color:var(--tui-background-neutral-1-hover)}.t-cell[data-range=start]:not(:last-child):before{right:-1rem}.t-cell[data-range=start]:after{background:var(--tui-background-accent-1)}.t-cell[data-range=end]{border-inline-start-color:var(--tui-background-neutral-1);color:var(--tui-text-primary-on-accent-1)}:host._picking .t-cell[data-range=end]{border-inline-start-color:var(--tui-background-neutral-1-hover)}.t-cell[data-range=end]:not(:first-child):before{left:-1rem}.t-cell[data-range=end]:after{background:var(--tui-background-accent-1);transform:scaleX(-1)}.t-cell[data-range=active]{color:var(--tui-text-primary-on-accent-1)}.t-cell[data-range=active]:after{background:var(--tui-background-accent-1);-webkit-mask:none;mask:none}.t-cell_disabled{opacity:var(--tui-disabled-opacity);pointer-events:none}.t-cell_today{text-decoration:underline;text-underline-offset:.25rem}@media (hover: hover){.t-cell:hover:not([data-range=start]):not([data-range=end]):before{background:var(--tui-background-neutral-1-hover)}.t-cell[data-range=start]:hover:after,.t-cell[data-range=end]:hover:after,.t-cell[data-range=active]:hover:after{background:var(--tui-background-accent-1-hover)}}:host{display:block;block-size:12rem;inline-size:16rem;padding:1.125rem;box-sizing:content-box}.t-spin{margin-block-end:1rem}.t-cell{inline-size:4rem;border-block-start-width:.75rem;border-block-end-width:.75rem}.t-scrollbar{block-size:inherit;inline-size:inherit}\\n\"]\n    }]\n  }], null, {\n    value: [{\n      type: Input\n    }],\n    year: [{\n      type: Input\n    }],\n    disabledItemHandler: [{\n      type: Input\n    }],\n    minLength: [{\n      type: Input\n    }],\n    maxLength: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    monthClick: [{\n      type: Output\n    }],\n    hoveredItemChange: [{\n      type: Output\n    }],\n    yearChange: [{\n      type: Output\n    }],\n    calculateDisabledItemHandlerWithMinMax: []\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiCalendarMonth };\n", "import * as i0 from '@angular/core';\nimport { inject, DestroyRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { NgControl, NgModel } from '@angular/forms';\nimport * as i2 from '@taiga-ui/cdk/directives/native-validator';\nimport { TuiNativeValidator } from '@taiga-ui/cdk/directives/native-validator';\nimport { tuiControlValue } from '@taiga-ui/cdk/observables';\nimport { tuiInjectElement } from '@taiga-ui/cdk/utils/dom';\nimport { tuiCreateToken, tuiProvideOptions, tuiIsString } from '@taiga-ui/cdk/utils/miscellaneous';\nimport * as i1 from '@taiga-ui/core/directives/appearance';\nimport { TuiAppearance } from '@taiga-ui/core/directives/appearance';\nimport { tuiInjectIconResolver } from '@taiga-ui/core/tokens';\nconst _c0 = [\"type\", \"checkbox\", \"tuiCheckbox\", \"\"];\nconst TUI_CHECKBOX_DEFAULT_OPTIONS = {\n  size: 'm',\n  appearance: el => el.checked || el.indeterminate ? 'primary' : 'whiteblock',\n  icons: {\n    checked: '@tui.check',\n    indeterminate: '@tui.minus'\n  }\n};\nconst TUI_CHECKBOX_OPTIONS = tuiCreateToken(TUI_CHECKBOX_DEFAULT_OPTIONS);\nfunction tuiCheckboxOptionsProvider(options) {\n  return tuiProvideOptions(TUI_CHECKBOX_OPTIONS, options, TUI_CHECKBOX_DEFAULT_OPTIONS);\n}\nclass TuiCheckbox {\n  constructor() {\n    this.appearance = inject(TuiAppearance);\n    this.options = inject(TUI_CHECKBOX_OPTIONS);\n    this.resolver = tuiInjectIconResolver();\n    this.destroyRef = inject(DestroyRef);\n    this.el = tuiInjectElement();\n    this.size = this.options.size;\n    this.control = inject(NgControl, {\n      optional: true,\n      self: true\n    });\n  }\n  ngOnInit() {\n    if (!this.control?.valueChanges) {\n      return;\n    }\n    tuiControlValue(this.control).pipe(takeUntilDestroyed(this.destroyRef)).subscribe(value => {\n      // https://github.com/angular/angular/issues/14988\n      const fix = this.control instanceof NgModel && value === null ? this.control.model : value;\n      this.el.indeterminate = fix === null;\n    });\n  }\n  ngDoCheck() {\n    this.appearance.tuiAppearance = tuiIsString(this.options.appearance) ? this.options.appearance : this.options.appearance(this.el);\n  }\n  getIcon(state) {\n    const option = this.options.icons[state];\n    const icon = tuiIsString(option) ? option : option(this.size);\n    return icon && `url(${this.resolver(icon)})`;\n  }\n  static {\n    this.ɵfac = function TuiCheckbox_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiCheckbox)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiCheckbox,\n      selectors: [[\"input\", \"type\", \"checkbox\", \"tuiCheckbox\", \"\"]],\n      hostVars: 8,\n      hostBindings: function TuiCheckbox_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"disabled\", !ctx.control || ctx.control.disabled);\n          i0.ɵɵattribute(\"data-size\", ctx.size);\n          i0.ɵɵstyleProp(\"--t-checked-icon\", ctx.getIcon(\"checked\"))(\"--t-indeterminate-icon\", ctx.getIcon(\"indeterminate\"));\n          i0.ɵɵclassProp(\"_readonly\", !ctx.control);\n        }\n      },\n      inputs: {\n        size: \"size\"\n      },\n      standalone: true,\n      features: [i0.ɵɵHostDirectivesFeature([{\n        directive: i1.TuiAppearance,\n        inputs: [\"tuiAppearanceState\", \"tuiAppearanceState\", \"tuiAppearanceFocus\", \"tuiAppearanceFocus\"]\n      }, i2.TuiNativeValidator]), i0.ɵɵStandaloneFeature],\n      attrs: _c0,\n      decls: 0,\n      vars: 0,\n      template: function TuiCheckbox_Template(rf, ctx) {},\n      styles: [\"[tuiCheckbox]{--t-size: 1.5rem;--t-radius: var(--tui-radius-s);inline-size:var(--t-size);block-size:var(--t-size);border-radius:var(--t-radius);cursor:pointer;margin:0;flex-shrink:0}[tuiCheckbox]:before{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;content:\\\"\\\";background:currentColor;-webkit-mask:url('data:image/svg+xml,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"></svg>') center / 100%;mask:url('data:image/svg+xml,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"></svg>') center / 100%;transform:scale(0);transition:transform var(--tui-duration) ease-in-out,-webkit-mask 0s var(--tui-duration) ease-in-out;transition:transform var(--tui-duration) ease-in-out,mask 0s var(--tui-duration) ease-in-out;transition:transform var(--tui-duration) ease-in-out,mask 0s var(--tui-duration) ease-in-out,-webkit-mask 0s var(--tui-duration) ease-in-out}[tuiCheckbox]:disabled._readonly{opacity:1}[tuiCheckbox]:checked:before,[tuiCheckbox]:indeterminate:before{-webkit-mask-image:var(--t-checked-icon);mask-image:var(--t-checked-icon);transform:scale(1);transition:transform var(--tui-duration) ease-in-out,-webkit-mask 0s ease-in-out;transition:transform var(--tui-duration) ease-in-out,mask 0s ease-in-out;transition:transform var(--tui-duration) ease-in-out,mask 0s ease-in-out,-webkit-mask 0s ease-in-out}[tuiCheckbox]:indeterminate:before{-webkit-mask-image:var(--t-indeterminate-icon);mask-image:var(--t-indeterminate-icon)}[tuiCheckbox][data-size=s]{--t-size: 1rem;--t-radius: var(--tui-radius-xs)}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiCheckbox, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      selector: 'input[type=\"checkbox\"][tuiCheckbox]',\n      template: '',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      hostDirectives: [{\n        directive: TuiAppearance,\n        inputs: ['tuiAppearanceState', 'tuiAppearanceFocus']\n      }, TuiNativeValidator],\n      host: {\n        '[disabled]': '!control || control.disabled',\n        '[attr.data-size]': 'size',\n        '[class._readonly]': '!control',\n        '[style.--t-checked-icon]': 'getIcon(\"checked\")',\n        '[style.--t-indeterminate-icon]': 'getIcon(\"indeterminate\")'\n      },\n      styles: [\"[tuiCheckbox]{--t-size: 1.5rem;--t-radius: var(--tui-radius-s);inline-size:var(--t-size);block-size:var(--t-size);border-radius:var(--t-radius);cursor:pointer;margin:0;flex-shrink:0}[tuiCheckbox]:before{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;content:\\\"\\\";background:currentColor;-webkit-mask:url('data:image/svg+xml,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"></svg>') center / 100%;mask:url('data:image/svg+xml,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"></svg>') center / 100%;transform:scale(0);transition:transform var(--tui-duration) ease-in-out,-webkit-mask 0s var(--tui-duration) ease-in-out;transition:transform var(--tui-duration) ease-in-out,mask 0s var(--tui-duration) ease-in-out;transition:transform var(--tui-duration) ease-in-out,mask 0s var(--tui-duration) ease-in-out,-webkit-mask 0s var(--tui-duration) ease-in-out}[tuiCheckbox]:disabled._readonly{opacity:1}[tuiCheckbox]:checked:before,[tuiCheckbox]:indeterminate:before{-webkit-mask-image:var(--t-checked-icon);mask-image:var(--t-checked-icon);transform:scale(1);transition:transform var(--tui-duration) ease-in-out,-webkit-mask 0s ease-in-out;transition:transform var(--tui-duration) ease-in-out,mask 0s ease-in-out;transition:transform var(--tui-duration) ease-in-out,mask 0s ease-in-out,-webkit-mask 0s ease-in-out}[tuiCheckbox]:indeterminate:before{-webkit-mask-image:var(--t-indeterminate-icon);mask-image:var(--t-indeterminate-icon)}[tuiCheckbox][data-size=s]{--t-size: 1rem;--t-radius: var(--tui-radius-xs)}\\n\"]\n    }]\n  }], null, {\n    size: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_CHECKBOX_DEFAULT_OPTIONS, TUI_CHECKBOX_OPTIONS, TuiCheckbox, tuiCheckboxOptionsProvider };\n", "import { NgForOf, NgIf } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, EventEmitter, Component, ChangeDetectionStrategy, ViewChildren, forwardRef, Input, Output } from '@angular/core';\nimport { TuiElement } from '@taiga-ui/cdk/directives/element';\nimport * as i1 from '@taiga-ui/core/components/data-list';\nimport { tuiInjectDataListSize, tuiAsDataListAccessor, TuiOption, TuiDataList, TuiDataListDirective } from '@taiga-ui/core/components/data-list';\nimport { TuiLoader } from '@taiga-ui/core/components/loader';\nimport { PolymorpheusOutlet } from '@taiga-ui/polymorpheus';\nimport { EMPTY_QUERY } from '@taiga-ui/cdk/constants';\nimport { tuiIsNativeFocused } from '@taiga-ui/cdk/utils/focus';\nimport { tuiIsPresent } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { TUI_ITEMS_HANDLERS } from '@taiga-ui/kit/tokens';\nfunction TuiDataListWrapperComponent_tui_data_list_0_button_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const text_r4 = ctx.polymorpheusOutlet;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", text_r4, \" \");\n  }\n}\nfunction TuiDataListWrapperComponent_tui_data_list_0_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 5, 1);\n    i0.ɵɵlistener(\"click\", function TuiDataListWrapperComponent_tui_data_list_0_button_1_Template_button_click_0_listener() {\n      const item_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.itemClick.emit(item_r2));\n    });\n    i0.ɵɵelementStart(2, \"span\", 6);\n    i0.ɵɵtemplate(3, TuiDataListWrapperComponent_tui_data_list_0_button_1_ng_container_3_Template, 2, 1, \"ng-container\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const elementRef_r5 = i0.ɵɵreference(1);\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.disabledItemHandler(item_r2))(\"value\", item_r2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"polymorpheusOutlet\", ctx_r2.itemContent)(\"polymorpheusOutletContext\", ctx_r2.getContext(item_r2, elementRef_r5));\n  }\n}\nfunction TuiDataListWrapperComponent_tui_data_list_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tui-data-list\", 3);\n    i0.ɵɵtemplate(1, TuiDataListWrapperComponent_tui_data_list_0_button_1_Template, 4, 4, \"button\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"emptyContent\", ctx_r2.emptyContent)(\"size\", ctx_r2.size);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.$cast(ctx_r2.items));\n  }\n}\nfunction TuiDataListWrapperComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tui-loader\", 8);\n  }\n}\nconst _c0 = [\"labels\", \"\"];\nfunction TuiDataListGroupWrapperComponent_tui_data_list_0_tui_opt_group_1_button_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const text_r4 = ctx.polymorpheusOutlet;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", text_r4, \" \");\n  }\n}\nfunction TuiDataListGroupWrapperComponent_tui_data_list_0_tui_opt_group_1_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 7, 1);\n    i0.ɵɵlistener(\"click\", function TuiDataListGroupWrapperComponent_tui_data_list_0_tui_opt_group_1_button_1_Template_button_click_0_listener() {\n      const item_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r2.itemClick.emit(item_r2));\n    });\n    i0.ɵɵtemplate(2, TuiDataListGroupWrapperComponent_tui_data_list_0_tui_opt_group_1_button_1_ng_container_2_Template, 2, 1, \"ng-container\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const elementRef_r5 = i0.ɵɵreference(1);\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.disabledItemHandler(item_r2))(\"value\", item_r2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"polymorpheusOutlet\", ctx_r2.itemContent)(\"polymorpheusOutletContext\", ctx_r2.getContext(item_r2, elementRef_r5));\n  }\n}\nfunction TuiDataListGroupWrapperComponent_tui_data_list_0_tui_opt_group_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tui-opt-group\", 5);\n    i0.ɵɵtemplate(1, TuiDataListGroupWrapperComponent_tui_data_list_0_tui_opt_group_1_button_1_Template, 3, 4, \"button\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r6 = ctx.$implicit;\n    const index_r7 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"label\", ctx_r2.labels[index_r7]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", group_r6);\n  }\n}\nfunction TuiDataListGroupWrapperComponent_tui_data_list_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tui-data-list\", 3);\n    i0.ɵɵtemplate(1, TuiDataListGroupWrapperComponent_tui_data_list_0_tui_opt_group_1_Template, 2, 2, \"tui-opt-group\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"emptyContent\", ctx_r2.emptyContent)(\"size\", ctx_r2.size);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.items);\n  }\n}\nfunction TuiDataListGroupWrapperComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tui-loader\", 9);\n  }\n}\nconst _c1 = \"[_nghost-%COMP%]{display:block}.t-content[_ngcontent-%COMP%]{flex:1;min-inline-size:0}.t-loader[_ngcontent-%COMP%]{margin:.75rem 0}\";\nclass TuiDataListWrapperComponent {\n  constructor() {\n    this.itemsHandlers = inject(TUI_ITEMS_HANDLERS);\n    this.optionsQuery = EMPTY_QUERY;\n    this.items = [];\n    this.disabledItemHandler = this.itemsHandlers.disabledItemHandler;\n    this.size = tuiInjectDataListSize();\n    this.itemClick = new EventEmitter();\n    this.itemContent = ({\n      $implicit\n    }) => this.itemsHandlers.stringify($implicit);\n  }\n  getContext($implicit, {\n    nativeElement\n  }) {\n    return {\n      $implicit,\n      active: tuiIsNativeFocused(nativeElement)\n    };\n  }\n  getOptions(includeDisabled = false) {\n    return this.optionsQuery.filter(({\n      disabled\n    }) => includeDisabled || !disabled).map(({\n      value\n    }) => value).filter(tuiIsPresent);\n  }\n  $cast(items) {\n    return items;\n  }\n  static {\n    this.ɵfac = function TuiDataListWrapperComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiDataListWrapperComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiDataListWrapperComponent,\n      selectors: [[\"tui-data-list-wrapper\", 3, \"labels\", \"\"]],\n      viewQuery: function TuiDataListWrapperComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(TuiOption, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.optionsQuery = _t);\n        }\n      },\n      inputs: {\n        items: \"items\",\n        disabledItemHandler: \"disabledItemHandler\",\n        emptyContent: \"emptyContent\",\n        size: \"size\",\n        itemContent: \"itemContent\"\n      },\n      outputs: {\n        itemClick: \"itemClick\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([tuiAsDataListAccessor(TuiDataListWrapperComponent)]), i0.ɵɵStandaloneFeature],\n      decls: 3,\n      vars: 2,\n      consts: [[\"loading\", \"\"], [\"elementRef\", \"elementRef\"], [3, \"emptyContent\", \"size\", 4, \"ngIf\", \"ngIfElse\"], [3, \"emptyContent\", \"size\"], [\"automation-id\", \"tui-data-list-wrapper__option\", \"tuiElement\", \"\", \"tuiOption\", \"\", \"type\", \"button\", 3, \"disabled\", \"value\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"automation-id\", \"tui-data-list-wrapper__option\", \"tuiElement\", \"\", \"tuiOption\", \"\", \"type\", \"button\", 3, \"click\", \"disabled\", \"value\"], [1, \"t-content\"], [4, \"polymorpheusOutlet\", \"polymorpheusOutletContext\"], [\"automation-id\", \"tui-data-list-wrapper__loader\", 1, \"t-loader\"]],\n      template: function TuiDataListWrapperComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, TuiDataListWrapperComponent_tui_data_list_0_Template, 2, 3, \"tui-data-list\", 2)(1, TuiDataListWrapperComponent_ng_template_1_Template, 1, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          const loading_r6 = i0.ɵɵreference(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.items)(\"ngIfElse\", loading_r6);\n        }\n      },\n      dependencies: [NgForOf, NgIf, PolymorpheusOutlet, i1.TuiDataListComponent, i1.TuiOption, TuiElement, TuiLoader],\n      styles: [\"[_nghost-%COMP%]{display:block}.t-content[_ngcontent-%COMP%]{flex:1;min-inline-size:0}.t-loader[_ngcontent-%COMP%]{margin:.75rem 0}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiDataListWrapperComponent, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      selector: 'tui-data-list-wrapper:not([labels])',\n      imports: [NgForOf, NgIf, PolymorpheusOutlet, TuiDataList, TuiElement, TuiLoader],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [tuiAsDataListAccessor(TuiDataListWrapperComponent)],\n      template: \"<tui-data-list\\n    *ngIf=\\\"items; else loading\\\"\\n    [emptyContent]=\\\"emptyContent\\\"\\n    [size]=\\\"size\\\"\\n>\\n    <button\\n        *ngFor=\\\"let item of $cast(items)\\\"\\n        #elementRef=\\\"elementRef\\\"\\n        automation-id=\\\"tui-data-list-wrapper__option\\\"\\n        tuiElement\\n        tuiOption\\n        type=\\\"button\\\"\\n        [disabled]=\\\"disabledItemHandler(item)\\\"\\n        [value]=\\\"item\\\"\\n        (click)=\\\"itemClick.emit(item)\\\"\\n    >\\n        <span class=\\\"t-content\\\">\\n            <ng-container *polymorpheusOutlet=\\\"itemContent as text; context: getContext(item, elementRef)\\\">\\n                {{ text }}\\n            </ng-container>\\n        </span>\\n    </button>\\n</tui-data-list>\\n<ng-template #loading>\\n    <tui-loader\\n        automation-id=\\\"tui-data-list-wrapper__loader\\\"\\n        class=\\\"t-loader\\\"\\n    />\\n</ng-template>\\n\",\n      styles: [\":host{display:block}.t-content{flex:1;min-inline-size:0}.t-loader{margin:.75rem 0}\\n\"]\n    }]\n  }], null, {\n    optionsQuery: [{\n      type: ViewChildren,\n      args: [forwardRef(() => TuiOption)]\n    }],\n    items: [{\n      type: Input\n    }],\n    disabledItemHandler: [{\n      type: Input\n    }],\n    emptyContent: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    itemClick: [{\n      type: Output\n    }],\n    itemContent: [{\n      type: Input\n    }]\n  });\n})();\nclass TuiDataListGroupWrapperComponent extends TuiDataListWrapperComponent {\n  constructor() {\n    super(...arguments);\n    this.labels = [];\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiDataListGroupWrapperComponent_BaseFactory;\n      return function TuiDataListGroupWrapperComponent_Factory(__ngFactoryType__) {\n        return (ɵTuiDataListGroupWrapperComponent_BaseFactory || (ɵTuiDataListGroupWrapperComponent_BaseFactory = i0.ɵɵgetInheritedFactory(TuiDataListGroupWrapperComponent)))(__ngFactoryType__ || TuiDataListGroupWrapperComponent);\n      };\n    })();\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiDataListGroupWrapperComponent,\n      selectors: [[\"tui-data-list-wrapper\", \"labels\", \"\"]],\n      inputs: {\n        labels: \"labels\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([tuiAsDataListAccessor(TuiDataListGroupWrapperComponent)]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      attrs: _c0,\n      decls: 3,\n      vars: 2,\n      consts: [[\"loading\", \"\"], [\"elementRef\", \"elementRef\"], [3, \"emptyContent\", \"size\", 4, \"ngIf\", \"ngIfElse\"], [3, \"emptyContent\", \"size\"], [3, \"label\", 4, \"ngFor\", \"ngForOf\"], [3, \"label\"], [\"automation-id\", \"tui-data-list-wrapper__option\", \"tuiElement\", \"\", \"tuiOption\", \"\", \"type\", \"button\", 3, \"disabled\", \"value\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"automation-id\", \"tui-data-list-wrapper__option\", \"tuiElement\", \"\", \"tuiOption\", \"\", \"type\", \"button\", 3, \"click\", \"disabled\", \"value\"], [4, \"polymorpheusOutlet\", \"polymorpheusOutletContext\"], [1, \"t-loader\"]],\n      template: function TuiDataListGroupWrapperComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, TuiDataListGroupWrapperComponent_tui_data_list_0_Template, 2, 3, \"tui-data-list\", 2)(1, TuiDataListGroupWrapperComponent_ng_template_1_Template, 1, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          const loading_r8 = i0.ɵɵreference(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.items)(\"ngIfElse\", loading_r8);\n        }\n      },\n      dependencies: [NgForOf, NgIf, PolymorpheusOutlet, i1.TuiDataListComponent, i1.TuiOption, i1.TuiOptGroup, TuiElement, TuiLoader],\n      styles: [_c1],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiDataListGroupWrapperComponent, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      selector: 'tui-data-list-wrapper[labels]',\n      imports: [NgForOf, NgIf, PolymorpheusOutlet, TuiDataList, TuiElement, TuiLoader],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [tuiAsDataListAccessor(TuiDataListGroupWrapperComponent)],\n      template: \"<tui-data-list\\n    *ngIf=\\\"items; else loading\\\"\\n    [emptyContent]=\\\"emptyContent\\\"\\n    [size]=\\\"size\\\"\\n>\\n    <tui-opt-group\\n        *ngFor=\\\"let group of items; let index = index\\\"\\n        [label]=\\\"labels[index]\\\"\\n    >\\n        <button\\n            *ngFor=\\\"let item of group\\\"\\n            #elementRef=\\\"elementRef\\\"\\n            automation-id=\\\"tui-data-list-wrapper__option\\\"\\n            tuiElement\\n            tuiOption\\n            type=\\\"button\\\"\\n            [disabled]=\\\"disabledItemHandler(item)\\\"\\n            [value]=\\\"item\\\"\\n            (click)=\\\"itemClick.emit(item)\\\"\\n        >\\n            <ng-container *polymorpheusOutlet=\\\"itemContent as text; context: getContext(item, elementRef)\\\">\\n                {{ text }}\\n            </ng-container>\\n        </button>\\n    </tui-opt-group>\\n</tui-data-list>\\n<ng-template #loading>\\n    <tui-loader class=\\\"t-loader\\\" />\\n</ng-template>\\n\",\n      styles: [\":host{display:block}.t-content{flex:1;min-inline-size:0}.t-loader{margin:.75rem 0}\\n\"]\n    }]\n  }], null, {\n    labels: [{\n      type: Input\n    }]\n  });\n})();\nconst TuiDataListWrapper = [TuiDataListWrapperComponent, TuiDataListGroupWrapperComponent, TuiDataListDirective];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiDataListGroupWrapperComponent, TuiDataListWrapper, TuiDataListWrapperComponent };\n", "import { tuiRound, tuiClamp } from '@taiga-ui/cdk/utils/math';\nimport * as i0 from '@angular/core';\nimport { inject, INJECTOR, ChangeDetectorRef, Component, ChangeDetectionStrategy, Input, forwardRef, Directive, ContentChild } from '@angular/core';\nimport { TuiControl } from '@taiga-ui/cdk/classes';\nimport { tuiFallbackValueProvider } from '@taiga-ui/cdk/tokens';\nimport { __decorate } from 'tslib';\nimport { NgControl, NgModel } from '@angular/forms';\nimport { tuiWatch, tuiTypedFromEvent } from '@taiga-ui/cdk/observables';\nimport { tuiInjectElement } from '@taiga-ui/cdk/utils/dom';\nimport { tuiCreateToken, tuiProvideOptions, tuiPure } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { take, merge, tap, map, combineLatest, filter } from 'rxjs';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DOCUMENT, AsyncPipe, NgIf } from '@angular/common';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { TUI_TRUE_HANDLER, TUI_FALSE_HANDLER } from '@taiga-ui/cdk/constants';\n\n/**\n * Used as a limit for eliminating JS issues with floating point math\n */\nconst _c0 = [\"type\", \"range\", \"tuiSlider\", \"\"];\nconst _c1 = [\"tuiSliderThumbLabel\", \"\"];\nconst _c2 = [\"*\", [[\"input\", \"type\", \"range\"]]];\nconst _c3 = [\"*\", \"input[type=range]\"];\nfunction TuiSliderThumbLabel_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst TUI_FLOATING_PRECISION = 7;\nfunction tuiFindKeyStepsBoundariesByFn(keySteps, fn) {\n  const keyStepUpperIndex = keySteps.findIndex((keyStep, i) => i && fn(keyStep));\n  const lowerStep = keySteps[keyStepUpperIndex - 1] || keySteps[0];\n  const upperStep = keySteps[keyStepUpperIndex] || keySteps[keySteps.length - 1] || [0, 0];\n  return [lowerStep, upperStep];\n}\nfunction tuiPercentageToKeyStepValue(valuePercentage, keySteps) {\n  const [[lowerStepPercent, lowerStepValue], [upperStepPercent, upperStepValue]] = tuiFindKeyStepsBoundariesByFn(keySteps, ([keyStepPercentage, _]) => valuePercentage <= keyStepPercentage);\n  const ratio = (valuePercentage - lowerStepPercent) / (upperStepPercent - lowerStepPercent);\n  const controlValue = (upperStepValue - lowerStepValue) * ratio + lowerStepValue;\n  return tuiRound(controlValue, TUI_FLOATING_PRECISION);\n}\nfunction tuiKeyStepValueToPercentage(value, keySteps) {\n  const [[lowerStepPercent, lowerStepValue], [upperStepPercent, upperStepValue]] = tuiFindKeyStepsBoundariesByFn(keySteps, ([_, keyStepValue]) => value <= keyStepValue);\n  const ratio = (value - lowerStepValue) / (upperStepValue - lowerStepValue) || 0;\n  return (upperStepPercent - lowerStepPercent) * ratio + lowerStepPercent;\n}\nconst TUI_SLIDER_DEFAULT_OPTIONS = {\n  size: 'm',\n  trackColor: 'var(--tui-background-neutral-2)'\n};\n/**\n * Default parameters for Slider component\n */\nconst TUI_SLIDER_OPTIONS = tuiCreateToken(TUI_SLIDER_DEFAULT_OPTIONS);\nfunction tuiSliderOptionsProvider(options) {\n  return tuiProvideOptions(TUI_SLIDER_OPTIONS, options, TUI_SLIDER_DEFAULT_OPTIONS);\n}\nclass TuiSliderComponent {\n  constructor() {\n    this.injector = inject(INJECTOR);\n    this.control = inject(NgControl, {\n      self: true,\n      optional: true\n    });\n    this.options = inject(TUI_SLIDER_OPTIONS);\n    this.size = this.options.size;\n    this.segments = 1;\n    this.el = tuiInjectElement();\n    if (this.control instanceof NgModel) {\n      /**\n       * The ValueAccessor.writeValue method is called twice on any value accessor during component initialization,\n       * when a control is bound using [(ngModel)], first time with a phantom null value.\n       * With `changeDetection: ChangeDetectionStrategy.OnPush` the second call of writeValue with real value don't re-render the view.\n       * ___\n       * See this {@link https://github.com/angular/angular/issues/14988 issue}\n       */\n      this.control.valueChanges?.pipe(tuiWatch(inject(ChangeDetectorRef)), take(1)).subscribe();\n    }\n  }\n  get valueRatio() {\n    return (this.value - this.min) / (this.max - this.min) || 0;\n  }\n  get min() {\n    return Number(this.el.min);\n  }\n  get max() {\n    return Number(this.el.max || 100);\n  }\n  get value() {\n    if (!this.hasKeySteps && this.control instanceof NgModel) {\n      /**\n       * If developer uses `[(ngModel)]` and programmatically change value,\n       * the `el.nativeElement.value` is equal to the previous value at this moment.\n       */\n      return this.control.viewModel;\n    }\n    return Number(this.el.value) || 0;\n  }\n  set value(newValue) {\n    this.el.value = `${newValue}`;\n  }\n  get hasKeySteps() {\n    return Boolean(this.injector.get(TuiSliderKeySteps, null));\n  }\n  get segmentWidth() {\n    return 100 / Math.max(1, this.segments);\n  }\n  get step() {\n    return Number(this.el.step) || 1;\n  }\n  static {\n    this.ɵfac = function TuiSliderComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiSliderComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiSliderComponent,\n      selectors: [[\"input\", \"type\", \"range\", \"tuiSlider\", \"\"]],\n      hostVars: 7,\n      hostBindings: function TuiSliderComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"input\", function TuiSliderComponent_input_HostBindingHandler() {\n            return 0;\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"data-size\", ctx.size);\n          i0.ɵɵstyleProp(\"--tui-slider-track-color\", ctx.options.trackColor)(\"--tui-slider-segment-width\", ctx.segmentWidth, \"%\")(\"--tui-slider-fill-ratio\", ctx.valueRatio);\n        }\n      },\n      inputs: {\n        size: \"size\",\n        segments: \"segments\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      attrs: _c0,\n      decls: 0,\n      vars: 0,\n      template: function TuiSliderComponent_Template(rf, ctx) {},\n      styles: [\"[_nghost-%COMP%]{position:relative;display:block;inline-size:100%;color:var(--tui-background-accent-1);cursor:pointer;-webkit-appearance:none;appearance:none;block-size:.125rem;padding:.4375rem 0;background-color:transparent;background-clip:content-box;outline:none;border-radius:var(--tui-radius-m)}[_nghost-%COMP%]:active{cursor:ew-resize}[_nghost-%COMP%]:disabled{opacity:var(--tui-disabled-opacity);cursor:auto}[data-size=s][_nghost-%COMP%]:not(:disabled):before{transition-property:transform,opacity;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:absolute;top:.25rem;left:calc(var(--tui-slider-fill-ratio) * 100% - var(--tui-slider-fill-ratio) * .5rem);inline-size:.5rem;block-size:.5rem;border-radius:50%;transform:var(--tui-slider-thumb-transform, scale(1));content:\\\"\\\";cursor:ew-resize;background:currentColor;opacity:0}[data-size=s][_nghost-%COMP%]:active:before{opacity:.2;transform:var(--tui-slider-thumb-transform, scale(1)) scale(2.33)}[data-size=m][_nghost-%COMP%]:not(:disabled):before{transition-property:transform,opacity;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:absolute;top:.125rem;left:calc(var(--tui-slider-fill-ratio) * 100% - var(--tui-slider-fill-ratio) * .75rem);inline-size:.75rem;block-size:.75rem;border-radius:50%;transform:var(--tui-slider-thumb-transform, scale(1));content:\\\"\\\";cursor:ew-resize;background:currentColor;opacity:0}[data-size=m][_nghost-%COMP%]:active:before{opacity:.2;transform:var(--tui-slider-thumb-transform, scale(1)) scale(2.33)}[_nghost-%COMP%]::-webkit-slider-container{border-radius:inherit}[data-size=m][_nghost-%COMP%]::-webkit-slider-runnable-track{block-size:.125rem;border-radius:inherit;background-repeat:no-repeat;background-color:var(--tui-slider-track-color);background-image:linear-gradient(to right,currentColor 0px .5rem,transparent .25rem),repeating-linear-gradient(to right,var(--tui-text-tertiary) 0 .25rem,transparent 0 var(--tui-slider-segment-width)),linear-gradient(to right,currentColor calc(100% * var(--tui-slider-fill-ratio)),transparent calc(100% * var(--tui-slider-fill-ratio)));background-position-x:0,.25rem,0;background-size:calc(100% - .75rem),calc(100% - .75rem),auto}[data-size=s][_nghost-%COMP%]::-webkit-slider-runnable-track{block-size:.125rem;border-radius:inherit;background-repeat:no-repeat;background-color:var(--tui-slider-track-color);background-image:linear-gradient(to right,currentColor 0px .375rem,transparent .25rem),repeating-linear-gradient(to right,var(--tui-text-tertiary) 0 .25rem,transparent 0 var(--tui-slider-segment-width)),linear-gradient(to right,currentColor calc(100% * var(--tui-slider-fill-ratio)),transparent calc(100% * var(--tui-slider-fill-ratio)));background-position-x:0,.125rem,0;background-size:calc(100% - .5rem),calc(100% - .5rem),auto}[data-size=m][_nghost-%COMP%]::-moz-range-track{block-size:.125rem;border-radius:inherit;background-repeat:no-repeat;background-color:var(--tui-slider-track-color);background-image:linear-gradient(to right,currentColor 0px .5rem,transparent .25rem),repeating-linear-gradient(to right,var(--tui-text-tertiary) 0 .25rem,transparent 0 var(--tui-slider-segment-width));background-position-x:0,.25rem;background-size:calc(100% - .75rem)}[data-size=s][_nghost-%COMP%]::-moz-range-track{block-size:.125rem;border-radius:inherit;background-repeat:no-repeat;background-color:var(--tui-slider-track-color);background-image:linear-gradient(to right,currentColor 0px .375rem,transparent .25rem),repeating-linear-gradient(to right,var(--tui-text-tertiary) 0 .25rem,transparent 0 var(--tui-slider-segment-width));background-position-x:0,.125rem;background-size:calc(100% - .5rem)}[data-size=m][_nghost-%COMP%]::-webkit-slider-thumb{-webkit-transition-property:transform;transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;isolation:isolate;-webkit-appearance:none;appearance:none;background-color:currentColor;box-shadow:none;border-radius:50%;block-size:.75rem;inline-size:.75rem;box-sizing:content-box;background-clip:content-box;border:.125rem solid transparent;border-inline-start:0;border-inline-end:0;transform:var(--tui-slider-thumb-transform, scale(1));margin-top:-.4375rem}:not(:disabled)[data-size=m][_nghost-%COMP%]::-webkit-slider-thumb{cursor:ew-resize}:not(:disabled)[data-size=m][_nghost-%COMP%]::-webkit-slider-thumb:hover, :active:not(:disabled)[data-size=m][_nghost-%COMP%]::-webkit-slider-thumb{transform:var(--tui-slider-thumb-transform, scale(1)) scale(1.333)}:focus-visible[data-size=m][_nghost-%COMP%]::-webkit-slider-thumb{box-shadow:0 0 0 2px inset var(--tui-border-focus)}[data-size=s][_nghost-%COMP%]::-webkit-slider-thumb{-webkit-transition-property:transform;transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;isolation:isolate;-webkit-appearance:none;appearance:none;background-color:currentColor;box-shadow:none;border-radius:50%;block-size:.5rem;inline-size:.5rem;box-sizing:content-box;background-clip:content-box;border:.25rem solid transparent;border-inline-start:0;border-inline-end:0;transform:var(--tui-slider-thumb-transform, scale(1));margin-top:-.4375rem}:not(:disabled)[data-size=s][_nghost-%COMP%]::-webkit-slider-thumb{cursor:ew-resize}:not(:disabled)[data-size=s][_nghost-%COMP%]::-webkit-slider-thumb:hover, :active:not(:disabled)[data-size=s][_nghost-%COMP%]::-webkit-slider-thumb{transform:var(--tui-slider-thumb-transform, scale(1)) scale(1.5)}:focus-visible[data-size=s][_nghost-%COMP%]::-webkit-slider-thumb{box-shadow:0 0 0 2px inset var(--tui-border-focus)}[data-size=m][_nghost-%COMP%]::-moz-range-thumb{-moz-transition-property:transform;transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;isolation:isolate;-webkit-appearance:none;appearance:none;background-color:currentColor;box-shadow:none;border-radius:50%;block-size:.75rem;inline-size:.75rem;box-sizing:content-box;background-clip:content-box;border:.125rem solid transparent;border-inline-start:0;border-inline-end:0;transform:var(--tui-slider-thumb-transform, scale(1))}:not(:disabled)[data-size=m][_nghost-%COMP%]::-moz-range-thumb{cursor:ew-resize}:not(:disabled)[data-size=m][_nghost-%COMP%]::-moz-range-thumb:hover, :active:not(:disabled)[data-size=m][_nghost-%COMP%]::-moz-range-thumb{transform:var(--tui-slider-thumb-transform, scale(1)) scale(1.333)}:focus-visible[data-size=m][_nghost-%COMP%]::-moz-range-thumb{box-shadow:0 0 0 2px inset var(--tui-border-focus)}[data-size=s][_nghost-%COMP%]::-moz-range-thumb{-moz-transition-property:transform;transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;isolation:isolate;-webkit-appearance:none;appearance:none;background-color:currentColor;box-shadow:none;border-radius:50%;block-size:.5rem;inline-size:.5rem;box-sizing:content-box;background-clip:content-box;border:.25rem solid transparent;border-inline-start:0;border-inline-end:0;transform:var(--tui-slider-thumb-transform, scale(1))}:not(:disabled)[data-size=s][_nghost-%COMP%]::-moz-range-thumb{cursor:ew-resize}:not(:disabled)[data-size=s][_nghost-%COMP%]::-moz-range-thumb:hover, :active:not(:disabled)[data-size=s][_nghost-%COMP%]::-moz-range-thumb{transform:var(--tui-slider-thumb-transform, scale(1)) scale(1.5)}:focus-visible[data-size=s][_nghost-%COMP%]::-moz-range-thumb{box-shadow:0 0 0 2px inset var(--tui-border-focus)}[_nghost-%COMP%]::-moz-range-progress{border-radius:inherit}[_nghost-%COMP%]::-moz-range-progress{block-size:.125rem;background:currentColor;border-start-end-radius:0;border-end-end-radius:0}\"],\n      changeDetection: 0\n    });\n  }\n}\n__decorate([tuiPure], TuiSliderComponent.prototype, \"hasKeySteps\", null);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiSliderComponent, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      selector: 'input[type=range][tuiSlider]',\n      template: '',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        /**\n         * For change detection.\n         * Webkit does not have built-in method for customization of filling progress (as Firefox).\n         * We draw filling of progress by `background: linear-gradient(...)` of the track.\n         * This function triggers change detection (for {@link valueRatio} getter) when we drag thumb of the input.\n         */\n        '(input)': '0',\n        '[style.--tui-slider-track-color]': 'options.trackColor',\n        '[style.--tui-slider-segment-width.%]': 'segmentWidth',\n        '[style.--tui-slider-fill-ratio]': 'valueRatio',\n        '[attr.data-size]': 'size'\n      },\n      styles: [\":host{position:relative;display:block;inline-size:100%;color:var(--tui-background-accent-1);cursor:pointer;-webkit-appearance:none;appearance:none;block-size:.125rem;padding:.4375rem 0;background-color:transparent;background-clip:content-box;outline:none;border-radius:var(--tui-radius-m)}:host:active{cursor:ew-resize}:host:disabled{opacity:var(--tui-disabled-opacity);cursor:auto}:host[data-size=s]:not(:disabled):before{transition-property:transform,opacity;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:absolute;top:.25rem;left:calc(var(--tui-slider-fill-ratio) * 100% - var(--tui-slider-fill-ratio) * .5rem);inline-size:.5rem;block-size:.5rem;border-radius:50%;transform:var(--tui-slider-thumb-transform, scale(1));content:\\\"\\\";cursor:ew-resize;background:currentColor;opacity:0}:host[data-size=s]:active:before{opacity:.2;transform:var(--tui-slider-thumb-transform, scale(1)) scale(2.33)}:host[data-size=m]:not(:disabled):before{transition-property:transform,opacity;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:absolute;top:.125rem;left:calc(var(--tui-slider-fill-ratio) * 100% - var(--tui-slider-fill-ratio) * .75rem);inline-size:.75rem;block-size:.75rem;border-radius:50%;transform:var(--tui-slider-thumb-transform, scale(1));content:\\\"\\\";cursor:ew-resize;background:currentColor;opacity:0}:host[data-size=m]:active:before{opacity:.2;transform:var(--tui-slider-thumb-transform, scale(1)) scale(2.33)}:host::-webkit-slider-container{border-radius:inherit}:host[data-size=m]::-webkit-slider-runnable-track{block-size:.125rem;border-radius:inherit;background-repeat:no-repeat;background-color:var(--tui-slider-track-color);background-image:linear-gradient(to right,currentColor 0px .5rem,transparent .25rem),repeating-linear-gradient(to right,var(--tui-text-tertiary) 0 .25rem,transparent 0 var(--tui-slider-segment-width)),linear-gradient(to right,currentColor calc(100% * var(--tui-slider-fill-ratio)),transparent calc(100% * var(--tui-slider-fill-ratio)));background-position-x:0,.25rem,0;background-size:calc(100% - .75rem),calc(100% - .75rem),auto}:host[data-size=s]::-webkit-slider-runnable-track{block-size:.125rem;border-radius:inherit;background-repeat:no-repeat;background-color:var(--tui-slider-track-color);background-image:linear-gradient(to right,currentColor 0px .375rem,transparent .25rem),repeating-linear-gradient(to right,var(--tui-text-tertiary) 0 .25rem,transparent 0 var(--tui-slider-segment-width)),linear-gradient(to right,currentColor calc(100% * var(--tui-slider-fill-ratio)),transparent calc(100% * var(--tui-slider-fill-ratio)));background-position-x:0,.125rem,0;background-size:calc(100% - .5rem),calc(100% - .5rem),auto}:host[data-size=m]::-moz-range-track{block-size:.125rem;border-radius:inherit;background-repeat:no-repeat;background-color:var(--tui-slider-track-color);background-image:linear-gradient(to right,currentColor 0px .5rem,transparent .25rem),repeating-linear-gradient(to right,var(--tui-text-tertiary) 0 .25rem,transparent 0 var(--tui-slider-segment-width));background-position-x:0,.25rem;background-size:calc(100% - .75rem)}:host[data-size=s]::-moz-range-track{block-size:.125rem;border-radius:inherit;background-repeat:no-repeat;background-color:var(--tui-slider-track-color);background-image:linear-gradient(to right,currentColor 0px .375rem,transparent .25rem),repeating-linear-gradient(to right,var(--tui-text-tertiary) 0 .25rem,transparent 0 var(--tui-slider-segment-width));background-position-x:0,.125rem;background-size:calc(100% - .5rem)}:host[data-size=m]::-webkit-slider-thumb{-webkit-transition-property:transform;transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;isolation:isolate;-webkit-appearance:none;appearance:none;background-color:currentColor;box-shadow:none;border-radius:50%;block-size:.75rem;inline-size:.75rem;box-sizing:content-box;background-clip:content-box;border:.125rem solid transparent;border-inline-start:0;border-inline-end:0;transform:var(--tui-slider-thumb-transform, scale(1));margin-top:-.4375rem}:not(:disabled):host[data-size=m]::-webkit-slider-thumb{cursor:ew-resize}:not(:disabled):host[data-size=m]::-webkit-slider-thumb:hover,:active:not(:disabled):host[data-size=m]::-webkit-slider-thumb{transform:var(--tui-slider-thumb-transform, scale(1)) scale(1.333)}:focus-visible:host[data-size=m]::-webkit-slider-thumb{box-shadow:0 0 0 2px inset var(--tui-border-focus)}:host[data-size=s]::-webkit-slider-thumb{-webkit-transition-property:transform;transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;isolation:isolate;-webkit-appearance:none;appearance:none;background-color:currentColor;box-shadow:none;border-radius:50%;block-size:.5rem;inline-size:.5rem;box-sizing:content-box;background-clip:content-box;border:.25rem solid transparent;border-inline-start:0;border-inline-end:0;transform:var(--tui-slider-thumb-transform, scale(1));margin-top:-.4375rem}:not(:disabled):host[data-size=s]::-webkit-slider-thumb{cursor:ew-resize}:not(:disabled):host[data-size=s]::-webkit-slider-thumb:hover,:active:not(:disabled):host[data-size=s]::-webkit-slider-thumb{transform:var(--tui-slider-thumb-transform, scale(1)) scale(1.5)}:focus-visible:host[data-size=s]::-webkit-slider-thumb{box-shadow:0 0 0 2px inset var(--tui-border-focus)}:host[data-size=m]::-moz-range-thumb{-moz-transition-property:transform;transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;isolation:isolate;-webkit-appearance:none;appearance:none;background-color:currentColor;box-shadow:none;border-radius:50%;block-size:.75rem;inline-size:.75rem;box-sizing:content-box;background-clip:content-box;border:.125rem solid transparent;border-inline-start:0;border-inline-end:0;transform:var(--tui-slider-thumb-transform, scale(1))}:not(:disabled):host[data-size=m]::-moz-range-thumb{cursor:ew-resize}:not(:disabled):host[data-size=m]::-moz-range-thumb:hover,:active:not(:disabled):host[data-size=m]::-moz-range-thumb{transform:var(--tui-slider-thumb-transform, scale(1)) scale(1.333)}:focus-visible:host[data-size=m]::-moz-range-thumb{box-shadow:0 0 0 2px inset var(--tui-border-focus)}:host[data-size=s]::-moz-range-thumb{-moz-transition-property:transform;transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;isolation:isolate;-webkit-appearance:none;appearance:none;background-color:currentColor;box-shadow:none;border-radius:50%;block-size:.5rem;inline-size:.5rem;box-sizing:content-box;background-clip:content-box;border:.25rem solid transparent;border-inline-start:0;border-inline-end:0;transform:var(--tui-slider-thumb-transform, scale(1))}:not(:disabled):host[data-size=s]::-moz-range-thumb{cursor:ew-resize}:not(:disabled):host[data-size=s]::-moz-range-thumb:hover,:active:not(:disabled):host[data-size=s]::-moz-range-thumb{transform:var(--tui-slider-thumb-transform, scale(1)) scale(1.5)}:focus-visible:host[data-size=s]::-moz-range-thumb{box-shadow:0 0 0 2px inset var(--tui-border-focus)}:host::-moz-range-progress{border-radius:inherit}:host::-moz-range-progress{block-size:.125rem;background:currentColor;border-start-end-radius:0;border-end-end-radius:0}\\n\"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    size: [{\n      type: Input\n    }],\n    segments: [{\n      type: Input\n    }],\n    hasKeySteps: []\n  });\n})();\nclass TuiSliderKeySteps extends TuiControl {\n  constructor() {\n    super(...arguments);\n    this.slider = inject(forwardRef(() => TuiSliderComponent));\n  }\n  writeValue(controlValue) {\n    if (controlValue === null) {\n      return;\n    }\n    const clampedControlValue = tuiClamp(controlValue, this.min, this.max);\n    ngDevMode && console.assert(controlValue === clampedControlValue, '\\n[SliderKeySteps]: You cannot programmatically set value which is less/more than min/max');\n    this.slider.value = this.transformToNativeValue(clampedControlValue);\n  }\n  get min() {\n    return this.keySteps[0][1];\n  }\n  get max() {\n    return this.keySteps[this.keySteps.length - 1]?.[1] ?? 0;\n  }\n  updateControlValue() {\n    this.onChange(tuiPercentageToKeyStepValue(this.slider.valueRatio * 100, this.keySteps));\n  }\n  transformToNativeValue(controlValue) {\n    const {\n      min,\n      max\n    } = this.slider;\n    const newValuePercentage = tuiKeyStepValueToPercentage(controlValue, this.keySteps);\n    return newValuePercentage * (max - min) / 100 + min;\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiSliderKeySteps_BaseFactory;\n      return function TuiSliderKeySteps_Factory(__ngFactoryType__) {\n        return (ɵTuiSliderKeySteps_BaseFactory || (ɵTuiSliderKeySteps_BaseFactory = i0.ɵɵgetInheritedFactory(TuiSliderKeySteps)))(__ngFactoryType__ || TuiSliderKeySteps);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiSliderKeySteps,\n      selectors: [[\"input\", \"tuiSlider\", \"\", \"keySteps\", \"\"]],\n      hostVars: 4,\n      hostBindings: function TuiSliderKeySteps_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"blur\", function TuiSliderKeySteps_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          })(\"input\", function TuiSliderKeySteps_input_HostBindingHandler() {\n            return ctx.updateControlValue();\n          })(\"change\", function TuiSliderKeySteps_change_HostBindingHandler() {\n            return ctx.updateControlValue();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"disabled\", ctx.disabled());\n          i0.ɵɵattribute(\"aria-valuenow\", ctx.value())(\"aria-valuemin\", ctx.min)(\"aria-valuemax\", ctx.max);\n        }\n      },\n      inputs: {\n        keySteps: \"keySteps\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([tuiFallbackValueProvider(0)]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiSliderKeySteps, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: 'input[tuiSlider][keySteps]',\n      providers: [tuiFallbackValueProvider(0)],\n      host: {\n        '[attr.aria-valuenow]': 'value()',\n        '[attr.aria-valuemin]': 'min',\n        '[attr.aria-valuemax]': 'max',\n        '[disabled]': 'disabled()',\n        '(blur)': 'onTouched()',\n        '(input)': 'updateControlValue()',\n        '(change)': 'updateControlValue()'\n      }\n    }]\n  }], null, {\n    keySteps: [{\n      type: Input\n    }]\n  });\n})();\nconst SLIDER_INTERACTION_KEYS = new Set(['ArrowDown', 'ArrowLeft', 'ArrowRight', 'ArrowUp', 'End', 'Home', 'PageDown', 'PageUp']);\n/**\n * Native <input type='range' readonly> doesn't work.\n * This directive imitates this native behaviour.\n */\nclass TuiSliderReadonly {\n  constructor() {\n    this.el = tuiInjectElement();\n    this.doc = inject(DOCUMENT);\n    this.readonly = true;\n    const touchStart$ = tuiTypedFromEvent(this.el, 'touchstart', {\n      passive: false\n    });\n    const touchMove$ = tuiTypedFromEvent(this.doc, 'touchmove', {\n      passive: false\n    });\n    const touchEnd$ = tuiTypedFromEvent(this.doc, 'touchend', {\n      passive: true\n    });\n    const shouldPreventMove$ = merge(touchStart$.pipe(tap(e => this.preventEvent(e)), map(TUI_TRUE_HANDLER)), touchEnd$.pipe(map(TUI_FALSE_HANDLER)));\n    /**\n     * @bad TODO think about another solution.\n     * Keep in mind that preventing touch event (on slider) inside `@HostListener('touchstart')` doesn't work for mobile chrome.\n     */\n    combineLatest([touchMove$, shouldPreventMove$]).pipe(filter(([_, shouldPreventMove]) => shouldPreventMove), takeUntilDestroyed()).subscribe(([moveEvent]) => this.preventEvent(moveEvent));\n  }\n  preventEvent(event) {\n    if (event.cancelable && this.readonly) {\n      event.preventDefault();\n    }\n  }\n  preventKeyboardInteraction(event) {\n    if (SLIDER_INTERACTION_KEYS.has(event.key)) {\n      this.preventEvent(event);\n    }\n  }\n  static {\n    this.ɵfac = function TuiSliderReadonly_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiSliderReadonly)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiSliderReadonly,\n      selectors: [[\"input\", \"tuiSlider\", \"\", \"readonly\", \"\"]],\n      hostBindings: function TuiSliderReadonly_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"keydown\", function TuiSliderReadonly_keydown_HostBindingHandler($event) {\n            return ctx.preventKeyboardInteraction($event);\n          })(\"mousedown\", function TuiSliderReadonly_mousedown_HostBindingHandler($event) {\n            return ctx.preventEvent($event);\n          });\n        }\n      },\n      inputs: {\n        readonly: [2, \"readonly\", \"readonly\", coerceBooleanProperty]\n      },\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiSliderReadonly, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: 'input[tuiSlider][readonly]',\n      host: {\n        '(keydown)': 'preventKeyboardInteraction($event)',\n        '(mousedown)': 'preventEvent($event)'\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    readonly: [{\n      type: Input,\n      args: [{\n        transform: coerceBooleanProperty\n      }]\n    }]\n  });\n})();\n\n/// <reference types=\"@taiga-ui/tsconfig/ng-dev-mode\" />\n/// <reference types=\"@taiga-ui/tsconfig/ng-dev-mode\" />\nclass TuiSliderThumbLabel {\n  ngAfterContentInit() {\n    ngDevMode && console.assert(Boolean(this.control?.valueChanges), '\\n[tuiSliderThumbLabel] expected <input tuiSlider type=\"range\" /> to use Angular Forms.\\n' + 'Use [(ngModel)] or [formControl] or formControlName for correct work.');\n  }\n  get size() {\n    return this.slider?.size || 'm';\n  }\n  get ratio() {\n    return this.slider?.valueRatio || 0;\n  }\n  get ghostLeft() {\n    return this.ratio * (this.slider?.el.offsetWidth || 0);\n  }\n  static {\n    this.ɵfac = function TuiSliderThumbLabel_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiSliderThumbLabel)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiSliderThumbLabel,\n      selectors: [[\"\", \"tuiSliderThumbLabel\", \"\"]],\n      contentQueries: function TuiSliderThumbLabel_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, TuiSliderComponent, 5);\n          i0.ɵɵcontentQuery(dirIndex, NgControl, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.slider = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.control = _t.first);\n        }\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      attrs: _c1,\n      ngContentSelectors: _c3,\n      decls: 5,\n      vars: 8,\n      consts: [[4, \"ngIf\"], [1, \"t-ghost\"]],\n      template: function TuiSliderThumbLabel_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c2);\n          i0.ɵɵtemplate(0, TuiSliderThumbLabel_ng_container_0_Template, 1, 0, \"ng-container\", 0);\n          i0.ɵɵpipe(1, \"async\");\n          i0.ɵɵelementStart(2, \"div\", 1);\n          i0.ɵɵprojection(3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵprojection(4, 1);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 6, ctx.control == null ? null : ctx.control.valueChanges));\n          i0.ɵɵadvance(2);\n          i0.ɵɵstyleProp(\"--tui-slider-thumb-ratio\", ctx.ratio)(\"left\", ctx.ghostLeft, \"px\");\n          i0.ɵɵattribute(\"data-size\", ctx.size);\n        }\n      },\n      dependencies: [AsyncPipe, NgIf],\n      styles: [\"[_nghost-%COMP%]{position:relative}.t-ghost[_ngcontent-%COMP%]{position:absolute;top:0;bottom:0;margin:auto;border-radius:50%;pointer-events:none}.t-ghost[data-size=s][_ngcontent-%COMP%]{inline-size:.5rem;block-size:.5rem;transform:translate(calc(var(--tui-slider-thumb-ratio) * -.5rem))}.t-ghost[data-size=m][_ngcontent-%COMP%]{inline-size:.75rem;block-size:.75rem;transform:translate(calc(var(--tui-slider-thumb-ratio) * -.75rem))}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiSliderThumbLabel, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      selector: '[tuiSliderThumbLabel]',\n      imports: [AsyncPipe, NgIf],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<ng-container *ngIf=\\\"control?.valueChanges | async\\\" />\\n\\n<div\\n    class=\\\"t-ghost\\\"\\n    [attr.data-size]=\\\"size\\\"\\n    [style.--tui-slider-thumb-ratio]=\\\"ratio\\\"\\n    [style.left.px]=\\\"ghostLeft\\\"\\n>\\n    <ng-content />\\n</div>\\n\\n<ng-content select=\\\"input[type=range]\\\" />\\n\",\n      styles: [\":host{position:relative}.t-ghost{position:absolute;top:0;bottom:0;margin:auto;border-radius:50%;pointer-events:none}.t-ghost[data-size=s]{inline-size:.5rem;block-size:.5rem;transform:translate(calc(var(--tui-slider-thumb-ratio) * -.5rem))}.t-ghost[data-size=m]{inline-size:.75rem;block-size:.75rem;transform:translate(calc(var(--tui-slider-thumb-ratio) * -.75rem))}\\n\"]\n    }]\n  }], null, {\n    slider: [{\n      type: ContentChild,\n      args: [TuiSliderComponent]\n    }],\n    control: [{\n      type: ContentChild,\n      args: [NgControl]\n    }]\n  });\n})();\nconst TuiSlider = [TuiSliderComponent, TuiSliderThumbLabel, TuiSliderKeySteps, TuiSliderReadonly];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_FLOATING_PRECISION, TUI_SLIDER_DEFAULT_OPTIONS, TUI_SLIDER_OPTIONS, TuiSlider, TuiSliderComponent, TuiSliderKeySteps, TuiSliderReadonly, TuiSliderThumbLabel, tuiKeyStepValueToPercentage, tuiPercentageToKeyStepValue, tuiSliderOptionsProvider };\n", "import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { inject, EventEmitter, Directive, Output, signal, computed, ElementRef, Component, ChangeDetectionStrategy, Input, ViewChildren } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { TuiControl } from '@taiga-ui/cdk/classes';\nimport { EMPTY_QUERY } from '@taiga-ui/cdk/constants';\nimport { tuiFallbackValueProvider } from '@taiga-ui/cdk/tokens';\nimport { tuiInjectElement } from '@taiga-ui/cdk/utils/dom';\nimport { tuiClamp, tuiRound, tuiQuantize } from '@taiga-ui/cdk/utils/math';\nimport { tuiPure } from '@taiga-ui/cdk/utils/miscellaneous';\nimport * as i3 from '@taiga-ui/kit/components/slider';\nimport { TUI_FLOATING_PRECISION, TUI_SLIDER_OPTIONS, tuiPercentageToKeyStepValue, tuiKeyStepValueToPercentage, TuiSliderComponent, TuiSlider } from '@taiga-ui/kit/components/slider';\nimport { DOCUMENT } from '@angular/common';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { tuiTypedFromEvent } from '@taiga-ui/cdk/observables';\nimport { merge, filter, map, tap, switchMap, startWith, takeUntil, repeat } from 'rxjs';\nconst _c0 = () => ({\n  standalone: true\n});\nclass TuiRangeChange {\n  constructor() {\n    this.doc = inject(DOCUMENT);\n    this.el = tuiInjectElement();\n    this.range = inject(TuiRange);\n    /**\n     * TODO replace with pointer events (when all supported browsers can handle them).\n     * Don't forget to use setPointerCapture instead of listening all doc events\n     */\n    this.pointerDown$ = tuiTypedFromEvent(this.el, 'pointerdown', {\n      passive: true,\n      capture: true\n    });\n    this.pointerMove$ = merge(tuiTypedFromEvent(this.doc, 'touchmove').pipe(filter(({\n      touches\n    }) => touches.length === 1), map(({\n      touches\n    }) => touches[0]), filter(event => !!event)), tuiTypedFromEvent(this.doc, 'mousemove'));\n    this.pointerUp$ = merge(tuiTypedFromEvent(this.doc, 'touchend', {\n      passive: true\n    }), tuiTypedFromEvent(this.doc, 'mouseup', {\n      passive: true\n    }));\n    this.activeThumbChange = new EventEmitter();\n    let activeThumb;\n    this.pointerDown$.pipe(tap(({\n      clientX,\n      target\n    }) => {\n      activeThumb = this.detectActiveThumb(clientX, target);\n      this.activeThumbChange.emit(activeThumb);\n      if (this.range.focusable) {\n        this.el.focus();\n      }\n    }), switchMap(event => this.pointerMove$.pipe(startWith(event))), map(({\n      clientX\n    }) => this.getFractionFromEvents(clientX ?? 0)), takeUntil(this.pointerUp$), repeat(), takeUntilDestroyed()).subscribe(fraction => {\n      const value = this.range.toValue(fraction);\n      this.range.processValue(value, activeThumb === 'right');\n    });\n  }\n  getFractionFromEvents(clickClientX) {\n    const hostRect = this.el.getBoundingClientRect();\n    const value = clickClientX - hostRect.left;\n    const total = hostRect.width;\n    return tuiClamp(tuiRound(value / total, TUI_FLOATING_PRECISION), 0, 1);\n  }\n  detectActiveThumb(clientX, target) {\n    const [leftSliderRef, rightSliderRef] = this.range.slidersRefs;\n    switch (target) {\n      case leftSliderRef?.nativeElement:\n        return 'left';\n      case rightSliderRef?.nativeElement:\n        return 'right';\n      default:\n        return this.findNearestActiveThumb(clientX);\n    }\n  }\n  findNearestActiveThumb(clientX) {\n    const fraction = this.getFractionFromEvents(clientX);\n    const deltaLeft = fraction * 100 - this.range.left();\n    const deltaRight = fraction * 100 - 100 + this.range.right();\n    return Math.abs(deltaLeft) > Math.abs(deltaRight) || deltaRight > 0 || this.range.left() === 0 && this.range.right() === 100 ? 'right' : 'left';\n  }\n  static {\n    this.ɵfac = function TuiRangeChange_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiRangeChange)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiRangeChange,\n      outputs: {\n        activeThumbChange: \"activeThumbChange\"\n      },\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiRangeChange, [{\n    type: Directive,\n    args: [{\n      standalone: true\n    }]\n  }], function () {\n    return [];\n  }, {\n    activeThumbChange: [{\n      type: Output\n    }]\n  });\n})();\nclass TuiRange extends TuiControl {\n  constructor() {\n    super(...arguments);\n    // TODO: refactor to signal inputs after Angular update\n    this.changes = signal(1);\n    this.el = tuiInjectElement();\n    this.options = inject(TUI_SLIDER_OPTIONS);\n    this.lastActiveThumb = 'right';\n    this.min = 0;\n    this.max = 100;\n    this.step = 1;\n    this.size = this.options.size;\n    this.segments = 1;\n    this.keySteps = null;\n    this.focusable = true;\n    this.margin = 0;\n    this.limit = Infinity;\n    this.slidersRefs = EMPTY_QUERY;\n    this.left = computed(() => this.toPercent(this.value()[0]));\n    this.right = computed(() => 100 - this.toPercent(this.value()[1]));\n  }\n  ngOnChanges() {\n    this.changes.set(this.changes() + 1);\n  }\n  processValue(value, right) {\n    if (right) {\n      this.updateEnd(value);\n    } else {\n      this.updateStart(value);\n    }\n    this.lastActiveThumb = right ? 'right' : 'left';\n  }\n  toValue(fraction) {\n    return tuiPercentageToKeyStepValue(tuiClamp(tuiQuantize(fraction, this.fractionStep), 0, 1) * 100, this.computedKeySteps);\n  }\n  get fractionStep() {\n    return this.step / (this.max - this.min);\n  }\n  get computedKeySteps() {\n    return this.computePureKeySteps(this.keySteps, this.min, this.max);\n  }\n  get segmentWidthRatio() {\n    return 1 / this.segments;\n  }\n  changeByStep(coefficient, target) {\n    const [sliderLeftRef, sliderRightRef] = this.slidersRefs;\n    const leftThumbElement = sliderLeftRef?.nativeElement;\n    const rightThumbElement = sliderRightRef?.nativeElement;\n    const isRightThumb = target === this.el ? this.lastActiveThumb === 'right' : target === rightThumbElement;\n    const activeThumbElement = isRightThumb ? rightThumbElement : leftThumbElement;\n    const previousValue = isRightThumb ? this.value()[1] : this.value()[0];\n    /** @bad TODO think about a solution without twice conversion */\n    const previousFraction = this.toPercent(previousValue) / 100;\n    const newFractionValue = previousFraction + coefficient * this.fractionStep;\n    this.processValue(this.toValue(newFractionValue), isRightThumb);\n    activeThumbElement?.focus();\n  }\n  toPercent(value) {\n    return this.changes() && tuiKeyStepValueToPercentage(value, this.computedKeySteps);\n  }\n  computePureKeySteps(keySteps, min, max) {\n    return keySteps || [[0, min], [100, max]];\n  }\n  updateStart(value) {\n    const newValue = Math.min(value, this.value()[1]);\n    const distance = this.value()[1] - newValue;\n    if (!this.checkDistance(distance)) {\n      return;\n    }\n    this.onChange([newValue, this.value()[1]]);\n  }\n  updateEnd(value) {\n    const newValue = Math.max(value, this.value()[0]);\n    const distance = newValue - this.value()[0];\n    if (!this.checkDistance(distance)) {\n      return;\n    }\n    this.onChange([this.value()[0], newValue]);\n  }\n  checkDistance(distance) {\n    return tuiClamp(distance, this.margin, this.limit) === distance;\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiRange_BaseFactory;\n      return function TuiRange_Factory(__ngFactoryType__) {\n        return (ɵTuiRange_BaseFactory || (ɵTuiRange_BaseFactory = i0.ɵɵgetInheritedFactory(TuiRange)))(__ngFactoryType__ || TuiRange);\n      };\n    })();\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiRange,\n      selectors: [[\"tui-range\"]],\n      viewQuery: function TuiRange_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(TuiSliderComponent, 5, ElementRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.slidersRefs = _t);\n        }\n      },\n      hostVars: 11,\n      hostBindings: function TuiRange_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"focusout\", function TuiRange_focusout_HostBindingHandler() {\n            return ctx.onTouched();\n          })(\"keydown.arrowUp.prevent\", function TuiRange_keydown_arrowUp_prevent_HostBindingHandler($event) {\n            return ctx.changeByStep(1, $event.target);\n          })(\"keydown.arrowRight.prevent\", function TuiRange_keydown_arrowRight_prevent_HostBindingHandler($event) {\n            return ctx.changeByStep(1, $event.target);\n          })(\"keydown.arrowLeft.prevent\", function TuiRange_keydown_arrowLeft_prevent_HostBindingHandler($event) {\n            return ctx.changeByStep(-1, $event.target);\n          })(\"keydown.arrowDown.prevent\", function TuiRange_keydown_arrowDown_prevent_HostBindingHandler($event) {\n            return ctx.changeByStep(-1, $event.target);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"data-size\", ctx.size)(\"tabindex\", -1)(\"aria-disabled\", ctx.disabled());\n          i0.ɵɵstyleProp(\"--left\", ctx.left(), \"%\")(\"--right\", ctx.right(), \"%\")(\"background\", ctx.options.trackColor);\n          i0.ɵɵclassProp(\"_disabled\", ctx.disabled());\n        }\n      },\n      inputs: {\n        min: \"min\",\n        max: \"max\",\n        step: \"step\",\n        size: \"size\",\n        segments: \"segments\",\n        keySteps: \"keySteps\",\n        focusable: \"focusable\",\n        margin: \"margin\",\n        limit: \"limit\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([tuiFallbackValueProvider([0, 0])]), i0.ɵɵHostDirectivesFeature([{\n        directive: TuiRangeChange,\n        outputs: [\"activeThumbChange\", \"activeThumbChange\"]\n      }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      decls: 3,\n      vars: 22,\n      consts: [[1, \"t-track\"], [\"automation-id\", \"tui-range__left\", \"readonly\", \"\", \"step\", \"any\", \"tuiSlider\", \"\", \"type\", \"range\", 1, \"t-thumb\", 3, \"disabled\", \"keySteps\", \"max\", \"min\", \"ngModel\", \"ngModelOptions\", \"size\", \"tabIndex\"], [\"automation-id\", \"tui-range__right\", \"readonly\", \"\", \"step\", \"any\", \"tuiSlider\", \"\", \"type\", \"range\", 1, \"t-thumb\", 3, \"disabled\", \"keySteps\", \"max\", \"min\", \"ngModel\", \"ngModelOptions\", \"size\", \"tabIndex\"]],\n      template: function TuiRange_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵelement(1, \"input\", 1)(2, \"input\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"--bg-size-ratio\", 1 - ctx.segmentWidthRatio)(\"--segment-width\", ctx.segmentWidthRatio * 100, \"%\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.disabled())(\"keySteps\", ctx.computedKeySteps)(\"max\", ctx.max)(\"min\", ctx.min)(\"ngModel\", ctx.value()[0])(\"ngModelOptions\", i0.ɵɵpureFunction0(20, _c0))(\"size\", ctx.size)(\"tabIndex\", ctx.focusable ? 0 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.disabled())(\"keySteps\", ctx.computedKeySteps)(\"max\", ctx.max)(\"min\", ctx.min)(\"ngModel\", ctx.value()[1])(\"ngModelOptions\", i0.ɵɵpureFunction0(21, _c0))(\"size\", ctx.size)(\"tabIndex\", ctx.focusable ? 0 : -1);\n        }\n      },\n      dependencies: [FormsModule, i2.DefaultValueAccessor, i2.RangeValueAccessor, i2.NgControlStatus, i2.NgModel, i3.TuiSliderComponent, i3.TuiSliderKeySteps, i3.TuiSliderReadonly],\n      styles: [\"[_nghost-%COMP%]{position:relative;display:block;block-size:.125rem;border-radius:var(--tui-radius-m);background:var(--tui-border-normal);cursor:pointer;outline:none;margin:.4375rem 0;touch-action:pan-x}[_nghost-%COMP%]:active{cursor:ew-resize}[_nghost-%COMP%]:after{content:\\\"\\\";position:absolute;top:-.4375rem;bottom:-.4375rem;inline-size:100%}._disabled[_nghost-%COMP%]{opacity:var(--tui-disabled-opacity);pointer-events:none}[data-size=s][_nghost-%COMP%]   .t-track[_ngcontent-%COMP%]{position:relative;margin:0 .25rem;block-size:100%}[data-size=s][_nghost-%COMP%]   .t-track[_ngcontent-%COMP%]:before{content:\\\"\\\";position:absolute;top:0;left:max(calc(var(--left) - 1px),1px);right:max(var(--right),1px);block-size:100%;background:var(--tui-background-accent-1);margin:0 -.25rem}[data-size=s][_nghost-%COMP%]   .t-track[_ngcontent-%COMP%]:after{position:absolute;top:0;left:0;bottom:0;right:0;content:\\\"\\\";left:.125rem;right:.375rem;background-image:repeating-linear-gradient(to right,var(--tui-text-tertiary) 0 .25rem,transparent 0 calc(var(--segment-width) / var(--bg-size-ratio)));background-position-x:right;background-repeat:no-repeat;background-size:calc(100% * var(--bg-size-ratio))}[data-size=m][_nghost-%COMP%]   .t-track[_ngcontent-%COMP%]{position:relative;margin:0 .375rem;block-size:100%}[data-size=m][_nghost-%COMP%]   .t-track[_ngcontent-%COMP%]:before{content:\\\"\\\";position:absolute;top:0;left:max(calc(var(--left) - 1px),1px);right:max(var(--right),1px);block-size:100%;background:var(--tui-background-accent-1);margin:0 -.375rem}[data-size=m][_nghost-%COMP%]   .t-track[_ngcontent-%COMP%]:after{position:absolute;top:0;left:0;bottom:0;right:0;content:\\\"\\\";left:.25rem;right:.5rem;background-image:repeating-linear-gradient(to right,var(--tui-text-tertiary) 0 .25rem,transparent 0 calc(var(--segment-width) / var(--bg-size-ratio)));background-position-x:right;background-repeat:no-repeat;background-size:calc(100% * var(--bg-size-ratio))}.t-thumb[_ngcontent-%COMP%]{pointer-events:none;position:absolute;top:.0625rem;left:0;right:0;z-index:1;transform:translateY(-50%)}.t-thumb[_ngcontent-%COMP%]::-webkit-slider-thumb{pointer-events:all}.t-thumb[_ngcontent-%COMP%]::-moz-range-thumb{pointer-events:all}input[type=range].t-thumb[_ngcontent-%COMP%]::-webkit-slider-runnable-track{background:transparent}input[type=range].t-thumb[_ngcontent-%COMP%]::-moz-range-track{background:transparent}input[type=range].t-thumb[_ngcontent-%COMP%]::-moz-range-progress{background:transparent}input[type=range].t-thumb[_ngcontent-%COMP%]::-ms-track{background:transparent}input[type=range].t-thumb[_ngcontent-%COMP%]::-ms-fill-lower{background:transparent}.t-thumb[_ngcontent-%COMP%]:last-of-type{--tui-slider-thumb-transform: translateX(50%) translateX(1px)}.t-thumb[_ngcontent-%COMP%]:first-of-type{--tui-slider-thumb-transform: translateX(-50%) translateX(-1px)}._disabled[_nghost-%COMP%]   .t-thumb[_ngcontent-%COMP%]{opacity:1}\"],\n      changeDetection: 0\n    });\n  }\n}\n__decorate([tuiPure], TuiRange.prototype, \"computePureKeySteps\", null);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiRange, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      selector: 'tui-range',\n      imports: [FormsModule, TuiSlider],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [tuiFallbackValueProvider([0, 0])],\n      hostDirectives: [{\n        directive: TuiRangeChange,\n        outputs: ['activeThumbChange']\n      }],\n      host: {\n        '[attr.data-size]': 'size',\n        '[attr.tabindex]': '-1',\n        '[attr.aria-disabled]': 'disabled()',\n        '[style.--left.%]': 'left()',\n        '[style.--right.%]': 'right()',\n        '[style.background]': 'options.trackColor',\n        '[class._disabled]': 'disabled()',\n        '(focusout)': 'onTouched()',\n        '(keydown.arrowUp.prevent)': 'changeByStep(1, $event.target)',\n        '(keydown.arrowRight.prevent)': 'changeByStep(1, $event.target)',\n        '(keydown.arrowLeft.prevent)': 'changeByStep(-1, $event.target)',\n        '(keydown.arrowDown.prevent)': 'changeByStep(-1, $event.target)'\n      },\n      template: \"<div\\n    class=\\\"t-track\\\"\\n    [style.--bg-size-ratio]=\\\"1 - segmentWidthRatio\\\"\\n    [style.--segment-width.%]=\\\"segmentWidthRatio * 100\\\"\\n>\\n    <input\\n        automation-id=\\\"tui-range__left\\\"\\n        readonly\\n        step=\\\"any\\\"\\n        tuiSlider\\n        type=\\\"range\\\"\\n        class=\\\"t-thumb\\\"\\n        [disabled]=\\\"disabled()\\\"\\n        [keySteps]=\\\"computedKeySteps\\\"\\n        [max]=\\\"max\\\"\\n        [min]=\\\"min\\\"\\n        [ngModel]=\\\"value()[0]\\\"\\n        [ngModelOptions]=\\\"{standalone: true}\\\"\\n        [size]=\\\"size\\\"\\n        [tabIndex]=\\\"focusable ? 0 : -1\\\"\\n    />\\n    <input\\n        automation-id=\\\"tui-range__right\\\"\\n        readonly\\n        step=\\\"any\\\"\\n        tuiSlider\\n        type=\\\"range\\\"\\n        class=\\\"t-thumb\\\"\\n        [disabled]=\\\"disabled()\\\"\\n        [keySteps]=\\\"computedKeySteps\\\"\\n        [max]=\\\"max\\\"\\n        [min]=\\\"min\\\"\\n        [ngModel]=\\\"value()[1]\\\"\\n        [ngModelOptions]=\\\"{standalone: true}\\\"\\n        [size]=\\\"size\\\"\\n        [tabIndex]=\\\"focusable ? 0 : -1\\\"\\n    />\\n</div>\\n\",\n      styles: [\":host{position:relative;display:block;block-size:.125rem;border-radius:var(--tui-radius-m);background:var(--tui-border-normal);cursor:pointer;outline:none;margin:.4375rem 0;touch-action:pan-x}:host:active{cursor:ew-resize}:host:after{content:\\\"\\\";position:absolute;top:-.4375rem;bottom:-.4375rem;inline-size:100%}:host._disabled{opacity:var(--tui-disabled-opacity);pointer-events:none}:host[data-size=s] .t-track{position:relative;margin:0 .25rem;block-size:100%}:host[data-size=s] .t-track:before{content:\\\"\\\";position:absolute;top:0;left:max(calc(var(--left) - 1px),1px);right:max(var(--right),1px);block-size:100%;background:var(--tui-background-accent-1);margin:0 -.25rem}:host[data-size=s] .t-track:after{position:absolute;top:0;left:0;bottom:0;right:0;content:\\\"\\\";left:.125rem;right:.375rem;background-image:repeating-linear-gradient(to right,var(--tui-text-tertiary) 0 .25rem,transparent 0 calc(var(--segment-width) / var(--bg-size-ratio)));background-position-x:right;background-repeat:no-repeat;background-size:calc(100% * var(--bg-size-ratio))}:host[data-size=m] .t-track{position:relative;margin:0 .375rem;block-size:100%}:host[data-size=m] .t-track:before{content:\\\"\\\";position:absolute;top:0;left:max(calc(var(--left) - 1px),1px);right:max(var(--right),1px);block-size:100%;background:var(--tui-background-accent-1);margin:0 -.375rem}:host[data-size=m] .t-track:after{position:absolute;top:0;left:0;bottom:0;right:0;content:\\\"\\\";left:.25rem;right:.5rem;background-image:repeating-linear-gradient(to right,var(--tui-text-tertiary) 0 .25rem,transparent 0 calc(var(--segment-width) / var(--bg-size-ratio)));background-position-x:right;background-repeat:no-repeat;background-size:calc(100% * var(--bg-size-ratio))}.t-thumb{pointer-events:none;position:absolute;top:.0625rem;left:0;right:0;z-index:1;transform:translateY(-50%)}.t-thumb::-webkit-slider-thumb{pointer-events:all}.t-thumb::-moz-range-thumb{pointer-events:all}input[type=range].t-thumb::-webkit-slider-runnable-track{background:transparent}input[type=range].t-thumb::-moz-range-track{background:transparent}input[type=range].t-thumb::-moz-range-progress{background:transparent}input[type=range].t-thumb::-ms-track{background:transparent}input[type=range].t-thumb::-ms-fill-lower{background:transparent}.t-thumb:last-of-type{--tui-slider-thumb-transform: translateX(50%) translateX(1px)}.t-thumb:first-of-type{--tui-slider-thumb-transform: translateX(-50%) translateX(-1px)}:host._disabled .t-thumb{opacity:1}\\n\"]\n    }]\n  }], null, {\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    step: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    segments: [{\n      type: Input\n    }],\n    keySteps: [{\n      type: Input\n    }],\n    focusable: [{\n      type: Input\n    }],\n    margin: [{\n      type: Input\n    }],\n    limit: [{\n      type: Input\n    }],\n    slidersRefs: [{\n      type: ViewChildren,\n      args: [TuiSliderComponent, {\n        read: ElementRef\n      }]\n    }],\n    computePureKeySteps: []\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiRange, TuiRangeChange };\n", "import * as i0 from '@angular/core';\nimport { Pipe } from '@angular/core';\nclass TuiStringifyContentPipe {\n  transform(stringify) {\n    return ({\n      $implicit\n    }) => stringify($implicit);\n  }\n  static {\n    this.ɵfac = function TuiStringifyContentPipe_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiStringifyContentPipe)();\n    };\n  }\n  static {\n    this.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n      name: \"tuiStringifyContent\",\n      type: TuiStringifyContentPipe,\n      pure: true,\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiStringifyContentPipe, [{\n    type: Pipe,\n    args: [{\n      standalone: true,\n      name: 'tuiStringifyContent'\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiStringifyContentPipe };\n", "import { maskitoUpdateElement, MASKITO_DEFAULT_OPTIONS, maskitoTransform } from '@maskito/core';\n\n/**\n * Clamps a value between two inclusive limits\n *\n * @param value\n * @param min lower limit\n * @param max upper limit\n */\nfunction clamp(value, min, max) {\n  const clampedValue = Math.min(Number(max), Math.max(Number(min), Number(value)));\n  return value instanceof Date ? new Date(clampedValue) : clampedValue;\n}\nfunction countDigits(str) {\n  return str.replaceAll(/\\W/g, '').length;\n}\nfunction appendDate(initialDate, {\n  day,\n  month,\n  year\n} = {}) {\n  const date = new Date(initialDate);\n  if (day) {\n    date.setDate(date.getDate() + day);\n  }\n  if (month) {\n    date.setMonth(date.getMonth() + month);\n  }\n  if (year) {\n    date.setFullYear(date.getFullYear() + year);\n  }\n  return date;\n}\nconst getDateSegmentValueLength = dateString => {\n  var _a, _b, _c, _d, _e, _f;\n  return {\n    day: (_b = (_a = dateString.match(/d/g)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0,\n    month: (_d = (_c = dateString.match(/m/g)) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0,\n    year: (_f = (_e = dateString.match(/y/g)) === null || _e === void 0 ? void 0 : _e.length) !== null && _f !== void 0 ? _f : 0\n  };\n};\nfunction dateToSegments(date) {\n  return {\n    day: String(date.getDate()).padStart(2, '0'),\n    month: String(date.getMonth() + 1).padStart(2, '0'),\n    year: String(date.getFullYear()).padStart(4, '0'),\n    hours: String(date.getHours()).padStart(2, '0'),\n    minutes: String(date.getMinutes()).padStart(2, '0'),\n    seconds: String(date.getSeconds()).padStart(2, '0'),\n    milliseconds: String(date.getMilliseconds()).padStart(3, '0')\n  };\n}\nfunction getFirstCompleteDate(dateString, dateModeTemplate) {\n  const digitsInDate = countDigits(dateModeTemplate);\n  const [completeDate = ''] = new RegExp(`(\\\\D*\\\\d){${digitsInDate}}`).exec(dateString) || [];\n  return completeDate;\n}\nfunction isDateStringComplete(dateString, dateModeTemplate) {\n  if (dateString.length < dateModeTemplate.length) {\n    return false;\n  }\n  return dateString.split(/\\D/).every(segment => !/^0+$/.exec(segment));\n}\nfunction parseDateRangeString(dateRange, dateModeTemplate, rangeSeparator) {\n  const digitsInDate = countDigits(dateModeTemplate);\n  return dateRange.replace(rangeSeparator, '').match(new RegExp(`(\\\\D*\\\\d[^\\\\d\\\\s]*){1,${digitsInDate}}`, 'g')) || [];\n}\nfunction parseDateString(dateString, fullMode) {\n  const cleanMode = fullMode.replaceAll(/[^dmy]/g, '');\n  const onlyDigitsDate = dateString.replaceAll(/\\D+/g, '');\n  const dateSegments = {\n    day: onlyDigitsDate.slice(cleanMode.indexOf('d'), cleanMode.lastIndexOf('d') + 1),\n    month: onlyDigitsDate.slice(cleanMode.indexOf('m'), cleanMode.lastIndexOf('m') + 1),\n    year: onlyDigitsDate.slice(cleanMode.indexOf('y'), cleanMode.lastIndexOf('y') + 1)\n  };\n  return Object.fromEntries(Object.entries(dateSegments).filter(([_, value]) => Boolean(value)).sort(([a], [b]) => fullMode.toLowerCase().indexOf(a.slice(0, 1)) > fullMode.toLowerCase().indexOf(b.slice(0, 1)) ? 1 : -1));\n}\nfunction segmentsToDate(parsedDate, parsedTime) {\n  var _a, _b, _c, _d, _e, _f, _g;\n  const year = ((_a = parsedDate.year) === null || _a === void 0 ? void 0 : _a.length) === 2 ? `20${parsedDate.year}` : parsedDate.year;\n  const date = new Date(Number(year !== null && year !== void 0 ? year : '0'), Number((_b = parsedDate.month) !== null && _b !== void 0 ? _b : '1') - 1, Number((_c = parsedDate.day) !== null && _c !== void 0 ? _c : '1'), Number((_d = parsedTime === null || parsedTime === void 0 ? void 0 : parsedTime.hours) !== null && _d !== void 0 ? _d : '0'), Number((_e = parsedTime === null || parsedTime === void 0 ? void 0 : parsedTime.minutes) !== null && _e !== void 0 ? _e : '0'), Number((_f = parsedTime === null || parsedTime === void 0 ? void 0 : parsedTime.seconds) !== null && _f !== void 0 ? _f : '0'), Number((_g = parsedTime === null || parsedTime === void 0 ? void 0 : parsedTime.milliseconds) !== null && _g !== void 0 ? _g : '0'));\n  // needed for years less than 1900\n  date.setFullYear(Number(year !== null && year !== void 0 ? year : '0'));\n  return date;\n}\nconst DATE_TIME_SEPARATOR = ', ';\nfunction toDateString({\n  day,\n  month,\n  year,\n  hours,\n  minutes,\n  seconds,\n  milliseconds\n}, {\n  dateMode,\n  dateTimeSeparator = DATE_TIME_SEPARATOR,\n  timeMode\n}) {\n  var _a;\n  const safeYear = ((_a = dateMode.match(/y/g)) === null || _a === void 0 ? void 0 : _a.length) === 2 ? year === null || year === void 0 ? void 0 : year.slice(-2) : year;\n  const fullMode = dateMode + (timeMode ? dateTimeSeparator + timeMode : '');\n  return fullMode.replaceAll(/d+/g, day !== null && day !== void 0 ? day : '').replaceAll(/m+/g, month !== null && month !== void 0 ? month : '').replaceAll(/y+/g, safeYear !== null && safeYear !== void 0 ? safeYear : '').replaceAll(/H+/g, hours !== null && hours !== void 0 ? hours : '').replaceAll('MSS', milliseconds !== null && milliseconds !== void 0 ? milliseconds : '').replaceAll(/M+/g, minutes !== null && minutes !== void 0 ? minutes : '').replaceAll(/S+/g, seconds !== null && seconds !== void 0 ? seconds : '').replaceAll(/^\\D+/g, '').replaceAll(/\\D+$/g, '');\n}\nconst DATE_SEGMENTS_MAX_VALUES = {\n  day: 31,\n  month: 12,\n  year: 9999\n};\nconst DEFAULT_DECIMAL_PSEUDO_SEPARATORS = ['.', ',', 'б', 'ю'];\nconst DEFAULT_MIN_DATE = new Date('0001-01-01');\nconst DEFAULT_MAX_DATE = new Date('9999-12-31');\nconst DEFAULT_TIME_SEGMENT_MAX_VALUES = {\n  hours: 23,\n  minutes: 59,\n  seconds: 59,\n  milliseconds: 999\n};\nconst TIME_FIXED_CHARACTERS = [':', '.'];\nconst TIME_SEGMENT_VALUE_LENGTHS = {\n  hours: 2,\n  minutes: 2,\n  seconds: 2,\n  milliseconds: 3\n};\n\n/**\n * {@link https://unicode-table.com/en/00A0/ Non-breaking space}.\n */\nconst CHAR_NO_BREAK_SPACE = '\\u00A0';\n/**\n * {@link https://symbl.cc/en/200B/ Zero width space}.\n */\nconst CHAR_ZERO_WIDTH_SPACE = '\\u200B';\n/**\n * {@link https://unicode-table.com/en/2013/ EN dash}\n * is used to indicate a range of numbers or a span of time.\n * @example 2006–2022\n */\nconst CHAR_EN_DASH = '\\u2013';\n/**\n * {@link https://unicode-table.com/en/2014/ EM dash}\n * is used to mark a break in a sentence.\n * @example Taiga UI — powerful set of open source components for Angular\n * ___\n * Don't confuse with {@link CHAR_EN_DASH} or {@link CHAR_HYPHEN}!\n */\nconst CHAR_EM_DASH = '\\u2014';\n/**\n * {@link https://unicode-table.com/en/002D/ Hyphen (minus sign)}\n * is used to combine words.\n * @example well-behaved\n * ___\n * Don't confuse with {@link CHAR_EN_DASH} or {@link CHAR_EM_DASH}!\n */\nconst CHAR_HYPHEN = '\\u002D';\n/**\n * {@link https://unicode-table.com/en/2212/ Minus}\n * is used as math operator symbol or before negative digits.\n * ---\n * Can be used as `&minus;`. Don't confuse with {@link CHAR_HYPHEN}\n */\nconst CHAR_MINUS = '\\u2212';\n/**\n * {@link https://symbl.cc/en/30FC/ Katakana-Hiragana Prolonged Sound Mark}\n * is used as prolonged sounds in Japanese.\n */\nconst CHAR_JP_HYPHEN = '\\u30FC';\n/**\n * {@link https://symbl.cc/en/003A/ Colon}\n * is a punctuation mark that connects parts of a text logically.\n * ---\n * is also used as separator in time.\n */\nconst CHAR_COLON = '\\u003A';\n/**\n * {@link https://symbl.cc/en/FF1A/ Full-width colon}\n * is a full-width punctuation mark used to separate parts of a text commonly in Japanese.\n */\nconst CHAR_JP_COLON = '\\uFF1A';\nfunction validateDateString({\n  dateString,\n  dateModeTemplate,\n  dateSegmentsSeparator,\n  offset,\n  selection: [from, to]\n}) {\n  const parsedDate = parseDateString(dateString, dateModeTemplate);\n  const dateSegments = Object.entries(parsedDate);\n  const validatedDateSegments = {};\n  for (const [segmentName, segmentValue] of dateSegments) {\n    const validatedDate = toDateString(validatedDateSegments, {\n      dateMode: dateModeTemplate\n    });\n    const maxSegmentValue = DATE_SEGMENTS_MAX_VALUES[segmentName];\n    const fantomSeparator = validatedDate.length && dateSegmentsSeparator.length;\n    const lastSegmentDigitIndex = offset + validatedDate.length + fantomSeparator + getDateSegmentValueLength(dateModeTemplate)[segmentName];\n    const isLastSegmentDigitAdded = lastSegmentDigitIndex >= from && lastSegmentDigitIndex === to;\n    if (isLastSegmentDigitAdded && Number(segmentValue) > Number(maxSegmentValue)) {\n      // 3|1.10.2010 => Type 9 => 3|1.10.2010\n      return {\n        validatedDateString: '',\n        updatedSelection: [from, to]\n      }; // prevent changes\n    }\n    if (isLastSegmentDigitAdded && Number(segmentValue) < 1) {\n      // 31.0|1.2010 => Type 0 => 31.0|1.2010\n      return {\n        validatedDateString: '',\n        updatedSelection: [from, to]\n      }; // prevent changes\n    }\n    validatedDateSegments[segmentName] = segmentValue;\n  }\n  const validatedDateString = toDateString(validatedDateSegments, {\n    dateMode: dateModeTemplate\n  });\n  const addedDateSegmentSeparators = validatedDateString.length - dateString.length;\n  return {\n    validatedDateString,\n    updatedSelection: [from + addedDateSegmentSeparators, to + addedDateSegmentSeparators]\n  };\n}\n\n/**\n * Copy-pasted solution from lodash\n * @see https://lodash.com/docs/4.17.15#escapeRegExp\n */\nconst reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\nconst reHasRegExpChar = new RegExp(reRegExpChar.source);\nfunction escapeRegExp(str) {\n  return str && reHasRegExpChar.test(str) ? str.replaceAll(reRegExpChar, String.raw`\\$&`) : str;\n}\nfunction extractAffixes(value, {\n  prefix,\n  postfix\n}) {\n  var _a, _b;\n  const prefixRegExp = new RegExp(`^${escapeRegExp(prefix)}`);\n  const postfixRegExp = new RegExp(`${escapeRegExp(postfix)}$`);\n  const [extractedPrefix = ''] = (_a = value.match(prefixRegExp)) !== null && _a !== void 0 ? _a : [];\n  const [extractedPostfix = ''] = (_b = value.match(postfixRegExp)) !== null && _b !== void 0 ? _b : [];\n  const cleanValue = value.replace(prefixRegExp, '').replace(postfixRegExp, '');\n  return {\n    extractedPrefix,\n    extractedPostfix,\n    cleanValue\n  };\n}\nfunction findCommonBeginningSubstr(a, b) {\n  let res = '';\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return res;\n    }\n    res += a[i];\n  }\n  return res;\n}\nfunction identity(x) {\n  return x;\n}\nfunction isEmpty(entity) {\n  return !entity || typeof entity === 'object' && Object.keys(entity).length === 0;\n}\nconst ALL_ZEROES_RE = /^0+$/;\nfunction padWithZeroesUntilValid(segmentValue, paddedMaxValue, prefixedZeroesCount = 0) {\n  const paddedSegmentValue = segmentValue.padEnd(paddedMaxValue.length, '0');\n  if (Number(paddedSegmentValue) <= Number(paddedMaxValue)) {\n    return {\n      validatedSegmentValue: segmentValue,\n      prefixedZeroesCount\n    };\n  }\n  if (paddedSegmentValue.endsWith('0')) {\n    // 00:|00 => Type 9 => 00:09|\n    return padWithZeroesUntilValid(`0${segmentValue.slice(0, paddedMaxValue.length - 1)}`, paddedMaxValue, prefixedZeroesCount + 1);\n  }\n  const valueWithoutLastChar = segmentValue.slice(0, paddedMaxValue.length - 1);\n  if (ALL_ZEROES_RE.exec(valueWithoutLastChar)) {\n    return {\n      validatedSegmentValue: '',\n      prefixedZeroesCount\n    };\n  }\n  // |19:00 => Type 2 => 2|0:00\n  return padWithZeroesUntilValid(`${valueWithoutLastChar}0`, paddedMaxValue, prefixedZeroesCount);\n}\n\n/**\n * Replace fullwidth colon with half width colon\n * @param fullWidthColon full width colon\n * @returns processed half width colon\n */\nfunction toHalfWidthColon(fullWidthColon) {\n  return fullWidthColon.replaceAll(new RegExp(CHAR_JP_COLON, 'g'), CHAR_COLON);\n}\n\n/**\n * Replace fullwidth numbers with half width number\n * @param fullWidthNumber full width number\n * @returns processed half width number\n */\nfunction toHalfWidthNumber(fullWidthNumber) {\n  return fullWidthNumber.replaceAll(/[０-９]/g, s => String.fromCharCode(s.charCodeAt(0) - 0xfee0));\n}\n\n/**\n * Convert full width colon (：) to half width one (:)\n */\nfunction createColonConvertPreprocessor() {\n  return ({\n    elementState,\n    data\n  }) => {\n    const {\n      value,\n      selection\n    } = elementState;\n    return {\n      elementState: {\n        selection,\n        value: toHalfWidthColon(value)\n      },\n      data: toHalfWidthColon(data)\n    };\n  };\n}\nfunction createDateSegmentsZeroPaddingPostprocessor({\n  dateModeTemplate,\n  dateSegmentSeparator,\n  splitFn,\n  uniteFn\n}) {\n  return ({\n    value,\n    selection\n  }) => {\n    var _a;\n    const [from, to] = selection;\n    const {\n      dateStrings,\n      restPart = ''\n    } = splitFn(value);\n    const validatedDateStrings = [];\n    let caretShift = 0;\n    dateStrings.forEach(dateString => {\n      const parsedDate = parseDateString(dateString, dateModeTemplate);\n      const dateSegments = Object.entries(parsedDate);\n      const validatedDateSegments = dateSegments.reduce((acc, [segmentName, segmentValue]) => {\n        const {\n          validatedSegmentValue,\n          prefixedZeroesCount\n        } = padWithZeroesUntilValid(segmentValue, `${DATE_SEGMENTS_MAX_VALUES[segmentName]}`);\n        caretShift += prefixedZeroesCount;\n        return Object.assign(Object.assign({}, acc), {\n          [segmentName]: validatedSegmentValue\n        });\n      }, {});\n      validatedDateStrings.push(toDateString(validatedDateSegments, {\n        dateMode: dateModeTemplate\n      }));\n    });\n    const validatedValue = uniteFn(validatedDateStrings, value) + (((_a = dateStrings[dateStrings.length - 1]) === null || _a === void 0 ? void 0 : _a.endsWith(dateSegmentSeparator)) ? dateSegmentSeparator : '') + restPart;\n    if (caretShift && validatedValue.slice(to + caretShift, to + caretShift + dateSegmentSeparator.length) === dateSegmentSeparator) {\n      /**\n       * If `caretShift` > 0, it means that time segment was padded with zero.\n       * It is only possible if any character insertion happens.\n       * If caret is before `dateSegmentSeparator` => it should be moved after `dateSegmentSeparator`.\n       */\n      caretShift += dateSegmentSeparator.length;\n    }\n    return {\n      selection: [from + caretShift, to + caretShift],\n      value: validatedValue\n    };\n  };\n}\n\n/**\n * It replaces pseudo range separators with valid one.\n * @example '01.01.2000_11.11.2000' -> '01.01.2000 - 01.01.2000'\n * @example '01.01.2000_23:59' -> '01.01.2000, 23:59'\n */\nfunction createFirstDateEndSeparatorPreprocessor({\n  dateModeTemplate,\n  firstDateEndSeparator,\n  dateSegmentSeparator,\n  pseudoFirstDateEndSeparators\n}) {\n  return ({\n    elementState,\n    data\n  }) => {\n    const {\n      value,\n      selection\n    } = elementState;\n    const firstCompleteDate = getFirstCompleteDate(value, dateModeTemplate);\n    const pseudoSeparators = pseudoFirstDateEndSeparators.filter(x => !firstDateEndSeparator.includes(x) && x !== dateSegmentSeparator);\n    const pseudoSeparatorsRE = new RegExp(`[${pseudoSeparators.join('')}]`, 'gi');\n    return {\n      elementState: {\n        selection,\n        value: firstCompleteDate && value.length > firstCompleteDate.length ? firstCompleteDate + value.slice(firstCompleteDate.length).replace(/^[\\D\\s]*/, firstDateEndSeparator) : value\n      },\n      data: data.replace(pseudoSeparatorsRE, firstDateEndSeparator)\n    };\n  };\n}\n\n/**\n * Convert full width numbers like １, ２ to half width numbers 1, 2\n */\nfunction createFullWidthToHalfWidthPreprocessor() {\n  return ({\n    elementState,\n    data\n  }) => {\n    const {\n      value,\n      selection\n    } = elementState;\n    return {\n      elementState: {\n        selection,\n        value: toHalfWidthNumber(value)\n      },\n      data: toHalfWidthNumber(data)\n    };\n  };\n}\nfunction raiseSegmentValueToMin(segments, fullMode) {\n  const segmentsLength = getDateSegmentValueLength(fullMode);\n  return Object.fromEntries(Object.entries(segments).map(([key, value]) => {\n    const segmentLength = segmentsLength[key];\n    return [key, value.length === segmentLength && /^0+$/.exec(value) ? '1'.padStart(segmentLength, '0') : value];\n  }));\n}\nfunction createMinMaxDatePostprocessor({\n  dateModeTemplate,\n  min = DEFAULT_MIN_DATE,\n  max = DEFAULT_MAX_DATE,\n  rangeSeparator = '',\n  dateSegmentSeparator = '.'\n}) {\n  return ({\n    value,\n    selection\n  }) => {\n    const endsWithRangeSeparator = rangeSeparator && value.endsWith(rangeSeparator);\n    const dateStrings = parseDateRangeString(value, dateModeTemplate, rangeSeparator);\n    let validatedValue = '';\n    for (const dateString of dateStrings) {\n      validatedValue += validatedValue ? rangeSeparator : '';\n      const parsedDate = parseDateString(dateString, dateModeTemplate);\n      if (!isDateStringComplete(dateString, dateModeTemplate)) {\n        const fixedDate = raiseSegmentValueToMin(parsedDate, dateModeTemplate);\n        const fixedValue = toDateString(fixedDate, {\n          dateMode: dateModeTemplate\n        });\n        const tail = dateString.endsWith(dateSegmentSeparator) ? dateSegmentSeparator : '';\n        validatedValue += fixedValue + tail;\n        continue;\n      }\n      const date = segmentsToDate(parsedDate);\n      const clampedDate = clamp(date, min, max);\n      validatedValue += toDateString(dateToSegments(clampedDate), {\n        dateMode: dateModeTemplate\n      });\n    }\n    return {\n      selection,\n      value: validatedValue + (endsWithRangeSeparator ? rangeSeparator : '')\n    };\n  };\n}\nfunction normalizeDatePreprocessor({\n  dateModeTemplate,\n  dateSegmentsSeparator,\n  rangeSeparator = '',\n  dateTimeSeparator = DATE_TIME_SEPARATOR\n}) {\n  return ({\n    elementState,\n    data\n  }) => {\n    var _a;\n    const separator = rangeSeparator ? new RegExp(`${rangeSeparator}|-`) : dateTimeSeparator;\n    const possibleDates = data.split(separator);\n    const dates = data.includes(dateTimeSeparator) ? [(_a = possibleDates[0]) !== null && _a !== void 0 ? _a : ''] : possibleDates;\n    if (dates.every(date => date.trim().split(/\\D/).filter(Boolean).length === dateModeTemplate.split(dateSegmentsSeparator).length)) {\n      const newData = dates.map(date => normalizeDateString(date, dateModeTemplate, dateSegmentsSeparator)).join(rangeSeparator);\n      return {\n        elementState,\n        data: `${newData}${data.includes(dateTimeSeparator) ? dateTimeSeparator + possibleDates[1] || '' : ''}`\n      };\n    }\n    return {\n      elementState,\n      data\n    };\n  };\n}\nfunction normalizeDateString(dateString, template, separator) {\n  const dateSegments = dateString.split(/\\D/).filter(Boolean);\n  const templateSegments = template.split(separator);\n  const normalizedSegments = dateSegments.map((segment, index) => {\n    var _a, _b;\n    return index === templateSegments.length - 1 ? segment : segment.padStart((_b = (_a = templateSegments[index]) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0, '0');\n  });\n  return normalizedSegments.join(separator);\n}\nfunction maskitoPostfixPostprocessorGenerator(postfix) {\n  const postfixRE = new RegExp(`${escapeRegExp(postfix)}$`);\n  return postfix ? ({\n    value,\n    selection\n  }, initialElementState) => {\n    if (!value && !initialElementState.value.endsWith(postfix)) {\n      // cases when developer wants input to be empty (programmatically)\n      return {\n        value,\n        selection\n      };\n    }\n    if (!value.endsWith(postfix) && !initialElementState.value.endsWith(postfix)) {\n      return {\n        selection,\n        value: value + postfix\n      };\n    }\n    const initialValueBeforePostfix = initialElementState.value.replace(postfixRE, '');\n    const postfixWasModified = initialElementState.selection[1] >= initialValueBeforePostfix.length;\n    const alreadyExistedValueBeforePostfix = findCommonBeginningSubstr(initialValueBeforePostfix, value);\n    return {\n      selection,\n      value: Array.from(postfix).reverse().reduce((newValue, char, index) => {\n        const i = newValue.length - 1 - index;\n        const isInitiallyMirroredChar = alreadyExistedValueBeforePostfix[i] === char && postfixWasModified;\n        return newValue[i] !== char || isInitiallyMirroredChar ? newValue.slice(0, i + 1) + char + newValue.slice(i + 1) : newValue;\n      }, value)\n    };\n  } : identity;\n}\nfunction maskitoPrefixPostprocessorGenerator(prefix) {\n  return prefix ? ({\n    value,\n    selection\n  }, initialElementState) => {\n    if (value.startsWith(prefix) ||\n    // already valid\n    !value && !initialElementState.value.startsWith(prefix) // cases when developer wants input to be empty\n    ) {\n      return {\n        value,\n        selection\n      };\n    }\n    const [from, to] = selection;\n    const prefixedValue = Array.from(prefix).reduce((modifiedValue, char, i) => modifiedValue[i] === char ? modifiedValue : modifiedValue.slice(0, i) + char + modifiedValue.slice(i), value);\n    const addedCharsCount = prefixedValue.length - value.length;\n    return {\n      selection: [from + addedCharsCount, to + addedCharsCount],\n      value: prefixedValue\n    };\n  } : identity;\n}\nfunction createValidDatePreprocessor({\n  dateModeTemplate,\n  dateSegmentsSeparator,\n  rangeSeparator = ''\n}) {\n  return ({\n    elementState,\n    data\n  }) => {\n    const {\n      value,\n      selection\n    } = elementState;\n    if (data === dateSegmentsSeparator) {\n      return {\n        elementState,\n        data: selection[0] === value.length ? data : ''\n      };\n    }\n    const newCharacters = data.replaceAll(new RegExp(`[^\\\\d${escapeRegExp(dateSegmentsSeparator)}${rangeSeparator}]`, 'g'), '');\n    if (!newCharacters) {\n      return {\n        elementState,\n        data: ''\n      };\n    }\n    const [from, rawTo] = selection;\n    let to = rawTo + data.length;\n    const newPossibleValue = value.slice(0, from) + newCharacters + value.slice(to);\n    const dateStrings = parseDateRangeString(newPossibleValue, dateModeTemplate, rangeSeparator);\n    let validatedValue = '';\n    const hasRangeSeparator = Boolean(rangeSeparator) && newPossibleValue.includes(rangeSeparator);\n    for (const dateString of dateStrings) {\n      const {\n        validatedDateString,\n        updatedSelection\n      } = validateDateString({\n        dateString,\n        dateModeTemplate,\n        dateSegmentsSeparator,\n        offset: validatedValue.length,\n        selection: [from, to]\n      });\n      if (dateString && !validatedDateString) {\n        return {\n          elementState,\n          data: ''\n        }; // prevent changes\n      }\n      to = updatedSelection[1];\n      validatedValue += hasRangeSeparator && !validatedValue ? validatedDateString + rangeSeparator : validatedDateString;\n    }\n    const newData = validatedValue.slice(from, to);\n    return {\n      elementState: {\n        selection,\n        value: validatedValue.slice(0, from) + newData.split(dateSegmentsSeparator).map(segment => '0'.repeat(segment.length)).join(dateSegmentsSeparator) + validatedValue.slice(to)\n      },\n      data: newData\n    };\n  };\n}\nfunction maskitoEventHandler(name, handler, eventListenerOptions) {\n  return (element, maskitoOptions) => {\n    const listener = () => handler(element, maskitoOptions);\n    element.addEventListener(name, listener, eventListenerOptions);\n    return () => element.removeEventListener(name, listener, eventListenerOptions);\n  };\n}\nfunction maskitoAddOnFocusPlugin(value) {\n  return maskitoEventHandler('focus', element => {\n    if (!element.value) {\n      maskitoUpdateElement(element, value);\n    }\n  });\n}\nfunction maskitoCaretGuard(guard) {\n  return element => {\n    const document = element.ownerDocument;\n    let isPointerDown = 0;\n    const onPointerDown = () => isPointerDown++;\n    const onPointerUp = () => {\n      isPointerDown = Math.max(--isPointerDown, 0);\n    };\n    const listener = () => {\n      var _a, _b;\n      if (!element.matches(':focus')) {\n        return;\n      }\n      if (isPointerDown) {\n        return document.addEventListener('mouseup', listener, {\n          once: true,\n          passive: true\n        });\n      }\n      const start = (_a = element.selectionStart) !== null && _a !== void 0 ? _a : 0;\n      const end = (_b = element.selectionEnd) !== null && _b !== void 0 ? _b : 0;\n      const [fromLimit, toLimit] = guard(element.value, [start, end]);\n      if (fromLimit > start || toLimit < end) {\n        element.setSelectionRange(clamp(start, fromLimit, toLimit), clamp(end, fromLimit, toLimit));\n      }\n    };\n    document.addEventListener('selectionchange', listener, {\n      passive: true\n    });\n    element.addEventListener('mousedown', onPointerDown, {\n      passive: true\n    });\n    document.addEventListener('mouseup', onPointerUp, {\n      passive: true\n    });\n    return () => {\n      document.removeEventListener('selectionchange', listener);\n      document.removeEventListener('mousedown', onPointerDown);\n      document.removeEventListener('mouseup', onPointerUp);\n    };\n  };\n}\nconst maskitoRejectEvent = element => {\n  const listener = () => {\n    const value = element.value;\n    element.addEventListener('beforeinput', event => {\n      if (event.defaultPrevented && value === element.value) {\n        element.dispatchEvent(new CustomEvent('maskitoReject', {\n          bubbles: true\n        }));\n      }\n    }, {\n      once: true\n    });\n  };\n  element.addEventListener('beforeinput', listener, true);\n  return () => element.removeEventListener('beforeinput', listener, true);\n};\nfunction maskitoRemoveOnBlurPlugin(value) {\n  return maskitoEventHandler('blur', element => {\n    if (element.value === value) {\n      maskitoUpdateElement(element, '');\n    }\n  });\n}\nconst noop = () => {};\nfunction createTimeSegmentsSteppingPlugin({\n  step,\n  fullMode,\n  timeSegmentMaxValues\n}) {\n  const segmentsIndexes = createTimeSegmentsIndexes(fullMode);\n  return step <= 0 ? noop : element => {\n    const listener = event => {\n      var _a;\n      if (event.key !== 'ArrowUp' && event.key !== 'ArrowDown') {\n        return;\n      }\n      event.preventDefault();\n      const selectionStart = (_a = element.selectionStart) !== null && _a !== void 0 ? _a : 0;\n      const activeSegment = getActiveSegment({\n        segmentsIndexes,\n        selectionStart\n      });\n      if (!activeSegment) {\n        return;\n      }\n      const updatedValue = updateSegmentValue({\n        selection: segmentsIndexes.get(activeSegment),\n        value: element.value,\n        toAdd: event.key === 'ArrowUp' ? step : -step,\n        max: timeSegmentMaxValues[activeSegment]\n      });\n      maskitoUpdateElement(element, {\n        value: updatedValue,\n        selection: [selectionStart, selectionStart]\n      });\n    };\n    element.addEventListener('keydown', listener);\n    return () => element.removeEventListener('keydown', listener);\n  };\n}\nfunction createTimeSegmentsIndexes(fullMode) {\n  return new Map([['hours', getSegmentRange(fullMode, 'HH')], ['milliseconds', getSegmentRange(fullMode, 'MSS')], ['minutes', getSegmentRange(fullMode, 'MM')], ['seconds', getSegmentRange(fullMode, 'SS')]]);\n}\nfunction getSegmentRange(mode, segment) {\n  const index = mode.indexOf(segment);\n  return index === -1 ? [-1, -1] : [index, index + segment.length];\n}\nfunction getActiveSegment({\n  segmentsIndexes,\n  selectionStart\n}) {\n  for (const [segmentName, segmentRange] of segmentsIndexes.entries()) {\n    const [from, to] = segmentRange;\n    if (from <= selectionStart && selectionStart <= to) {\n      return segmentName;\n    }\n  }\n  return null;\n}\nfunction updateSegmentValue({\n  selection,\n  value,\n  toAdd,\n  max\n}) {\n  const [from, to] = selection;\n  const segmentValue = Number(value.slice(from, to).padEnd(to - from, '0'));\n  const newSegmentValue = mod(segmentValue + toAdd, max + 1);\n  return value.slice(0, from) + String(newSegmentValue).padStart(to - from, '0') + value.slice(to, value.length);\n}\nfunction mod(value, max) {\n  if (value < 0) {\n    value += Math.floor(Math.abs(value) / max + 1) * max;\n  }\n  return value % max;\n}\nfunction maskitoWithPlaceholder(placeholder, focusedOnly = false) {\n  let lastClearValue = '';\n  let action = 'validation';\n  const removePlaceholder = value => {\n    for (let i = value.length - 1; i >= lastClearValue.length; i--) {\n      if (value[i] !== placeholder[i]) {\n        return value.slice(0, i + 1);\n      }\n    }\n    return value.slice(0, lastClearValue.length);\n  };\n  const plugins = [maskitoCaretGuard(value => [0, removePlaceholder(value).length])];\n  let focused = false;\n  if (focusedOnly) {\n    const focus = maskitoEventHandler('focus', element => {\n      focused = true;\n      maskitoUpdateElement(element, element.value + placeholder.slice(element.value.length));\n    }, {\n      capture: true\n    });\n    const blur = maskitoEventHandler('blur', element => {\n      focused = false;\n      maskitoUpdateElement(element, removePlaceholder(element.value));\n    }, {\n      capture: true\n    });\n    plugins.push(focus, blur);\n  }\n  return {\n    plugins,\n    removePlaceholder,\n    preprocessors: [({\n      elementState,\n      data\n    }, actionType) => {\n      action = actionType;\n      const {\n        value,\n        selection\n      } = elementState;\n      return {\n        elementState: {\n          selection,\n          value: removePlaceholder(value)\n        },\n        data\n      };\n    }],\n    postprocessors: [({\n      value,\n      selection\n    }, initialElementState) => {\n      lastClearValue = value;\n      const justPlaceholderRemoval = value + placeholder.slice(value.length, initialElementState.value.length) === initialElementState.value;\n      if (action === 'validation' && justPlaceholderRemoval) {\n        /**\n         * If `value` still equals to `initialElementState.value`,\n         * then it means that value is patched programmatically (from Maskito's plugin or externally).\n         * In this case, we don't want to mutate value and automatically add/remove placeholder.\n         * ___\n         * For example, developer wants to remove manually placeholder (+ do something else with value) on blur.\n         * Without this condition, placeholder will be unexpectedly added again.\n         */\n        return {\n          selection,\n          value: initialElementState.value\n        };\n      }\n      const newValue = focused || !focusedOnly ? value + placeholder.slice(value.length) : value;\n      if (newValue === initialElementState.value && action === 'deleteBackward') {\n        const [caretIndex] = initialElementState.selection;\n        return {\n          value: newValue,\n          selection: [caretIndex, caretIndex]\n        };\n      }\n      return {\n        value: newValue,\n        selection\n      };\n    }]\n  };\n}\nfunction createZeroPlaceholdersPreprocessor() {\n  return ({\n    elementState\n  }, actionType) => {\n    const {\n      value,\n      selection\n    } = elementState;\n    if (!value || isLastChar(value, selection)) {\n      return {\n        elementState\n      };\n    }\n    const [from, to] = selection;\n    const zeroes = value.slice(from, to).replaceAll(/\\d/g, '0');\n    const newValue = value.slice(0, from) + zeroes + value.slice(to);\n    if (actionType === 'validation' || actionType === 'insert' && from === to) {\n      return {\n        elementState: {\n          selection,\n          value: newValue\n        }\n      };\n    }\n    return {\n      elementState: {\n        selection: actionType === 'deleteBackward' || actionType === 'insert' ? [from, from] : [to, to],\n        value: newValue\n      }\n    };\n  };\n}\nfunction isLastChar(value, [_, to]) {\n  return to === value.length;\n}\nfunction maskitoDateOptionsGenerator({\n  mode,\n  separator = '.',\n  max,\n  min\n}) {\n  const dateModeTemplate = mode.split('/').join(separator);\n  return Object.assign(Object.assign({}, MASKITO_DEFAULT_OPTIONS), {\n    mask: Array.from(dateModeTemplate).map(char => separator.includes(char) ? char : /\\d/),\n    overwriteMode: 'replace',\n    preprocessors: [createFullWidthToHalfWidthPreprocessor(), createZeroPlaceholdersPreprocessor(), normalizeDatePreprocessor({\n      dateModeTemplate,\n      dateSegmentsSeparator: separator\n    }), createValidDatePreprocessor({\n      dateModeTemplate,\n      dateSegmentsSeparator: separator\n    })],\n    postprocessors: [createDateSegmentsZeroPaddingPostprocessor({\n      dateModeTemplate,\n      dateSegmentSeparator: separator,\n      splitFn: value => ({\n        dateStrings: [value]\n      }),\n      uniteFn: ([dateString = '']) => dateString\n    }), createMinMaxDatePostprocessor({\n      min,\n      max,\n      dateModeTemplate,\n      dateSegmentSeparator: separator\n    })]\n  });\n}\nconst POSSIBLE_DATE_RANGE_SEPARATOR = [CHAR_HYPHEN, CHAR_EN_DASH, CHAR_EM_DASH, CHAR_MINUS, CHAR_JP_HYPHEN];\nfunction createMinMaxRangeLengthPostprocessor({\n  dateModeTemplate,\n  rangeSeparator,\n  minLength,\n  maxLength,\n  max = DEFAULT_MAX_DATE\n}) {\n  if (isEmpty(minLength) && isEmpty(maxLength)) {\n    return identity;\n  }\n  return ({\n    value,\n    selection\n  }) => {\n    const dateStrings = parseDateRangeString(value, dateModeTemplate, rangeSeparator);\n    if (dateStrings.length !== 2 || dateStrings.some(date => !isDateStringComplete(date, dateModeTemplate))) {\n      return {\n        value,\n        selection\n      };\n    }\n    const [fromDate, toDate] = dateStrings.map(dateString => segmentsToDate(parseDateString(dateString, dateModeTemplate)));\n    if (!fromDate || !toDate) {\n      return {\n        value,\n        selection\n      };\n    }\n    const minDistantToDate = appendDate(fromDate, Object.assign(Object.assign({}, minLength), {\n      // 06.02.2023 - 07.02.2023 => {minLength: {day: 3}} => 06.02.2023 - 08.02.2023\n      // \"from\"-day is included in the range\n      day: (minLength === null || minLength === void 0 ? void 0 : minLength.day) && minLength.day - 1\n    }));\n    const maxDistantToDate = !isEmpty(maxLength) ? appendDate(fromDate, Object.assign(Object.assign({}, maxLength), {\n      day: (maxLength === null || maxLength === void 0 ? void 0 : maxLength.day) && maxLength.day - 1\n    })) : max;\n    const minLengthClampedToDate = clamp(toDate, minDistantToDate, max);\n    const minMaxLengthClampedToDate = minLengthClampedToDate > maxDistantToDate ? maxDistantToDate : minLengthClampedToDate;\n    return {\n      selection,\n      value: dateStrings[0] + rangeSeparator + toDateString(dateToSegments(minMaxLengthClampedToDate), {\n        dateMode: dateModeTemplate\n      })\n    };\n  };\n}\nfunction createSwapDatesPostprocessor({\n  dateModeTemplate,\n  rangeSeparator\n}) {\n  return ({\n    value,\n    selection\n  }) => {\n    const dateStrings = parseDateRangeString(value, dateModeTemplate, rangeSeparator);\n    const isDateRangeComplete = dateStrings.length === 2 && dateStrings.every(date => isDateStringComplete(date, dateModeTemplate));\n    const [from, to] = selection;\n    const caretAtTheEnd = from >= value.length;\n    const allValueSelected = from === 0 && to >= value.length; // dropping text inside with a pointer\n    if (!(caretAtTheEnd || allValueSelected) || !isDateRangeComplete) {\n      return {\n        value,\n        selection\n      };\n    }\n    const [fromDate, toDate] = dateStrings.map(dateString => segmentsToDate(parseDateString(dateString, dateModeTemplate)));\n    return {\n      selection,\n      value: fromDate && toDate && fromDate > toDate ? dateStrings.reverse().join(rangeSeparator) : value\n    };\n  };\n}\nfunction maskitoDateRangeOptionsGenerator({\n  mode,\n  min,\n  max,\n  minLength,\n  maxLength,\n  dateSeparator = '.',\n  rangeSeparator = `${CHAR_NO_BREAK_SPACE}${CHAR_EN_DASH}${CHAR_NO_BREAK_SPACE}`\n}) {\n  const dateModeTemplate = mode.split('/').join(dateSeparator);\n  const dateMask = Array.from(dateModeTemplate).map(char => dateSeparator.includes(char) ? char : /\\d/);\n  return Object.assign(Object.assign({}, MASKITO_DEFAULT_OPTIONS), {\n    mask: [...dateMask, ...Array.from(rangeSeparator), ...dateMask],\n    overwriteMode: 'replace',\n    preprocessors: [createFullWidthToHalfWidthPreprocessor(), createFirstDateEndSeparatorPreprocessor({\n      dateModeTemplate,\n      dateSegmentSeparator: dateSeparator,\n      firstDateEndSeparator: rangeSeparator,\n      pseudoFirstDateEndSeparators: POSSIBLE_DATE_RANGE_SEPARATOR\n    }), createZeroPlaceholdersPreprocessor(), normalizeDatePreprocessor({\n      dateModeTemplate,\n      rangeSeparator,\n      dateSegmentsSeparator: dateSeparator\n    }), createValidDatePreprocessor({\n      dateModeTemplate,\n      rangeSeparator,\n      dateSegmentsSeparator: dateSeparator\n    })],\n    postprocessors: [createDateSegmentsZeroPaddingPostprocessor({\n      dateModeTemplate,\n      dateSegmentSeparator: dateSeparator,\n      splitFn: value => ({\n        dateStrings: parseDateRangeString(value, dateModeTemplate, rangeSeparator)\n      }),\n      uniteFn: (validatedDateStrings, initialValue) => validatedDateStrings.reduce((acc, dateString, dateIndex) => acc + dateString + (!dateIndex && initialValue.includes(rangeSeparator) ? rangeSeparator : ''), '')\n    }), createMinMaxDatePostprocessor({\n      min,\n      max,\n      dateModeTemplate,\n      rangeSeparator,\n      dateSegmentSeparator: dateSeparator\n    }), createMinMaxRangeLengthPostprocessor({\n      dateModeTemplate,\n      minLength,\n      maxLength,\n      max,\n      rangeSeparator\n    }), createSwapDatesPostprocessor({\n      dateModeTemplate,\n      rangeSeparator\n    })]\n  });\n}\nfunction padTimeSegments(timeSegments, pad) {\n  return Object.fromEntries(Object.entries(timeSegments).map(([segmentName, segmentValue]) => [segmentName, pad(String(segmentValue), TIME_SEGMENT_VALUE_LENGTHS[segmentName])]));\n}\nfunction padEndTimeSegments(timeSegments) {\n  return padTimeSegments(timeSegments, (value, length) => value.padEnd(length, '0'));\n}\nfunction padStartTimeSegments(timeSegments) {\n  return padTimeSegments(timeSegments, (value, length) => value.padStart(length, '0'));\n}\nconst SEGMENT_FULL_NAME = {\n  HH: 'hours',\n  MM: 'minutes',\n  SS: 'seconds',\n  MSS: 'milliseconds'\n};\n/**\n * @param timeString can be with/without fixed characters\n */\nfunction parseTimeString(timeString, timeMode) {\n  const onlyDigits = timeString.replaceAll(/\\D+/g, '');\n  let offset = 0;\n  return Object.fromEntries(timeMode.split(/\\W/).map(segmentAbbr => {\n    const segmentValue = onlyDigits.slice(offset, offset + segmentAbbr.length);\n    offset += segmentAbbr.length;\n    return [SEGMENT_FULL_NAME[segmentAbbr], segmentValue];\n  }));\n}\nconst LEADING_NON_DIGITS = /^\\D*/;\nconst TRAILING_NON_DIGITS = /\\D*$/;\nfunction toTimeString({\n  hours = '',\n  minutes = '',\n  seconds = '',\n  milliseconds = ''\n}) {\n  return `${hours}:${minutes}:${seconds}.${milliseconds}`.replace(LEADING_NON_DIGITS, '').replace(TRAILING_NON_DIGITS, '');\n}\nconst TRAILING_TIME_SEGMENT_SEPARATOR_REG = new RegExp(`[${TIME_FIXED_CHARACTERS.map(escapeRegExp).join('')}]$`);\nfunction validateTimeString({\n  timeString,\n  paddedMaxValues,\n  offset,\n  selection: [from, to],\n  timeMode\n}) {\n  const parsedTime = parseTimeString(timeString, timeMode);\n  const possibleTimeSegments = Object.entries(parsedTime);\n  const validatedTimeSegments = {};\n  let paddedZeroes = 0;\n  for (const [segmentName, segmentValue] of possibleTimeSegments) {\n    const validatedTime = toTimeString(validatedTimeSegments);\n    const maxSegmentValue = paddedMaxValues[segmentName];\n    const fantomSeparator = validatedTime.length && 1;\n    const lastSegmentDigitIndex = offset + validatedTime.length + fantomSeparator + TIME_SEGMENT_VALUE_LENGTHS[segmentName];\n    const isLastSegmentDigitAdded = lastSegmentDigitIndex >= from && lastSegmentDigitIndex <= to;\n    if (isLastSegmentDigitAdded && Number(segmentValue) > Number(maxSegmentValue)) {\n      // 2|0:00 => Type 9 => 2|0:00\n      return {\n        validatedTimeString: '',\n        updatedTimeSelection: [from, to]\n      }; // prevent changes\n    }\n    const {\n      validatedSegmentValue,\n      prefixedZeroesCount\n    } = padWithZeroesUntilValid(segmentValue, `${maxSegmentValue}`);\n    paddedZeroes += prefixedZeroesCount;\n    validatedTimeSegments[segmentName] = validatedSegmentValue;\n  }\n  const [trailingSegmentSeparator = ''] = timeString.match(TRAILING_TIME_SEGMENT_SEPARATOR_REG) || [];\n  const validatedTimeString = toTimeString(validatedTimeSegments) + trailingSegmentSeparator;\n  const addedDateSegmentSeparators = Math.max(validatedTimeString.length - timeString.length, 0);\n  return {\n    validatedTimeString,\n    updatedTimeSelection: [from + paddedZeroes + addedDateSegmentSeparators, to + paddedZeroes + addedDateSegmentSeparators]\n  };\n}\nfunction isDateTimeStringComplete(dateTimeString, {\n  dateMode,\n  timeMode,\n  dateTimeSeparator = DATE_TIME_SEPARATOR\n}) {\n  var _a;\n  return dateTimeString.length >= dateMode.length + timeMode.length + dateTimeSeparator.length && ((_a = dateTimeString.split(dateTimeSeparator)[0]) !== null && _a !== void 0 ? _a : '').split(/\\D/).every(segment => !/^0+$/.exec(segment));\n}\nfunction parseDateTimeString(dateTime, {\n  dateModeTemplate,\n  dateTimeSeparator\n}) {\n  const hasSeparator = dateTime.includes(dateTimeSeparator);\n  return [dateTime.slice(0, dateModeTemplate.length), dateTime.slice(hasSeparator ? dateModeTemplate.length + dateTimeSeparator.length : dateModeTemplate.length)];\n}\nfunction createMinMaxDateTimePostprocessor({\n  dateModeTemplate,\n  timeMode,\n  min = DEFAULT_MIN_DATE,\n  max = DEFAULT_MAX_DATE,\n  dateTimeSeparator\n}) {\n  return ({\n    value,\n    selection\n  }) => {\n    const [dateString, timeString] = parseDateTimeString(value, {\n      dateModeTemplate,\n      dateTimeSeparator\n    });\n    const parsedDate = parseDateString(dateString, dateModeTemplate);\n    const parsedTime = parseTimeString(timeString, timeMode);\n    if (!isDateTimeStringComplete(value, {\n      dateMode: dateModeTemplate,\n      timeMode,\n      dateTimeSeparator\n    })) {\n      const fixedDate = raiseSegmentValueToMin(parsedDate, dateModeTemplate);\n      const {\n        year,\n        month,\n        day\n      } = isDateStringComplete(dateString, dateModeTemplate) ? dateToSegments(clamp(segmentsToDate(fixedDate), min, max)) : fixedDate;\n      const fixedValue = toDateString(Object.assign({\n        year,\n        month,\n        day\n      }, parsedTime), {\n        dateMode: dateModeTemplate,\n        dateTimeSeparator,\n        timeMode\n      });\n      const tail = value.slice(fixedValue.length);\n      return {\n        selection,\n        value: fixedValue + tail\n      };\n    }\n    const date = segmentsToDate(parsedDate, parsedTime);\n    const clampedDate = clamp(date, min, max);\n    const validatedValue = toDateString(dateToSegments(clampedDate), {\n      dateMode: dateModeTemplate,\n      dateTimeSeparator,\n      timeMode\n    });\n    return {\n      selection,\n      value: validatedValue\n    };\n  };\n}\nfunction createValidDateTimePreprocessor({\n  dateModeTemplate,\n  dateSegmentsSeparator,\n  dateTimeSeparator,\n  timeMode\n}) {\n  const invalidCharsRegExp = new RegExp(`[^\\\\d${TIME_FIXED_CHARACTERS.map(escapeRegExp).join('')}${escapeRegExp(dateSegmentsSeparator)}]+`);\n  return ({\n    elementState,\n    data\n  }) => {\n    const {\n      value,\n      selection\n    } = elementState;\n    if (data === dateSegmentsSeparator) {\n      return {\n        elementState,\n        data: selection[0] === value.length ? data : ''\n      };\n    }\n    const newCharacters = data.replace(invalidCharsRegExp, '');\n    if (!newCharacters) {\n      return {\n        elementState,\n        data: ''\n      };\n    }\n    const [from, rawTo] = selection;\n    let to = rawTo + data.length;\n    const newPossibleValue = value.slice(0, from) + newCharacters + value.slice(to);\n    const [dateString, timeString] = parseDateTimeString(newPossibleValue, {\n      dateModeTemplate,\n      dateTimeSeparator\n    });\n    let validatedValue = '';\n    const hasDateTimeSeparator = newPossibleValue.includes(dateTimeSeparator);\n    const {\n      validatedDateString,\n      updatedSelection\n    } = validateDateString({\n      dateString,\n      dateSegmentsSeparator,\n      dateModeTemplate,\n      offset: 0,\n      selection: [from, to]\n    });\n    if (dateString && !validatedDateString) {\n      return {\n        elementState,\n        data: ''\n      }; // prevent changes\n    }\n    to = updatedSelection[1];\n    validatedValue += validatedDateString;\n    const paddedMaxValues = padStartTimeSegments(DEFAULT_TIME_SEGMENT_MAX_VALUES);\n    const {\n      validatedTimeString,\n      updatedTimeSelection\n    } = validateTimeString({\n      timeString,\n      paddedMaxValues,\n      offset: validatedValue.length + dateTimeSeparator.length,\n      selection: [from, to],\n      timeMode\n    });\n    if (timeString && !validatedTimeString) {\n      return {\n        elementState,\n        data: ''\n      }; // prevent changes\n    }\n    to = updatedTimeSelection[1];\n    validatedValue += hasDateTimeSeparator ? dateTimeSeparator + validatedTimeString : validatedTimeString;\n    const newData = validatedValue.slice(from, to);\n    return {\n      elementState: {\n        selection,\n        value: validatedValue.slice(0, from) + newData.split(dateSegmentsSeparator).map(segment => '0'.repeat(segment.length)).join(dateSegmentsSeparator) + validatedValue.slice(to)\n      },\n      data: newData\n    };\n  };\n}\nfunction maskitoDateTimeOptionsGenerator({\n  dateMode,\n  timeMode,\n  dateSeparator = '.',\n  min,\n  max,\n  dateTimeSeparator = DATE_TIME_SEPARATOR,\n  timeStep = 0\n}) {\n  const dateModeTemplate = dateMode.split('/').join(dateSeparator);\n  return Object.assign(Object.assign({}, MASKITO_DEFAULT_OPTIONS), {\n    mask: [...Array.from(dateModeTemplate).map(char => dateSeparator.includes(char) ? char : /\\d/), ...dateTimeSeparator.split(''), ...Array.from(timeMode).map(char => TIME_FIXED_CHARACTERS.includes(char) ? char : /\\d/)],\n    overwriteMode: 'replace',\n    preprocessors: [createFullWidthToHalfWidthPreprocessor(), createColonConvertPreprocessor(), createFirstDateEndSeparatorPreprocessor({\n      dateModeTemplate,\n      dateSegmentSeparator: dateSeparator,\n      firstDateEndSeparator: dateTimeSeparator,\n      pseudoFirstDateEndSeparators: dateTimeSeparator.split('')\n    }), createZeroPlaceholdersPreprocessor(), normalizeDatePreprocessor({\n      dateModeTemplate,\n      dateSegmentsSeparator: dateSeparator,\n      dateTimeSeparator\n    }), createValidDateTimePreprocessor({\n      dateModeTemplate,\n      dateSegmentsSeparator: dateSeparator,\n      dateTimeSeparator,\n      timeMode\n    })],\n    postprocessors: [createDateSegmentsZeroPaddingPostprocessor({\n      dateModeTemplate,\n      dateSegmentSeparator: dateSeparator,\n      splitFn: value => {\n        const [dateString, timeString] = parseDateTimeString(value, {\n          dateModeTemplate,\n          dateTimeSeparator\n        });\n        return {\n          dateStrings: [dateString],\n          restPart: timeString\n        };\n      },\n      uniteFn: ([validatedDateString], initialValue) => validatedDateString + (initialValue.includes(dateTimeSeparator) ? dateTimeSeparator : '')\n    }), createMinMaxDateTimePostprocessor({\n      min,\n      max,\n      dateModeTemplate,\n      timeMode,\n      dateTimeSeparator\n    })],\n    plugins: [createTimeSegmentsSteppingPlugin({\n      step: timeStep,\n      fullMode: `${dateModeTemplate}${dateTimeSeparator}${timeMode}`,\n      timeSegmentMaxValues: DEFAULT_TIME_SEGMENT_MAX_VALUES\n    })]\n  });\n}\n\n/**\n * It drops prefix and postfix from data\n * Needed for case, when prefix or postfix contain decimalSeparator, to ignore it in resulting number\n * @example User pastes '{prefix}123.45{postfix}' => 123.45\n */\nfunction createAffixesFilterPreprocessor({\n  prefix,\n  postfix\n}) {\n  return ({\n    elementState,\n    data\n  }) => {\n    const {\n      cleanValue: cleanData\n    } = extractAffixes(data, {\n      prefix,\n      postfix\n    });\n    return {\n      elementState,\n      data: cleanData\n    };\n  };\n}\nfunction generateMaskExpression({\n  decimalSeparator,\n  isNegativeAllowed,\n  precision,\n  thousandSeparator,\n  prefix,\n  postfix,\n  decimalPseudoSeparators = [],\n  pseudoMinuses = [],\n  minusSign\n}) {\n  const computedPrefix = computeAllOptionalCharsRegExp(prefix);\n  const digit = String.raw`\\d`;\n  const optionalMinus = isNegativeAllowed ? `[${minusSign}${pseudoMinuses.map(x => `\\\\${x}`).join('')}]?` : '';\n  const integerPart = thousandSeparator ? `[${digit}${escapeRegExp(thousandSeparator).replaceAll(/\\s/g, String.raw`\\s`)}]*` : `[${digit}]*`;\n  const precisionPart = Number.isFinite(precision) ? precision : '';\n  const decimalPart = precision > 0 ? `([${escapeRegExp(decimalSeparator)}${decimalPseudoSeparators.map(escapeRegExp).join('')}]${digit}{0,${precisionPart}})?` : '';\n  const computedPostfix = computeAllOptionalCharsRegExp(postfix);\n  return new RegExp(`^${computedPrefix}${optionalMinus}${integerPart}${decimalPart}${computedPostfix}$`);\n}\nfunction computeAllOptionalCharsRegExp(str) {\n  return str ? `${str.split('').map(char => `${escapeRegExp(char)}?`).join('')}` : '';\n}\nfunction maskitoParseNumber(maskedNumber, decimalSeparator = '.') {\n  const hasNegativeSign = !!new RegExp(`^\\\\D*[${CHAR_MINUS}\\\\${CHAR_HYPHEN}${CHAR_EN_DASH}${CHAR_EM_DASH}${CHAR_JP_HYPHEN}]`).exec(maskedNumber);\n  const escapedDecimalSeparator = escapeRegExp(decimalSeparator);\n  const unmaskedNumber = maskedNumber\n  // drop all decimal separators not followed by a digit\n  .replaceAll(new RegExp(`${escapedDecimalSeparator}(?!\\\\d)`, 'g'), '')\n  // drop all non-digit characters except decimal separator\n  .replaceAll(new RegExp(`[^\\\\d${escapedDecimalSeparator}]`, 'g'), '').replace(decimalSeparator, '.');\n  if (unmaskedNumber) {\n    const sign = hasNegativeSign ? CHAR_HYPHEN : '';\n    return Number(`${sign}${unmaskedNumber}`);\n  }\n  return NaN;\n}\n\n/**\n * Convert number to string with replacing exponent part on decimals\n *\n * @param value the number\n * @return string representation of a number\n */\nfunction stringifyNumberWithoutExp(value) {\n  var _a;\n  const valueAsString = String(value);\n  const [numberPart = '', expPart] = valueAsString.split('e-');\n  let valueWithoutExp = valueAsString;\n  if (expPart) {\n    const [, fractionalPart] = numberPart.split('.');\n    const decimalDigits = Number(expPart) + ((_a = fractionalPart === null || fractionalPart === void 0 ? void 0 : fractionalPart.length) !== null && _a !== void 0 ? _a : 0);\n    valueWithoutExp = value.toFixed(decimalDigits);\n  }\n  return valueWithoutExp;\n}\nfunction toNumberParts(value, {\n  decimalSeparator,\n  thousandSeparator\n}) {\n  const [integerWithMinus = '', decimalPart = ''] = value.split(decimalSeparator);\n  const [, minus = '', integerPart = ''] = new RegExp(`([^\\\\d${escapeRegExp(thousandSeparator)}]+)?(.*)`).exec(integerWithMinus) || [];\n  return {\n    minus,\n    integerPart,\n    decimalPart\n  };\n}\nfunction validateDecimalPseudoSeparators({\n  decimalSeparator,\n  thousandSeparator,\n  decimalPseudoSeparators = DEFAULT_DECIMAL_PSEUDO_SEPARATORS\n}) {\n  return decimalPseudoSeparators.filter(char => char !== thousandSeparator && char !== decimalSeparator);\n}\n\n/**\n * If `decimalZeroPadding` is `true`, it pads decimal part with zeroes\n * (until number of digits after decimalSeparator is equal to the `precision`).\n * @example 1,42 => (`precision` is equal to 4) => 1,4200.\n */\nfunction createDecimalZeroPaddingPostprocessor({\n  decimalSeparator,\n  precision,\n  decimalZeroPadding,\n  prefix,\n  postfix\n}) {\n  if (precision <= 0 || !decimalZeroPadding) {\n    return identity;\n  }\n  return ({\n    value,\n    selection\n  }) => {\n    const {\n      cleanValue,\n      extractedPrefix,\n      extractedPostfix\n    } = extractAffixes(value, {\n      prefix,\n      postfix\n    });\n    if (Number.isNaN(maskitoParseNumber(cleanValue, decimalSeparator))) {\n      return {\n        value,\n        selection\n      };\n    }\n    const [integerPart, decimalPart = ''] = cleanValue.split(decimalSeparator);\n    return {\n      value: extractedPrefix + integerPart + decimalSeparator + decimalPart.padEnd(precision, '0') + extractedPostfix,\n      selection\n    };\n  };\n}\n\n/**\n * Make textfield empty if there is no integer part and all decimal digits are zeroes.\n * @example 0|,00 => Backspace => Empty.\n * @example -0|,00 => Backspace => -.\n * @example ,42| => Backspace x2 => ,|00 => Backspace => Empty\n */\nfunction emptyPostprocessor({\n  prefix,\n  postfix,\n  decimalSeparator,\n  thousandSeparator\n}) {\n  return ({\n    value,\n    selection\n  }) => {\n    const [caretIndex] = selection;\n    const {\n      cleanValue,\n      extractedPrefix,\n      extractedPostfix\n    } = extractAffixes(value, {\n      prefix,\n      postfix\n    });\n    const {\n      minus,\n      integerPart,\n      decimalPart\n    } = toNumberParts(cleanValue, {\n      decimalSeparator,\n      thousandSeparator\n    });\n    const aloneDecimalSeparator = !integerPart && !decimalPart && cleanValue.includes(decimalSeparator);\n    if (!integerPart && !Number(decimalPart) && caretIndex === (minus + extractedPrefix).length || aloneDecimalSeparator) {\n      return {\n        selection,\n        value: extractedPrefix + minus + extractedPostfix\n      };\n    }\n    return {\n      value,\n      selection\n    };\n  };\n}\n\n/**\n * This preprocessor works only once at initialization phase (when `new Maskito(...)` is executed).\n * This preprocessor helps to avoid conflicts during transition from one mask to another (for the same input).\n * For example, the developer changes postfix (or other mask's props) during run-time.\n * ```\n * let maskitoOptions = maskitoNumberOptionsGenerator({postfix: ' year'});\n * // [3 seconds later]\n * maskitoOptions = maskitoNumberOptionsGenerator({postfix: ' years'});\n * ```\n */\nfunction createInitializationOnlyPreprocessor({\n  decimalSeparator,\n  decimalPseudoSeparators,\n  pseudoMinuses,\n  prefix,\n  postfix,\n  minusSign\n}) {\n  let isInitializationPhase = true;\n  const cleanNumberMask = generateMaskExpression({\n    decimalSeparator,\n    decimalPseudoSeparators,\n    pseudoMinuses,\n    prefix: '',\n    postfix: '',\n    thousandSeparator: '',\n    precision: Infinity,\n    isNegativeAllowed: true,\n    minusSign\n  });\n  return ({\n    elementState,\n    data\n  }) => {\n    if (!isInitializationPhase) {\n      return {\n        elementState,\n        data\n      };\n    }\n    isInitializationPhase = false;\n    const {\n      value,\n      selection\n    } = elementState;\n    const [from, to] = selection;\n    const {\n      extractedPrefix,\n      cleanValue,\n      extractedPostfix\n    } = extractAffixes(value, {\n      prefix,\n      postfix\n    });\n    const cleanState = maskitoTransform({\n      selection: [Math.max(from - extractedPrefix.length, 0), clamp(to - extractedPrefix.length, 0, cleanValue.length)],\n      value: cleanValue\n    }, {\n      mask: cleanNumberMask\n    });\n    const [cleanFrom, cleanTo] = cleanState.selection;\n    return {\n      elementState: {\n        selection: [cleanFrom + extractedPrefix.length, cleanTo + extractedPrefix.length],\n        value: extractedPrefix + cleanState.value + extractedPostfix\n      },\n      data\n    };\n  };\n}\n\n/**\n * It removes repeated leading zeroes for integer part.\n * @example 0,|00005 => Backspace => |5\n * @example -0,|00005 => Backspace => -|5\n * @example User types \"000000\" => 0|\n * @example 0| => User types \"5\" => 5|\n */\nfunction createLeadingZeroesValidationPostprocessor({\n  decimalSeparator,\n  thousandSeparator,\n  prefix,\n  postfix\n}) {\n  const trimLeadingZeroes = value => {\n    const escapedThousandSeparator = escapeRegExp(thousandSeparator);\n    return value.replace(\n    // all leading zeroes followed by another zero\n    new RegExp(`^(\\\\D+)?[0${escapedThousandSeparator}]+(?=0)`), '$1').replace(\n    // zero followed by not-zero digit\n    new RegExp(`^(\\\\D+)?[0${escapedThousandSeparator}]+(?=[1-9])`), '$1');\n  };\n  const countTrimmedZeroesBefore = (value, index) => {\n    const valueBefore = value.slice(0, index);\n    const followedByZero = value.slice(index).startsWith('0');\n    return valueBefore.length - trimLeadingZeroes(valueBefore).length + (followedByZero ? 1 : 0);\n  };\n  return ({\n    value,\n    selection\n  }) => {\n    const [from, to] = selection;\n    const {\n      cleanValue,\n      extractedPrefix,\n      extractedPostfix\n    } = extractAffixes(value, {\n      prefix,\n      postfix\n    });\n    const hasDecimalSeparator = cleanValue.includes(decimalSeparator);\n    const [integerPart = '', decimalPart = ''] = cleanValue.split(decimalSeparator);\n    const zeroTrimmedIntegerPart = trimLeadingZeroes(integerPart);\n    if (integerPart === zeroTrimmedIntegerPart) {\n      return {\n        value,\n        selection\n      };\n    }\n    const newFrom = from - countTrimmedZeroesBefore(value, from);\n    const newTo = to - countTrimmedZeroesBefore(value, to);\n    return {\n      value: extractedPrefix + zeroTrimmedIntegerPart + (hasDecimalSeparator ? decimalSeparator : '') + decimalPart + extractedPostfix,\n      selection: [Math.max(newFrom, 0), Math.max(newTo, 0)]\n    };\n  };\n}\n\n/**\n * This postprocessor is connected with {@link createMinMaxPlugin}:\n * both validate `min`/`max` bounds of entered value (but at the different point of time).\n */\nfunction createMinMaxPostprocessor({\n  min,\n  max,\n  decimalSeparator,\n  minusSign\n}) {\n  return ({\n    value,\n    selection\n  }) => {\n    const parsedNumber = maskitoParseNumber(value, decimalSeparator);\n    const limitedValue =\n    /**\n     * We cannot limit lower bound if user enters positive number.\n     * The same for upper bound and negative number.\n     * ___\n     * @example (min = 5)\n     * Empty input => Without this condition user cannot type 42 (the first digit will be rejected)\n     * ___\n     * @example (max = -10)\n     * Value is -10 => Without this condition user cannot delete 0 to enter another digit\n     */\n    parsedNumber > 0 ? Math.min(parsedNumber, max) : Math.max(parsedNumber, min);\n    if (parsedNumber && limitedValue !== parsedNumber) {\n      const newValue = `${limitedValue}`.replace('.', decimalSeparator).replace(CHAR_HYPHEN, minusSign);\n      return {\n        value: newValue,\n        selection: [newValue.length, newValue.length]\n      };\n    }\n    return {\n      value,\n      selection\n    };\n  };\n}\n\n/**\n * Manage caret-navigation when user \"deletes\" non-removable digits or separators\n * @example 1,|42 => Backspace => 1|,42 (only if `decimalZeroPadding` is `true`)\n * @example 1|,42 => Delete => 1,|42 (only if `decimalZeroPadding` is `true`)\n * @example 0,|00 => Delete => 0,0|0 (only if `decimalZeroPadding` is `true`)\n * @example 1 |000 => Backspace => 1| 000 (always)\n */\nfunction createNonRemovableCharsDeletionPreprocessor({\n  decimalSeparator,\n  thousandSeparator,\n  decimalZeroPadding\n}) {\n  return ({\n    elementState,\n    data\n  }, actionType) => {\n    const {\n      value,\n      selection\n    } = elementState;\n    const [from, to] = selection;\n    const selectedCharacters = value.slice(from, to);\n    const nonRemovableSeparators = decimalZeroPadding ? [decimalSeparator, thousandSeparator] : [thousandSeparator];\n    const areNonRemovableZeroesSelected = decimalZeroPadding && from > value.indexOf(decimalSeparator) && Boolean(selectedCharacters.match(/^0+$/gi));\n    if (actionType !== 'deleteBackward' && actionType !== 'deleteForward' || !nonRemovableSeparators.includes(selectedCharacters) && !areNonRemovableZeroesSelected) {\n      return {\n        elementState,\n        data\n      };\n    }\n    return {\n      elementState: {\n        value,\n        selection: actionType === 'deleteForward' ? [to, to] : [from, from]\n      },\n      data\n    };\n  };\n}\n\n/**\n * It pads integer part with zero if user types decimal separator (for empty input).\n * @example Empty input => User types \",\" (decimal separator) => 0,|\n */\nfunction createNotEmptyIntegerPartPreprocessor({\n  decimalSeparator,\n  precision,\n  prefix,\n  postfix\n}) {\n  const startWithDecimalSepRegExp = new RegExp(`^\\\\D*${escapeRegExp(decimalSeparator)}`);\n  return ({\n    elementState,\n    data\n  }) => {\n    const {\n      value,\n      selection\n    } = elementState;\n    const {\n      cleanValue,\n      extractedPrefix\n    } = extractAffixes(value, {\n      prefix,\n      postfix\n    });\n    const [from, to] = selection;\n    const cleanFrom = clamp(from - extractedPrefix.length, 0, cleanValue.length);\n    const cleanTo = clamp(to - extractedPrefix.length, 0, cleanValue.length);\n    if (precision <= 0 || cleanValue.slice(0, cleanFrom).includes(decimalSeparator) || cleanValue.slice(cleanTo).includes(decimalSeparator) || !data.match(startWithDecimalSepRegExp)) {\n      return {\n        elementState,\n        data\n      };\n    }\n    const digitsBeforeCursor = /\\d+/.exec(cleanValue.slice(0, cleanFrom));\n    return {\n      elementState,\n      data: digitsBeforeCursor ? data : `0${data}`\n    };\n  };\n}\n\n/**\n * It replaces pseudo characters with valid one.\n * @example User types '.' (but separator is equal to comma) => dot is replaced with comma.\n * @example User types hyphen / en-dash / em-dash => it is replaced with minus.\n */\nfunction createPseudoCharactersPreprocessor({\n  validCharacter,\n  pseudoCharacters,\n  prefix,\n  postfix\n}) {\n  const pseudoCharactersRegExp = new RegExp(`[${pseudoCharacters.join('')}]`, 'gi');\n  return ({\n    elementState,\n    data\n  }) => {\n    const {\n      value,\n      selection\n    } = elementState;\n    const {\n      cleanValue,\n      extractedPostfix,\n      extractedPrefix\n    } = extractAffixes(value, {\n      prefix,\n      postfix\n    });\n    return {\n      elementState: {\n        selection,\n        value: extractedPrefix + cleanValue.replace(pseudoCharactersRegExp, validCharacter) + extractedPostfix\n      },\n      data: data.replace(pseudoCharactersRegExp, validCharacter)\n    };\n  };\n}\n\n/**\n * It rejects new typed decimal separator if it already exists in text field.\n * Behaviour is similar to native <input type=\"number\"> (Chrome).\n * @example 1|23,45 => Press comma (decimal separator) => 1|23,45 (do nothing).\n */\nfunction createRepeatedDecimalSeparatorPreprocessor({\n  decimalSeparator,\n  prefix,\n  postfix\n}) {\n  return ({\n    elementState,\n    data\n  }) => {\n    const {\n      value,\n      selection\n    } = elementState;\n    const [from, to] = selection;\n    const {\n      cleanValue\n    } = extractAffixes(value, {\n      prefix,\n      postfix\n    });\n    return {\n      elementState,\n      data: !cleanValue.includes(decimalSeparator) || value.slice(from, to + 1).includes(decimalSeparator) ? data : data.replaceAll(new RegExp(escapeRegExp(decimalSeparator), 'gi'), '')\n    };\n  };\n}\n\n/**\n * It adds symbol for separating thousands.\n * @example 1000000 => (thousandSeparator is equal to space) => 1 000 000.\n */\nfunction createThousandSeparatorPostprocessor({\n  thousandSeparator,\n  decimalSeparator,\n  prefix,\n  postfix\n}) {\n  if (!thousandSeparator) {\n    return identity;\n  }\n  const isAllSpaces = (...chars) => chars.every(x => /\\s/.test(x));\n  return ({\n    value,\n    selection\n  }) => {\n    const {\n      cleanValue,\n      extractedPostfix,\n      extractedPrefix\n    } = extractAffixes(value, {\n      prefix,\n      postfix\n    });\n    const {\n      minus,\n      integerPart,\n      decimalPart\n    } = toNumberParts(cleanValue, {\n      decimalSeparator,\n      thousandSeparator\n    });\n    const [initialFrom, initialTo] = selection;\n    let [from, to] = selection;\n    const processedIntegerPart = Array.from(integerPart).reduceRight((formattedValuePart, char, i) => {\n      const isLeadingThousandSeparator = !i && char === thousandSeparator;\n      const isPositionForSeparator = !isLeadingThousandSeparator && formattedValuePart.length && (formattedValuePart.length + 1) % 4 === 0;\n      if (isPositionForSeparator && (char === thousandSeparator || isAllSpaces(char, thousandSeparator))) {\n        return thousandSeparator + formattedValuePart;\n      }\n      if (char === thousandSeparator && !isPositionForSeparator) {\n        if (i && i <= initialFrom) {\n          from--;\n        }\n        if (i && i <= initialTo) {\n          to--;\n        }\n        return formattedValuePart;\n      }\n      if (!isPositionForSeparator) {\n        return char + formattedValuePart;\n      }\n      if (i <= initialFrom) {\n        from++;\n      }\n      if (i <= initialTo) {\n        to++;\n      }\n      return char + thousandSeparator + formattedValuePart;\n    }, '');\n    return {\n      value: extractedPrefix + minus + processedIntegerPart + (cleanValue.includes(decimalSeparator) ? decimalSeparator : '') + decimalPart + extractedPostfix,\n      selection: [from, to]\n    };\n  };\n}\n\n/**\n * It drops decimal part if precision is zero.\n * @example User pastes '123.45' (but precision is zero) => 123\n */\nfunction createZeroPrecisionPreprocessor({\n  precision,\n  decimalSeparator,\n  prefix,\n  postfix\n}) {\n  if (precision > 0) {\n    return identity;\n  }\n  const decimalPartRegExp = new RegExp(`${escapeRegExp(decimalSeparator)}.*$`, 'g');\n  return ({\n    elementState,\n    data\n  }) => {\n    const {\n      value,\n      selection\n    } = elementState;\n    const {\n      cleanValue,\n      extractedPrefix,\n      extractedPostfix\n    } = extractAffixes(value, {\n      prefix,\n      postfix\n    });\n    const [from, to] = selection;\n    const newValue = extractedPrefix + cleanValue.replace(decimalPartRegExp, '') + extractedPostfix;\n    return {\n      elementState: {\n        selection: [Math.min(from, newValue.length), Math.min(to, newValue.length)],\n        value: newValue\n      },\n      data: data.replace(decimalPartRegExp, '')\n    };\n  };\n}\nconst DUMMY_SELECTION = [0, 0];\n/**\n * It removes repeated leading zeroes for integer part on blur-event.\n * @example 000000 => blur => 0\n * @example 00005 => blur => 5\n */\nfunction createLeadingZeroesValidationPlugin({\n  decimalSeparator,\n  thousandSeparator,\n  prefix,\n  postfix\n}) {\n  const dropRepeatedLeadingZeroes = createLeadingZeroesValidationPostprocessor({\n    decimalSeparator,\n    thousandSeparator,\n    prefix,\n    postfix\n  });\n  return maskitoEventHandler('blur', element => {\n    const newValue = dropRepeatedLeadingZeroes({\n      value: element.value,\n      selection: DUMMY_SELECTION\n    }, {\n      value: '',\n      selection: DUMMY_SELECTION\n    }).value;\n    maskitoUpdateElement(element, newValue);\n  }, {\n    capture: true\n  });\n}\n\n/**\n * This plugin is connected with {@link createMinMaxPostprocessor}:\n * both validate `min`/`max` bounds of entered value (but at the different point of time).\n */\nfunction createMinMaxPlugin({\n  min,\n  max,\n  decimalSeparator\n}) {\n  return maskitoEventHandler('blur', (element, options) => {\n    const parsedNumber = maskitoParseNumber(element.value, decimalSeparator);\n    const clampedNumber = clamp(parsedNumber, min, max);\n    if (!Number.isNaN(parsedNumber) && parsedNumber !== clampedNumber) {\n      maskitoUpdateElement(element, maskitoTransform(stringifyNumberWithoutExp(clampedNumber), options));\n    }\n  }, {\n    capture: true\n  });\n}\n\n/**\n * It pads EMPTY integer part with zero if decimal parts exists.\n * It works on blur event only!\n * @example 1|,23 => Backspace => Blur => 0,23\n */\nfunction createNotEmptyIntegerPlugin({\n  decimalSeparator,\n  prefix,\n  postfix\n}) {\n  return maskitoEventHandler('blur', element => {\n    const {\n      cleanValue,\n      extractedPostfix,\n      extractedPrefix\n    } = extractAffixes(element.value, {\n      prefix,\n      postfix\n    });\n    const newValue = extractedPrefix + cleanValue.replace(new RegExp(`^(\\\\D+)?${escapeRegExp(decimalSeparator)}`), `$10${decimalSeparator}`) + extractedPostfix;\n    maskitoUpdateElement(element, newValue);\n  }, {\n    capture: true\n  });\n}\nfunction maskitoNumberOptionsGenerator({\n  max = Number.MAX_SAFE_INTEGER,\n  min = Number.MIN_SAFE_INTEGER,\n  precision = 0,\n  thousandSeparator = CHAR_NO_BREAK_SPACE,\n  decimalSeparator = '.',\n  decimalPseudoSeparators,\n  decimalZeroPadding = false,\n  prefix: unsafePrefix = '',\n  postfix = '',\n  minusSign = CHAR_MINUS\n} = {}) {\n  const pseudoMinuses = [CHAR_HYPHEN, CHAR_EN_DASH, CHAR_EM_DASH, CHAR_JP_HYPHEN, CHAR_MINUS].filter(char => char !== thousandSeparator && char !== decimalSeparator && char !== minusSign);\n  const validatedDecimalPseudoSeparators = validateDecimalPseudoSeparators({\n    decimalSeparator,\n    thousandSeparator,\n    decimalPseudoSeparators\n  });\n  const prefix = unsafePrefix.endsWith(decimalSeparator) && precision > 0 ? `${unsafePrefix}${CHAR_ZERO_WIDTH_SPACE}` : unsafePrefix;\n  return Object.assign(Object.assign({}, MASKITO_DEFAULT_OPTIONS), {\n    mask: generateMaskExpression({\n      decimalSeparator,\n      precision,\n      thousandSeparator,\n      prefix,\n      postfix,\n      isNegativeAllowed: min < 0,\n      minusSign\n    }),\n    preprocessors: [createFullWidthToHalfWidthPreprocessor(), createInitializationOnlyPreprocessor({\n      decimalSeparator,\n      decimalPseudoSeparators: validatedDecimalPseudoSeparators,\n      pseudoMinuses,\n      prefix,\n      postfix,\n      minusSign\n    }), createAffixesFilterPreprocessor({\n      prefix,\n      postfix\n    }), createPseudoCharactersPreprocessor({\n      validCharacter: minusSign,\n      pseudoCharacters: pseudoMinuses,\n      prefix,\n      postfix\n    }), createPseudoCharactersPreprocessor({\n      validCharacter: decimalSeparator,\n      pseudoCharacters: validatedDecimalPseudoSeparators,\n      prefix,\n      postfix\n    }), createNotEmptyIntegerPartPreprocessor({\n      decimalSeparator,\n      precision,\n      prefix,\n      postfix\n    }), createNonRemovableCharsDeletionPreprocessor({\n      decimalSeparator,\n      decimalZeroPadding,\n      thousandSeparator\n    }), createZeroPrecisionPreprocessor({\n      precision,\n      decimalSeparator,\n      prefix,\n      postfix\n    }), createRepeatedDecimalSeparatorPreprocessor({\n      decimalSeparator,\n      prefix,\n      postfix\n    })],\n    postprocessors: [createMinMaxPostprocessor({\n      decimalSeparator,\n      min,\n      max,\n      minusSign\n    }), maskitoPrefixPostprocessorGenerator(prefix), maskitoPostfixPostprocessorGenerator(postfix), createThousandSeparatorPostprocessor({\n      decimalSeparator,\n      thousandSeparator,\n      prefix,\n      postfix\n    }), createDecimalZeroPaddingPostprocessor({\n      decimalSeparator,\n      decimalZeroPadding,\n      precision,\n      prefix,\n      postfix\n    }), emptyPostprocessor({\n      prefix,\n      postfix,\n      decimalSeparator,\n      thousandSeparator\n    })],\n    plugins: [createLeadingZeroesValidationPlugin({\n      decimalSeparator,\n      thousandSeparator,\n      prefix,\n      postfix\n    }), createNotEmptyIntegerPlugin({\n      decimalSeparator,\n      prefix,\n      postfix\n    }), createMinMaxPlugin({\n      min,\n      max,\n      decimalSeparator\n    })],\n    overwriteMode: decimalZeroPadding ? ({\n      value,\n      selection: [from]\n    }) => from <= value.indexOf(decimalSeparator) ? 'shift' : 'replace' : 'shift'\n  });\n}\nfunction createMaxValidationPreprocessor(timeSegmentMaxValues, timeMode) {\n  const paddedMaxValues = padStartTimeSegments(timeSegmentMaxValues);\n  const invalidCharsRegExp = new RegExp(`[^\\\\d${TIME_FIXED_CHARACTERS.map(escapeRegExp).join('')}]+`);\n  return ({\n    elementState,\n    data\n  }, actionType) => {\n    if (actionType === 'deleteBackward' || actionType === 'deleteForward') {\n      return {\n        elementState,\n        data\n      };\n    }\n    const {\n      value,\n      selection\n    } = elementState;\n    if (actionType === 'validation') {\n      const {\n        validatedTimeString,\n        updatedTimeSelection\n      } = validateTimeString({\n        timeString: value,\n        paddedMaxValues,\n        offset: 0,\n        selection,\n        timeMode\n      });\n      return {\n        elementState: {\n          value: validatedTimeString,\n          selection: updatedTimeSelection\n        },\n        data\n      };\n    }\n    const newCharacters = data.replace(invalidCharsRegExp, '');\n    const [from, rawTo] = selection;\n    let to = rawTo + newCharacters.length; // to be conformed with `overwriteMode: replace`\n    const newPossibleValue = value.slice(0, from) + newCharacters + value.slice(to);\n    const {\n      validatedTimeString,\n      updatedTimeSelection\n    } = validateTimeString({\n      timeString: newPossibleValue,\n      paddedMaxValues,\n      offset: 0,\n      selection: [from, to],\n      timeMode\n    });\n    if (newPossibleValue && !validatedTimeString) {\n      return {\n        elementState,\n        data: ''\n      }; // prevent changes\n    }\n    to = updatedTimeSelection[1];\n    const newData = validatedTimeString.slice(from, to);\n    return {\n      elementState: {\n        selection,\n        value: validatedTimeString.slice(0, from) + '0'.repeat(newData.length) + validatedTimeString.slice(to)\n      },\n      data: newData\n    };\n  };\n}\nfunction maskitoTimeOptionsGenerator({\n  mode,\n  timeSegmentMaxValues = {},\n  step = 0\n}) {\n  const enrichedTimeSegmentMaxValues = Object.assign(Object.assign({}, DEFAULT_TIME_SEGMENT_MAX_VALUES), timeSegmentMaxValues);\n  return Object.assign(Object.assign({}, MASKITO_DEFAULT_OPTIONS), {\n    mask: Array.from(mode).map(char => TIME_FIXED_CHARACTERS.includes(char) ? char : /\\d/),\n    preprocessors: [createFullWidthToHalfWidthPreprocessor(), createColonConvertPreprocessor(), createZeroPlaceholdersPreprocessor(), createMaxValidationPreprocessor(enrichedTimeSegmentMaxValues, mode)],\n    plugins: [createTimeSegmentsSteppingPlugin({\n      fullMode: mode,\n      step,\n      timeSegmentMaxValues: enrichedTimeSegmentMaxValues\n    })],\n    overwriteMode: 'replace'\n  });\n}\n\n/**\n * Converts a formatted time string to milliseconds based on the given `options.mode`.\n *\n * @param maskedTime a formatted time string by {@link maskitoTimeOptionsGenerator} or {@link maskitoStringifyTime}\n * @param params\n */\nfunction maskitoParseTime(maskedTime, {\n  mode,\n  timeSegmentMaxValues = {}\n}) {\n  var _a, _b, _c, _d;\n  const maxValues = Object.assign(Object.assign({}, DEFAULT_TIME_SEGMENT_MAX_VALUES), timeSegmentMaxValues);\n  const msInSecond = maxValues.milliseconds + 1;\n  const msInMinute = (maxValues.seconds + 1) * msInSecond;\n  const msInHour = (maxValues.minutes + 1) * msInMinute;\n  const parsedTime = padEndTimeSegments(parseTimeString(maskedTime, mode));\n  return Number((_a = parsedTime.hours) !== null && _a !== void 0 ? _a : '') * msInHour + Number((_b = parsedTime.minutes) !== null && _b !== void 0 ? _b : '') * msInMinute + Number((_c = parsedTime.seconds) !== null && _c !== void 0 ? _c : '') * msInSecond + Number((_d = parsedTime.milliseconds) !== null && _d !== void 0 ? _d : '');\n}\n\n/**\n * Converts milliseconds to a formatted time string based on the given `options.mode`.\n *\n * @param milliseconds unsigned integer milliseconds\n * @param params\n */\nfunction maskitoStringifyTime(milliseconds, {\n  mode,\n  timeSegmentMaxValues = {}\n}) {\n  const maxValues = Object.assign(Object.assign({}, DEFAULT_TIME_SEGMENT_MAX_VALUES), timeSegmentMaxValues);\n  const msInSecond = maxValues.milliseconds + 1;\n  const msInMinute = (maxValues.seconds + 1) * msInSecond;\n  const msInHour = (maxValues.minutes + 1) * msInMinute;\n  const hours = Math.trunc(milliseconds / msInHour);\n  milliseconds -= hours * msInHour;\n  const minutes = Math.trunc(milliseconds / msInMinute);\n  milliseconds -= minutes * msInMinute;\n  const seconds = Math.trunc(milliseconds / msInSecond);\n  milliseconds -= seconds * msInSecond;\n  const result = padStartTimeSegments({\n    hours,\n    minutes,\n    seconds,\n    milliseconds\n  });\n  return mode.replaceAll(/H+/g, result.hours).replaceAll('MSS', result.milliseconds).replaceAll(/M+/g, result.minutes).replaceAll(/S+/g, result.seconds);\n}\nexport { maskitoAddOnFocusPlugin, maskitoCaretGuard, maskitoDateOptionsGenerator, maskitoDateRangeOptionsGenerator, maskitoDateTimeOptionsGenerator, maskitoEventHandler, maskitoNumberOptionsGenerator, maskitoParseNumber, maskitoParseTime, maskitoPostfixPostprocessorGenerator, maskitoPrefixPostprocessorGenerator, maskitoRejectEvent, maskitoRemoveOnBlurPlugin, maskitoStringifyTime, maskitoTimeOptionsGenerator, maskitoWithPlaceholder };"],
  "mappings": "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",
  "names": ["_c0", "_c0", "_c1", "_c0", "validatedTimeString", "updatedTimeSelection"]
}
