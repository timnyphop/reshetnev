{
  "version": 3,
  "sources": ["../../../../../../node_modules/@taiga-ui/kit/fesm2022/taiga-ui-kit-directives-chevron.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, inject, effect, signal, Directive, Input } from '@angular/core';\nimport { tuiInjectElement } from '@taiga-ui/cdk/utils/dom';\nimport { tuiCreateToken, tuiWithStyles, tuiProvide } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { TuiDropdownDirective } from '@taiga-ui/core/directives/dropdown';\nimport { TUI_ICON_END } from '@taiga-ui/core/tokens';\nconst TUI_CHEVRON = tuiCreateToken('@tui.chevron-down');\nclass TuiChevronStyles {\n  static {\n    this.ɵfac = function TuiChevronStyles_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiChevronStyles)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiChevronStyles,\n      selectors: [[\"ng-component\"]],\n      hostAttrs: [1, \"tui-chevron\"],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 0,\n      vars: 0,\n      template: function TuiChevronStyles_Template(rf, ctx) {},\n      styles: [\"[tuiChevron][tuiIcons]:after,tui-icon[tuiChevron]:after{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;display:inline-block;cursor:pointer}[tuiChevron][tuiIcons]:after{block-size:1rem}[tuiChevron][tuiIcons]._chevron-rotated:after,tui-icon[tuiChevron]._chevron-rotated:after{transform:rotate(180deg)}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiChevronStyles, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      template: '',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        class: 'tui-chevron'\n      },\n      styles: [\"[tuiChevron][tuiIcons]:after,tui-icon[tuiChevron]:after{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;display:inline-block;cursor:pointer}[tuiChevron][tuiIcons]:after{block-size:1rem}[tuiChevron][tuiIcons]._chevron-rotated:after,tui-icon[tuiChevron]._chevron-rotated:after{transform:rotate(180deg)}\\n\"]\n    }]\n  }], null, null);\n})();\nclass TuiChevron {\n  constructor() {\n    this.el = tuiInjectElement();\n    this.dropdown = inject(TuiDropdownDirective, {\n      optional: true\n    });\n    this.nothing = tuiWithStyles(TuiChevronStyles);\n    this.toggle = effect(() => this.el.classList.toggle('_chevron-rotated', this.chevron() || this.chevron() === '' && !!this.dropdown?.ref()));\n    // TODO: refactor to signal inputs after Angular update\n    this.chevron = signal('');\n  }\n  set tuiChevron(chevron) {\n    this.chevron.set(chevron);\n  }\n  static {\n    this.ɵfac = function TuiChevron_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiChevron)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiChevron,\n      selectors: [[\"\", \"tuiChevron\", \"\"]],\n      hostAttrs: [\"tuiChevron\", \"\"],\n      inputs: {\n        tuiChevron: \"tuiChevron\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([tuiProvide(TUI_ICON_END, TUI_CHEVRON)])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiChevron, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: '[tuiChevron]',\n      providers: [tuiProvide(TUI_ICON_END, TUI_CHEVRON)],\n      host: {\n        tuiChevron: ''\n      }\n    }]\n  }], null, {\n    tuiChevron: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_CHEVRON, TuiChevron };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,IAAM,cAAc,eAAe,mBAAmB;AACtD,IAAM,mBAAN,MAAM,kBAAiB;AAAA,EACrB,OAAO;AACL,SAAK,OAAO,SAAS,yBAAyB,mBAAmB;AAC/D,aAAO,KAAK,qBAAqB,mBAAkB;AAAA,IACrD;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,OAAyB,kBAAkB;AAAA,MAC9C,MAAM;AAAA,MACN,WAAW,CAAC,CAAC,cAAc,CAAC;AAAA,MAC5B,WAAW,CAAC,GAAG,aAAa;AAAA,MAC5B,YAAY;AAAA,MACZ,UAAU,CAAI,mBAAmB;AAAA,MACjC,OAAO;AAAA,MACP,MAAM;AAAA,MACN,UAAU,SAAS,0BAA0B,IAAI,KAAK;AAAA,MAAC;AAAA,MACvD,QAAQ,CAAC,kXAAkX;AAAA,MAC3X,eAAe;AAAA,MACf,iBAAiB;AAAA,IACnB,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,kBAAkB,CAAC;AAAA,IACzF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,eAAe,oBAAkB;AAAA,MACjC,iBAAiB,wBAAwB;AAAA,MACzC,MAAM;AAAA,QACJ,OAAO;AAAA,MACT;AAAA,MACA,QAAQ,CAAC,kXAAkX;AAAA,IAC7X,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,IAAM,aAAN,MAAM,YAAW;AAAA,EACf,cAAc;AACZ,SAAK,KAAK,iBAAiB;AAC3B,SAAK,WAAW,OAAO,sBAAsB;AAAA,MAC3C,UAAU;AAAA,IACZ,CAAC;AACD,SAAK,UAAU,cAAc,gBAAgB;AAC7C,SAAK,SAAS,OAAO,MAAM,KAAK,GAAG,UAAU,OAAO,oBAAoB,KAAK,QAAQ,KAAK,KAAK,QAAQ,MAAM,MAAM,CAAC,CAAC,KAAK,UAAU,IAAI,CAAC,CAAC;AAE1I,SAAK,UAAU,OAAO,EAAE;AAAA,EAC1B;AAAA,EACA,IAAI,WAAW,SAAS;AACtB,SAAK,QAAQ,IAAI,OAAO;AAAA,EAC1B;AAAA,EACA,OAAO;AACL,SAAK,OAAO,SAAS,mBAAmB,mBAAmB;AACzD,aAAO,KAAK,qBAAqB,aAAY;AAAA,IAC/C;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,OAAyB,kBAAkB;AAAA,MAC9C,MAAM;AAAA,MACN,WAAW,CAAC,CAAC,IAAI,cAAc,EAAE,CAAC;AAAA,MAClC,WAAW,CAAC,cAAc,EAAE;AAAA,MAC5B,QAAQ;AAAA,QACN,YAAY;AAAA,MACd;AAAA,MACA,YAAY;AAAA,MACZ,UAAU,CAAI,mBAAmB,CAAC,WAAW,cAAc,WAAW,CAAC,CAAC,CAAC;AAAA,IAC3E,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,YAAY,CAAC;AAAA,IACnF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,WAAW,CAAC,WAAW,cAAc,WAAW,CAAC;AAAA,MACjD,MAAM;AAAA,QACJ,YAAY;AAAA,MACd;AAAA,IACF,CAAC;AAAA,EACH,CAAC,GAAG,MAAM;AAAA,IACR,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;",
  "names": []
}
