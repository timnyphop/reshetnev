{
  "version": 3,
  "sources": ["../../../../../../node_modules/@taiga-ui/kit/fesm2022/taiga-ui-kit-tokens.mjs", "../../../../../../node_modules/@maskito/core/index.esm.js"],
  "sourcesContent": ["import { Optional, Self, inject } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { tuiControlValue } from '@taiga-ui/cdk/observables';\nimport { tuiCreateToken, tuiCreateTokenFromFactory, tuiProvideOptions } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { map, of } from 'rxjs';\nimport { tuiExtractI18n } from '@taiga-ui/i18n/utils';\nimport { TUI_FIRST_DAY, TUI_LAST_DAY } from '@taiga-ui/cdk/date-time';\nimport { TUI_DEFAULT_IDENTITY_MATCHER, TUI_FALSE_HANDLER } from '@taiga-ui/cdk/constants';\nimport { TUI_IS_MOBILE } from '@taiga-ui/cdk/tokens';\nimport { TUI_DROPDOWN_COMPONENT } from '@taiga-ui/core/directives/dropdown';\n\n/**\n * Stream that emits calendar data change\n */\nconst TUI_CALENDAR_DATE_STREAM = tuiCreateToken();\nfunction tuiDateStreamWithTransformer(transformer) {\n  return {\n    provide: TUI_CALENDAR_DATE_STREAM,\n    deps: [[new Optional(), new Self(), NgControl], [new Optional(), transformer]],\n    useFactory: tuiControlValueFactory\n  };\n}\nfunction tuiControlValueFactory(control, transformer) {\n  return control ? tuiControlValue(control).pipe(map(value => transformer ? transformer?.fromControlValue(value) : value)) : of(null);\n}\n\n// TODO: Refactor to use `TuiValueTransformer` and add ability to provide it for all controls\n/**\n * Control value transformer of TuiDay to custom value format for InputDate* components\n */\nconst TUI_DATE_VALUE_TRANSFORMER = tuiCreateToken();\n/**\n * Control value transformer for InputDateRange component\n */\nconst TUI_DATE_RANGE_VALUE_TRANSFORMER = tuiCreateToken();\n/**\n * Control value transformer for InputDateTime component\n */\nconst TUI_DATE_TIME_VALUE_TRANSFORMER = tuiCreateToken();\n/**\n * Control value transformer for InputTime component\n */\nconst TUI_TIME_VALUE_TRANSFORMER = tuiCreateToken();\nconst TUI_CONFIRM_WORDS = tuiCreateTokenFromFactory(tuiExtractI18n('confirm'));\nconst TUI_CANCEL_WORD = tuiCreateTokenFromFactory(tuiExtractI18n('cancel'));\nconst TUI_DONE_WORD = tuiCreateTokenFromFactory(tuiExtractI18n('done'));\nconst TUI_MORE_WORD = tuiCreateTokenFromFactory(tuiExtractI18n('more'));\nconst TUI_HIDE_TEXT = tuiCreateTokenFromFactory(tuiExtractI18n('hide'));\nconst TUI_SHOW_ALL_TEXT = tuiCreateTokenFromFactory(tuiExtractI18n('showAll'));\nconst TUI_OTHER_DATE_TEXT = tuiCreateTokenFromFactory(tuiExtractI18n('otherDate'));\nconst TUI_CHOOSE_DAY_OR_RANGE_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('mobileCalendarTexts'));\nconst TUI_FROM_TO_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('range'));\nconst TUI_PLUS_MINUS_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('countTexts'));\nconst TUI_TIME_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('time'));\nconst TUI_DATE_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('dateTexts'));\nconst TUI_DIGITAL_INFORMATION_UNITS = tuiCreateTokenFromFactory(tuiExtractI18n('digitalInformationUnits'));\nconst TUI_COPY_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('copyTexts'));\nconst TUI_PASSWORD_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('passwordTexts'));\nconst TUI_CALENDAR_MONTHS = tuiCreateTokenFromFactory(tuiExtractI18n('shortCalendarMonths'));\nconst TUI_FILE_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('fileTexts'));\nconst TUI_PAGINATION_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('pagination'));\nconst TUI_INPUT_FILE_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('inputFileTexts'));\nconst TUI_MULTI_SELECT_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('multiSelectTexts'));\nconst TUI_COUNTRIES = tuiCreateTokenFromFactory(tuiExtractI18n('countries'));\nconst TUI_PREVIEW_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('previewTexts'));\nconst TUI_PREVIEW_ZOOM_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('zoomTexts'));\nconst TUI_INPUT_DATE_DEFAULT_OPTIONS = {\n  icon: () => '@tui.calendar',\n  min: TUI_FIRST_DAY,\n  max: TUI_LAST_DAY,\n  nativePicker: false\n};\n/**\n * Default parameters for InputDate component\n */\nconst TUI_INPUT_DATE_OPTIONS = tuiCreateToken(TUI_INPUT_DATE_DEFAULT_OPTIONS);\nfunction tuiInputDateOptionsProvider(options) {\n  return tuiProvideOptions(TUI_INPUT_DATE_OPTIONS, options, TUI_INPUT_DATE_DEFAULT_OPTIONS);\n}\nconst TUI_DEFAULT_ITEMS_HANDLERS = {\n  stringify: String,\n  identityMatcher: TUI_DEFAULT_IDENTITY_MATCHER,\n  disabledItemHandler: TUI_FALSE_HANDLER\n};\n/**\n * Default items handlers for components\n */\nconst TUI_ITEMS_HANDLERS = tuiCreateToken(TUI_DEFAULT_ITEMS_HANDLERS);\nfunction tuiItemsHandlersProvider(options) {\n  return tuiProvideOptions(TUI_ITEMS_HANDLERS, options, TUI_DEFAULT_ITEMS_HANDLERS);\n}\n\n/**\n * A component for mobile data picker\n */\nconst TUI_MOBILE_CALENDAR = tuiCreateToken();\nconst TUI_MOBILE_CALENDAR_PROVIDER = {\n  provide: TUI_DROPDOWN_COMPONENT,\n  useFactory: () => inject(TUI_IS_MOBILE) && inject(TUI_MOBILE_CALENDAR, {\n    optional: true\n  }) || inject(TUI_DROPDOWN_COMPONENT, {\n    skipSelf: true\n  })\n};\nconst TUI_PREVIEW_ICONS_DEFAULT = {\n  rotate: '@tui.rotate-ccw-square',\n  prev: '@tui.arrow-left',\n  next: '@tui.arrow-right',\n  zoomIn: '@tui.plus',\n  zoomOut: '@tui.minus',\n  zoomReset: '@tui.minimize'\n};\nconst TUI_PREVIEW_ICONS = tuiCreateToken(TUI_PREVIEW_ICONS_DEFAULT);\nfunction tuiPreviewIconsProvider(icons) {\n  return tuiProvideOptions(TUI_PREVIEW_ICONS, icons, TUI_PREVIEW_ICONS_DEFAULT);\n}\n\n/**\n * Validation errors\n */\nconst TUI_VALIDATION_ERRORS = tuiCreateToken({});\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_CALENDAR_DATE_STREAM, TUI_CALENDAR_MONTHS, TUI_CANCEL_WORD, TUI_CHOOSE_DAY_OR_RANGE_TEXTS, TUI_CONFIRM_WORDS, TUI_COPY_TEXTS, TUI_COUNTRIES, TUI_DATE_RANGE_VALUE_TRANSFORMER, TUI_DATE_TEXTS, TUI_DATE_TIME_VALUE_TRANSFORMER, TUI_DATE_VALUE_TRANSFORMER, TUI_DEFAULT_ITEMS_HANDLERS, TUI_DIGITAL_INFORMATION_UNITS, TUI_DONE_WORD, TUI_FILE_TEXTS, TUI_FROM_TO_TEXTS, TUI_HIDE_TEXT, TUI_INPUT_DATE_DEFAULT_OPTIONS, TUI_INPUT_DATE_OPTIONS, TUI_INPUT_FILE_TEXTS, TUI_ITEMS_HANDLERS, TUI_MOBILE_CALENDAR, TUI_MOBILE_CALENDAR_PROVIDER, TUI_MORE_WORD, TUI_MULTI_SELECT_TEXTS, TUI_OTHER_DATE_TEXT, TUI_PAGINATION_TEXTS, TUI_PASSWORD_TEXTS, TUI_PLUS_MINUS_TEXTS, TUI_PREVIEW_ICONS, TUI_PREVIEW_ICONS_DEFAULT, TUI_PREVIEW_TEXTS, TUI_PREVIEW_ZOOM_TEXTS, TUI_SHOW_ALL_TEXT, TUI_TIME_TEXTS, TUI_TIME_VALUE_TRANSFORMER, TUI_VALIDATION_ERRORS, tuiDateStreamWithTransformer, tuiInputDateOptionsProvider, tuiItemsHandlersProvider, tuiPreviewIconsProvider };\n", "function getContentEditableSelection(element) {\n  const {\n    anchorOffset = 0,\n    focusOffset = 0\n  } = element.ownerDocument.getSelection() || {};\n  const from = Math.min(anchorOffset, focusOffset);\n  const to = Math.max(anchorOffset, focusOffset);\n  return [from, to];\n}\nfunction setContentEditableSelection(element, [from, to]) {\n  var _a, _b, _c, _d;\n  const document = element.ownerDocument;\n  const range = document.createRange();\n  range.setStart(element.firstChild || element, Math.min(from, (_b = (_a = element.textContent) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0));\n  range.setEnd(element.lastChild || element, Math.min(to, (_d = (_c = element.textContent) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0));\n  const selection = document.getSelection();\n  if (selection) {\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\nclass ContentEditableAdapter {\n  constructor(element) {\n    this.element = element;\n    this.maxLength = Infinity;\n  }\n  get value() {\n    return this.element.innerText.replace(/\\n\\n$/, '\\n');\n  }\n  set value(value) {\n    // Setting into innerHTML of element with `white-space: pre;` style\n    this.element.innerHTML = value.replace(/\\n$/, '\\n\\n');\n  }\n  get selectionStart() {\n    return getContentEditableSelection(this.element)[0];\n  }\n  get selectionEnd() {\n    return getContentEditableSelection(this.element)[1];\n  }\n  setSelectionRange(from, to) {\n    setContentEditableSelection(this.element, [from !== null && from !== void 0 ? from : 0, to !== null && to !== void 0 ? to : 0]);\n  }\n  select() {\n    this.setSelectionRange(0, this.value.length);\n  }\n}\nfunction maskitoAdaptContentEditable(element) {\n  const adapter = new ContentEditableAdapter(element);\n  return new Proxy(element, {\n    get(target, prop) {\n      if (prop in adapter) {\n        return adapter[prop];\n      }\n      const nativeProperty = target[prop];\n      return typeof nativeProperty === 'function' ? nativeProperty.bind(target) : nativeProperty;\n    },\n    set(target, prop, val, receiver) {\n      return Reflect.set(prop in adapter ? adapter : target, prop, val, receiver);\n    }\n  });\n}\nconst MASKITO_DEFAULT_ELEMENT_PREDICATE = e => e.isContentEditable ? maskitoAdaptContentEditable(e) : e.querySelector('input,textarea') || e;\nconst MASKITO_DEFAULT_OPTIONS = {\n  mask: /^.*$/,\n  preprocessors: [],\n  postprocessors: [],\n  plugins: [],\n  overwriteMode: 'shift'\n};\nclass MaskHistory {\n  constructor() {\n    this.now = null;\n    this.past = [];\n    this.future = [];\n  }\n  undo() {\n    const state = this.past.pop();\n    if (state && this.now) {\n      this.future.push(this.now);\n      this.updateElement(state, 'historyUndo');\n    }\n  }\n  redo() {\n    const state = this.future.pop();\n    if (state && this.now) {\n      this.past.push(this.now);\n      this.updateElement(state, 'historyRedo');\n    }\n  }\n  updateHistory(state) {\n    if (!this.now) {\n      this.now = state;\n      return;\n    }\n    const isValueChanged = this.now.value !== state.value;\n    const isSelectionChanged = this.now.selection.some((item, index) => item !== state.selection[index]);\n    if (!isValueChanged && !isSelectionChanged) {\n      return;\n    }\n    if (isValueChanged) {\n      this.past.push(this.now);\n      this.future = [];\n    }\n    this.now = state;\n  }\n  updateElement(state, inputType) {\n    this.now = state;\n    this.updateElementState(state, {\n      inputType,\n      data: null\n    });\n  }\n}\nfunction areElementValuesEqual(sampleState, ...states) {\n  return states.every(({\n    value\n  }) => value === sampleState.value);\n}\nfunction areElementStatesEqual(sampleState, ...states) {\n  return states.every(({\n    value,\n    selection\n  }) => value === sampleState.value && selection[0] === sampleState.selection[0] && selection[1] === sampleState.selection[1]);\n}\nfunction applyOverwriteMode({\n  value,\n  selection\n}, newCharacters, mode) {\n  const [from, to] = selection;\n  const computedMode = typeof mode === 'function' ? mode({\n    value,\n    selection\n  }) : mode;\n  return {\n    value,\n    selection: computedMode === 'replace' ? [from, Math.max(from + newCharacters.length, to)] : [from, to]\n  };\n}\nfunction isFixedCharacter(char) {\n  return typeof char === 'string';\n}\nfunction getLeadingFixedCharacters(mask, validatedValuePart, newCharacter, initialElementState) {\n  let leadingFixedCharacters = '';\n  for (let i = validatedValuePart.length; i < mask.length; i++) {\n    const charConstraint = mask[i] || '';\n    const isInitiallyExisted = (initialElementState === null || initialElementState === void 0 ? void 0 : initialElementState.value[i]) === charConstraint;\n    if (!isFixedCharacter(charConstraint) || charConstraint === newCharacter && !isInitiallyExisted) {\n      return leadingFixedCharacters;\n    }\n    leadingFixedCharacters += charConstraint;\n  }\n  return leadingFixedCharacters;\n}\nfunction validateValueWithMask(value, maskExpression) {\n  if (Array.isArray(maskExpression)) {\n    return value.length === maskExpression.length && Array.from(value).every((char, i) => {\n      const charConstraint = maskExpression[i] || '';\n      return isFixedCharacter(charConstraint) ? char === charConstraint : char.match(charConstraint);\n    });\n  }\n  return maskExpression.test(value);\n}\nfunction guessValidValueByPattern(elementState, mask, initialElementState) {\n  let maskedFrom = null;\n  let maskedTo = null;\n  const maskedValue = Array.from(elementState.value).reduce((validatedCharacters, char, charIndex) => {\n    const leadingCharacters = getLeadingFixedCharacters(mask, validatedCharacters, char, initialElementState);\n    const newValidatedChars = validatedCharacters + leadingCharacters;\n    const charConstraint = mask[newValidatedChars.length] || '';\n    if (maskedFrom === null && charIndex >= elementState.selection[0]) {\n      maskedFrom = newValidatedChars.length;\n    }\n    if (maskedTo === null && charIndex >= elementState.selection[1]) {\n      maskedTo = newValidatedChars.length;\n    }\n    if (isFixedCharacter(charConstraint)) {\n      return newValidatedChars + charConstraint;\n    }\n    return char.match(charConstraint) ? newValidatedChars + char : newValidatedChars;\n  }, '');\n  const trailingFixedCharacters = getLeadingFixedCharacters(mask, maskedValue, '', initialElementState);\n  return {\n    value: validateValueWithMask(maskedValue + trailingFixedCharacters, mask) ? maskedValue + trailingFixedCharacters : maskedValue,\n    selection: [maskedFrom !== null && maskedFrom !== void 0 ? maskedFrom : maskedValue.length, maskedTo !== null && maskedTo !== void 0 ? maskedTo : maskedValue.length]\n  };\n}\nfunction guessValidValueByRegExp({\n  value,\n  selection\n}, maskRegExp) {\n  const [from, to] = selection;\n  let newFrom = from;\n  let newTo = to;\n  const validatedValue = Array.from(value).reduce((validatedValuePart, char, i) => {\n    const newPossibleValue = validatedValuePart + char;\n    if (from === i) {\n      newFrom = validatedValuePart.length;\n    }\n    if (to === i) {\n      newTo = validatedValuePart.length;\n    }\n    return newPossibleValue.match(maskRegExp) ? newPossibleValue : validatedValuePart;\n  }, '');\n  return {\n    value: validatedValue,\n    selection: [newFrom, newTo]\n  };\n}\nfunction calibrateValueByMask(elementState, mask, initialElementState = null) {\n  if (validateValueWithMask(elementState.value, mask)) {\n    return elementState;\n  }\n  const {\n    value,\n    selection\n  } = Array.isArray(mask) ? guessValidValueByPattern(elementState, mask, initialElementState) : guessValidValueByRegExp(elementState, mask);\n  return {\n    selection,\n    value: Array.isArray(mask) ? value.slice(0, mask.length) : value\n  };\n}\nfunction removeFixedMaskCharacters(initialElementState, mask) {\n  if (!Array.isArray(mask)) {\n    return initialElementState;\n  }\n  const [from, to] = initialElementState.selection;\n  const selection = [];\n  const unmaskedValue = Array.from(initialElementState.value).reduce((rawValue, char, i) => {\n    const charConstraint = mask[i] || '';\n    if (i === from) {\n      selection.push(rawValue.length);\n    }\n    if (i === to) {\n      selection.push(rawValue.length);\n    }\n    return isFixedCharacter(charConstraint) && charConstraint === char ? rawValue : rawValue + char;\n  }, '');\n  if (selection.length < 2) {\n    selection.push(...new Array(2 - selection.length).fill(unmaskedValue.length));\n  }\n  return {\n    value: unmaskedValue,\n    selection: [selection[0], selection[1]]\n  };\n}\nclass MaskModel {\n  constructor(initialElementState, maskOptions) {\n    this.initialElementState = initialElementState;\n    this.maskOptions = maskOptions;\n    this.value = '';\n    this.selection = [0, 0];\n    const {\n      value,\n      selection\n    } = calibrateValueByMask(this.initialElementState, this.getMaskExpression(this.initialElementState));\n    this.value = value;\n    this.selection = selection;\n  }\n  addCharacters([from, to], newCharacters) {\n    const {\n      value,\n      maskOptions\n    } = this;\n    const maskExpression = this.getMaskExpression({\n      value: value.slice(0, from) + newCharacters + value.slice(to),\n      selection: [from + newCharacters.length, from + newCharacters.length]\n    });\n    const initialElementState = {\n      value,\n      selection: [from, to]\n    };\n    const unmaskedElementState = removeFixedMaskCharacters(initialElementState, maskExpression);\n    const [unmaskedFrom, unmaskedTo] = applyOverwriteMode(unmaskedElementState, newCharacters, maskOptions.overwriteMode).selection;\n    const newUnmaskedLeadingValuePart = unmaskedElementState.value.slice(0, unmaskedFrom) + newCharacters;\n    const newCaretIndex = newUnmaskedLeadingValuePart.length;\n    const maskedElementState = calibrateValueByMask({\n      value: newUnmaskedLeadingValuePart + unmaskedElementState.value.slice(unmaskedTo),\n      selection: [newCaretIndex, newCaretIndex]\n    }, maskExpression, initialElementState);\n    const isInvalidCharsInsertion =\n    // eslint-disable-next-line @typescript-eslint/prefer-string-starts-ends-with\n    value.slice(0, unmaskedFrom) === calibrateValueByMask({\n      value: newUnmaskedLeadingValuePart,\n      selection: [newCaretIndex, newCaretIndex]\n    }, maskExpression, initialElementState).value;\n    if (isInvalidCharsInsertion || areElementStatesEqual(this, maskedElementState) // If typing new characters does not change value\n    ) {\n      throw new Error('Invalid mask value');\n    }\n    this.value = maskedElementState.value;\n    this.selection = maskedElementState.selection;\n  }\n  deleteCharacters([from, to]) {\n    if (from === to || !to) {\n      return;\n    }\n    const {\n      value\n    } = this;\n    const maskExpression = this.getMaskExpression({\n      value: value.slice(0, from) + value.slice(to),\n      selection: [from, from]\n    });\n    const initialElementState = {\n      value,\n      selection: [from, to]\n    };\n    const unmaskedElementState = removeFixedMaskCharacters(initialElementState, maskExpression);\n    const [unmaskedFrom, unmaskedTo] = unmaskedElementState.selection;\n    const newUnmaskedValue = unmaskedElementState.value.slice(0, unmaskedFrom) + unmaskedElementState.value.slice(unmaskedTo);\n    const maskedElementState = calibrateValueByMask({\n      value: newUnmaskedValue,\n      selection: [unmaskedFrom, unmaskedFrom]\n    }, maskExpression, initialElementState);\n    this.value = maskedElementState.value;\n    this.selection = maskedElementState.selection;\n  }\n  getMaskExpression(elementState) {\n    const {\n      mask\n    } = this.maskOptions;\n    return typeof mask === 'function' ? mask(elementState) : mask;\n  }\n}\nclass EventListener {\n  constructor(element) {\n    this.element = element;\n    this.listeners = [];\n  }\n  listen(eventType, fn, options) {\n    const untypedFn = fn;\n    this.element.addEventListener(eventType, untypedFn, options);\n    this.listeners.push(() => this.element.removeEventListener(eventType, untypedFn, options));\n  }\n  destroy() {\n    this.listeners.forEach(stopListen => stopListen());\n  }\n}\nconst HotkeyModifier = {\n  CTRL: 1 << 0,\n  ALT: 1 << 1,\n  SHIFT: 1 << 2,\n  META: 1 << 3\n};\n// TODO add variants that can be processed correctly\nconst HotkeyCode = {\n  Y: 89,\n  Z: 90\n};\n/**\n * Checks if the passed keyboard event match the required hotkey.\n *\n * @example\n * input.addEventListener('keydown', (event) => {\n *     if (isHotkey(event, HotkeyModifier.CTRL | HotkeyModifier.SHIFT, HotkeyCode.Z)) {\n *         // redo hotkey pressed\n *     }\n * })\n *\n * @return will return `true` only if the {@link HotkeyCode} matches and only the necessary\n * {@link HotkeyModifier modifiers} have been pressed\n */\nfunction isHotkey(event, modifiers, hotkeyCode) {\n  return event.ctrlKey === !!(modifiers & HotkeyModifier.CTRL) && event.altKey === !!(modifiers & HotkeyModifier.ALT) && event.shiftKey === !!(modifiers & HotkeyModifier.SHIFT) && event.metaKey === !!(modifiers & HotkeyModifier.META) &&\n  /**\n   * We intentionally use legacy {@link KeyboardEvent#keyCode `keyCode`} property. It is more\n   * \"keyboard-layout\"-independent than {@link KeyboardEvent#key `key`} or {@link KeyboardEvent#code `code`} properties.\n   * @see {@link https://github.com/taiga-family/maskito/issues/315 `KeyboardEvent#code` issue}\n   */\n  event.keyCode === hotkeyCode;\n}\nfunction isRedo(event) {\n  return isHotkey(event, HotkeyModifier.CTRL, HotkeyCode.Y) ||\n  // Windows\n  isHotkey(event, HotkeyModifier.CTRL | HotkeyModifier.SHIFT, HotkeyCode.Z) ||\n  // Windows & Android\n  isHotkey(event, HotkeyModifier.META | HotkeyModifier.SHIFT, HotkeyCode.Z) // macOS & iOS\n  ;\n}\nfunction isUndo(event) {\n  return isHotkey(event, HotkeyModifier.CTRL, HotkeyCode.Z) ||\n  // Windows & Android\n  isHotkey(event, HotkeyModifier.META, HotkeyCode.Z) // macOS & iOS\n  ;\n}\n\n/**\n * Sets value to element, and dispatches input event\n * if you passed ELementState, it also sets selection range\n *\n * @example\n * maskitoUpdateElement(input, newValue);\n * maskitoUpdateElement(input, elementState);\n *\n * @see {@link https://github.com/taiga-family/maskito/issues/804 issue}\n *\n * @return void\n */\nfunction maskitoUpdateElement(element, valueOrElementState) {\n  var _a;\n  const initialValue = element.value;\n  if (typeof valueOrElementState === 'string') {\n    element.value = valueOrElementState;\n  } else {\n    const [from, to] = valueOrElementState.selection;\n    element.value = valueOrElementState.value;\n    if (element.matches(':focus')) {\n      (_a = element.setSelectionRange) === null || _a === void 0 ? void 0 : _a.call(element, from, to);\n    }\n  }\n  if (element.value !== initialValue) {\n    element.dispatchEvent(new Event('input',\n    /**\n     * React handles this event only on bubbling phase\n     *\n     * here is the list of events that are processed in the capture stage, others are processed in the bubbling stage\n     * https://github.com/facebook/react/blob/cb2439624f43c510007f65aea5c50a8bb97917e4/packages/react-dom-bindings/src/events/DOMPluginEventSystem.js#L222\n     */\n    {\n      bubbles: true\n    }));\n  }\n}\nfunction getLineSelection({\n  value,\n  selection\n}, isForward) {\n  const [from, to] = selection;\n  if (from !== to) {\n    return [from, to];\n  }\n  const nearestBreak = isForward ? value.slice(from).indexOf('\\n') + 1 || value.length : value.slice(0, to).lastIndexOf('\\n') + 1;\n  const selectFrom = isForward ? from : nearestBreak;\n  const selectTo = isForward ? nearestBreak : to;\n  return [selectFrom, selectTo];\n}\nfunction getNotEmptySelection({\n  value,\n  selection\n}, isForward) {\n  const [from, to] = selection;\n  if (from !== to) {\n    return [from, to];\n  }\n  const notEmptySelection = isForward ? [from, to + 1] : [from - 1, to];\n  return notEmptySelection.map(x => Math.min(Math.max(x, 0), value.length));\n}\nconst TRAILING_SPACES_REG = /\\s+$/g;\nconst LEADING_SPACES_REG = /^\\s+/g;\nconst SPACE_REG = /\\s/;\nfunction getWordSelection({\n  value,\n  selection\n}, isForward) {\n  const [from, to] = selection;\n  if (from !== to) {\n    return [from, to];\n  }\n  if (isForward) {\n    const valueAfterSelectionStart = value.slice(from);\n    const [leadingSpaces] = valueAfterSelectionStart.match(LEADING_SPACES_REG) || [''];\n    const nearestWordEndIndex = valueAfterSelectionStart.trimStart().search(SPACE_REG);\n    return [from, nearestWordEndIndex !== -1 ? from + leadingSpaces.length + nearestWordEndIndex : value.length];\n  }\n  const valueBeforeSelectionEnd = value.slice(0, to);\n  const [trailingSpaces] = valueBeforeSelectionEnd.match(TRAILING_SPACES_REG) || [''];\n  const selectedWordLength = valueBeforeSelectionEnd.trimEnd().split('').reverse().findIndex(char => SPACE_REG.exec(char));\n  return [selectedWordLength !== -1 ? to - trailingSpaces.length - selectedWordLength : 0, to];\n}\n\n/* eslint-disable @typescript-eslint/no-restricted-types */\n/**\n * @internal\n */\nfunction maskitoPipe(processors = []) {\n  return (initialData, ...readonlyArgs) => processors.reduce((data, fn) => Object.assign(Object.assign({}, data), fn(data, ...readonlyArgs)), initialData);\n}\nfunction maskitoTransform(valueOrState, maskitoOptions) {\n  const options = Object.assign(Object.assign({}, MASKITO_DEFAULT_OPTIONS), maskitoOptions);\n  const preprocessor = maskitoPipe(options.preprocessors);\n  const postprocessor = maskitoPipe(options.postprocessors);\n  const initialElementState = typeof valueOrState === 'string' ? {\n    value: valueOrState,\n    selection: [0, 0]\n  } : valueOrState;\n  const {\n    elementState\n  } = preprocessor({\n    elementState: initialElementState,\n    data: ''\n  }, 'validation');\n  const maskModel = new MaskModel(elementState, options);\n  const {\n    value,\n    selection\n  } = postprocessor(maskModel, initialElementState);\n  return typeof valueOrState === 'string' ? value : {\n    value,\n    selection\n  };\n}\nclass Maskito extends MaskHistory {\n  constructor(element, maskitoOptions) {\n    super();\n    this.element = element;\n    this.maskitoOptions = maskitoOptions;\n    this.isTextArea = this.element.nodeName === 'TEXTAREA';\n    this.eventListener = new EventListener(this.element);\n    this.options = Object.assign(Object.assign({}, MASKITO_DEFAULT_OPTIONS), this.maskitoOptions);\n    this.upcomingElementState = null;\n    this.preprocessor = maskitoPipe(this.options.preprocessors);\n    this.postprocessor = maskitoPipe(this.options.postprocessors);\n    this.teardowns = this.options.plugins.map(plugin => plugin(this.element, this.options));\n    this.updateHistory(this.elementState);\n    this.eventListener.listen('keydown', event => {\n      if (isRedo(event)) {\n        event.preventDefault();\n        return this.redo();\n      }\n      if (isUndo(event)) {\n        event.preventDefault();\n        return this.undo();\n      }\n    });\n    this.eventListener.listen('beforeinput', event => {\n      var _a, _b, _c;\n      const isForward = event.inputType.includes('Forward');\n      this.updateHistory(this.elementState);\n      switch (event.inputType) {\n        // historyUndo/historyRedo will not be triggered if value was modified programmatically\n        case 'historyUndo':\n          event.preventDefault();\n          return this.undo();\n        case 'historyRedo':\n          event.preventDefault();\n          return this.redo();\n        case 'deleteByCut':\n        case 'deleteContentBackward':\n        case 'deleteContentForward':\n          return this.handleDelete({\n            event,\n            isForward,\n            selection: getNotEmptySelection(this.elementState, isForward)\n          });\n        case 'deleteWordForward':\n        case 'deleteWordBackward':\n          return this.handleDelete({\n            event,\n            isForward,\n            selection: getWordSelection(this.elementState, isForward),\n            force: true\n          });\n        case 'deleteSoftLineBackward':\n        case 'deleteSoftLineForward':\n        case 'deleteHardLineBackward':\n        case 'deleteHardLineForward':\n          return this.handleDelete({\n            event,\n            isForward,\n            selection: getLineSelection(this.elementState, isForward),\n            force: true\n          });\n        case 'insertCompositionText':\n          return;\n        // will be handled inside `compositionend` event\n        case 'insertReplacementText':\n          /**\n           * According {@link https://www.w3.org/TR/input-events-2 W3C specification}:\n           * > `insertReplacementText` – insert or replace existing text by means of a spell checker,\n           * > auto-correct, writing suggestions or similar.\n           * ___\n           * Firefox emits `insertReplacementText` event for its suggestion/autofill and for spell checker.\n           * However, it is impossible to detect which part of the textfield value is going to be replaced\n           * (`selectionStart` and `selectionEnd` just equal to the last caret position).\n           * ___\n           * Chrome does not fire `beforeinput` event for its suggestion/autofill.\n           * It emits only `input` event with `inputType` and `data` set to `undefined`.\n           * ___\n           * All these browser limitations make us to validate the result value later in `input` event.\n           */\n          return;\n        case 'insertLineBreak':\n        case 'insertParagraph':\n          return this.handleEnter(event);\n        case 'insertFromPaste':\n        case 'insertText':\n        case 'insertFromDrop':\n        default:\n          return this.handleInsert(event, (_c = (_a = event.data) !== null && _a !== void 0 ? _a :\n          // `event.data` for `contentEditable` is always `null` for paste/drop events\n          (_b = event.dataTransfer) === null || _b === void 0 ? void 0 : _b.getData('text/plain')) !== null && _c !== void 0 ? _c : '');\n      }\n    });\n    this.eventListener.listen('input', () => {\n      if (this.upcomingElementState) {\n        this.updateElementState(this.upcomingElementState);\n        this.upcomingElementState = null;\n      }\n    }, {\n      capture: true\n    });\n    this.eventListener.listen('input', ({\n      inputType\n    }) => {\n      if (inputType === 'insertCompositionText') {\n        return; // will be handled inside `compositionend` event\n      }\n      this.ensureValueFitsMask();\n      this.updateHistory(this.elementState);\n    });\n    this.eventListener.listen('compositionend', () => {\n      this.ensureValueFitsMask();\n      this.updateHistory(this.elementState);\n    });\n  }\n  destroy() {\n    this.eventListener.destroy();\n    this.teardowns.forEach(teardown => teardown === null || teardown === void 0 ? void 0 : teardown());\n  }\n  updateElementState({\n    value,\n    selection\n  }, eventInit) {\n    const initialValue = this.elementState.value;\n    this.updateValue(value);\n    this.updateSelectionRange(selection);\n    if (eventInit && initialValue !== value) {\n      this.dispatchInputEvent(eventInit);\n    }\n  }\n  get elementState() {\n    const {\n      value,\n      selectionStart,\n      selectionEnd\n    } = this.element;\n    return {\n      value,\n      selection: [selectionStart !== null && selectionStart !== void 0 ? selectionStart : 0, selectionEnd !== null && selectionEnd !== void 0 ? selectionEnd : 0]\n    };\n  }\n  get maxLength() {\n    const {\n      maxLength\n    } = this.element;\n    return maxLength === -1 ? Infinity : maxLength;\n  }\n  updateSelectionRange([from, to]) {\n    var _a;\n    const {\n      element\n    } = this;\n    if (element.matches(':focus') && (element.selectionStart !== from || element.selectionEnd !== to)) {\n      (_a = element.setSelectionRange) === null || _a === void 0 ? void 0 : _a.call(element, from, to);\n    }\n  }\n  updateValue(value) {\n    this.element.value = value;\n  }\n  ensureValueFitsMask() {\n    this.updateElementState(maskitoTransform(this.elementState, this.options), {\n      inputType: 'insertText',\n      data: null\n    });\n  }\n  dispatchInputEvent(eventInit = {\n    inputType: 'insertText',\n    data: null\n  }) {\n    if (globalThis.InputEvent) {\n      this.element.dispatchEvent(new InputEvent('input', Object.assign(Object.assign({}, eventInit), {\n        bubbles: true,\n        cancelable: false\n      })));\n    }\n  }\n  handleDelete({\n    event,\n    selection,\n    isForward,\n    force = false\n  }) {\n    const initialState = {\n      value: this.elementState.value,\n      selection\n    };\n    const [initialFrom, initialTo] = initialState.selection;\n    const {\n      elementState\n    } = this.preprocessor({\n      elementState: initialState,\n      data: ''\n    }, isForward ? 'deleteForward' : 'deleteBackward');\n    const maskModel = new MaskModel(elementState, this.options);\n    const [from, to] = elementState.selection;\n    maskModel.deleteCharacters([from, to]);\n    const newElementState = this.postprocessor(maskModel, initialState);\n    const newPossibleValue = initialState.value.slice(0, initialFrom) + initialState.value.slice(initialTo);\n    if (newPossibleValue === newElementState.value && !force && !this.element.isContentEditable) {\n      return;\n    }\n    if (areElementValuesEqual(initialState, elementState, maskModel, newElementState)) {\n      event.preventDefault();\n      // User presses Backspace/Delete for the fixed value\n      return this.updateSelectionRange(isForward ? [to, to] : [from, from]);\n    }\n    this.upcomingElementState = newElementState;\n  }\n  handleInsert(event, data) {\n    const {\n      options,\n      maxLength,\n      element,\n      elementState: initialElementState\n    } = this;\n    const {\n      elementState,\n      data: insertedText = data\n    } = this.preprocessor({\n      data,\n      elementState: initialElementState\n    }, 'insert');\n    const maskModel = new MaskModel(elementState, options);\n    try {\n      maskModel.addCharacters(elementState.selection, insertedText);\n    } catch (_a) {\n      return event.preventDefault();\n    }\n    const [from, to] = elementState.selection;\n    const newPossibleValue = initialElementState.value.slice(0, from) + data + initialElementState.value.slice(to);\n    const newElementState = this.postprocessor(maskModel, initialElementState);\n    if (newElementState.value.length > maxLength) {\n      return event.preventDefault();\n    }\n    if (newPossibleValue !== newElementState.value || element.isContentEditable) {\n      this.upcomingElementState = newElementState;\n      if (options.overwriteMode === 'replace' && newPossibleValue.length > maxLength) {\n        /**\n         * Browsers know nothing about Maskito and its `overwriteMode`.\n         * When textfield value length is already equal to attribute `maxlength`,\n         * pressing any key (even with valid value) does not emit `input` event.\n         */\n        this.dispatchInputEvent({\n          inputType: 'insertText',\n          data\n        });\n      }\n    }\n  }\n  handleEnter(event) {\n    if (this.isTextArea || this.element.isContentEditable) {\n      this.handleInsert(event, '\\n');\n    }\n  }\n}\nfunction maskitoChangeEventPlugin() {\n  return element => {\n    if (element.isContentEditable) {\n      return;\n    }\n    let value = element.value;\n    const valueListener = () => {\n      value = element.value;\n    };\n    const blurListener = () => {\n      if (element.value !== value) {\n        element.dispatchEvent(new Event('change', {\n          bubbles: true\n        }));\n      }\n    };\n    element.addEventListener('focus', valueListener);\n    element.addEventListener('change', valueListener);\n    element.addEventListener('blur', blurListener);\n    return () => {\n      element.removeEventListener('focus', valueListener);\n      element.removeEventListener('change', valueListener);\n      element.removeEventListener('blur', blurListener);\n    };\n  };\n}\nfunction maskitoInitialCalibrationPlugin(customOptions) {\n  return (element, options) => {\n    var _a, _b;\n    const from = (_a = element.selectionStart) !== null && _a !== void 0 ? _a : 0;\n    const to = (_b = element.selectionEnd) !== null && _b !== void 0 ? _b : 0;\n    maskitoUpdateElement(element, {\n      value: maskitoTransform(element.value, customOptions || options),\n      selection: [from, to]\n    });\n  };\n}\nfunction maskitoStrictCompositionPlugin() {\n  return (element, maskitoOptions) => {\n    const listener = event => {\n      var _a, _b;\n      if (event.inputType !== 'insertCompositionText') {\n        return;\n      }\n      const selection = [(_a = element.selectionStart) !== null && _a !== void 0 ? _a : 0, (_b = element.selectionEnd) !== null && _b !== void 0 ? _b : 0];\n      const elementState = {\n        selection,\n        value: element.value\n      };\n      const validatedState = maskitoTransform(elementState, maskitoOptions);\n      if (!areElementStatesEqual(elementState, validatedState)) {\n        event.preventDefault();\n        maskitoUpdateElement(element, validatedState);\n      }\n    };\n    element.addEventListener('input', listener);\n    return () => element.removeEventListener('input', listener);\n  };\n}\nexport { MASKITO_DEFAULT_ELEMENT_PREDICATE, MASKITO_DEFAULT_OPTIONS, Maskito, maskitoAdaptContentEditable, maskitoChangeEventPlugin, maskitoInitialCalibrationPlugin, maskitoPipe, maskitoStrictCompositionPlugin, maskitoTransform, maskitoUpdateElement };"],
  "mappings": "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",
  "names": []
}
