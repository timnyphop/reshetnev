{
  "version": 3,
  "sources": ["../../../../../node_modules/@taiga-ui/cdk/fesm2022/taiga-ui-cdk-directives-native-validator.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { inject, DestroyRef, NgZone, Directive, Input } from '@angular/core';\nimport { NG_VALIDATORS } from '@angular/forms';\nimport { tuiZonefree, tuiTakeUntilDestroyed } from '@taiga-ui/cdk/observables';\nimport { tuiInjectElement, tuiProvide } from '@taiga-ui/cdk/utils';\nimport { timer } from 'rxjs';\nclass TuiNativeValidator {\n  constructor() {\n    this.destroyRef = inject(DestroyRef);\n    this.zone = inject(NgZone);\n    this.el = tuiInjectElement();\n    this.tuiNativeValidator = 'Invalid';\n  }\n  validate(control) {\n    this.control = control;\n    timer(0).pipe(tuiZonefree(this.zone), tuiTakeUntilDestroyed(this.destroyRef)).subscribe(() => this.handleValidation());\n    return null;\n  }\n  handleValidation() {\n    this.el.setCustomValidity?.(this.control?.touched && this.control?.invalid ? this.tuiNativeValidator : '');\n  }\n  static {\n    this.ɵfac = function TuiNativeValidator_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiNativeValidator)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiNativeValidator,\n      selectors: [[\"\", \"tuiNativeValidator\", \"\"]],\n      hostBindings: function TuiNativeValidator_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"focusout\", function TuiNativeValidator_focusout_HostBindingHandler() {\n            return ctx.handleValidation();\n          });\n        }\n      },\n      inputs: {\n        tuiNativeValidator: \"tuiNativeValidator\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([tuiProvide(NG_VALIDATORS, TuiNativeValidator, true)])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiNativeValidator, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: '[tuiNativeValidator]',\n      providers: [tuiProvide(NG_VALIDATORS, TuiNativeValidator, true)],\n      host: {\n        '(focusout)': 'handleValidation()'\n      }\n    }]\n  }], null, {\n    tuiNativeValidator: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiNativeValidator };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAMA,IAAM,sBAAN,MAAM,oBAAmB;AAAA,EACvB,cAAc;AACZ,SAAK,aAAa,OAAO,UAAU;AACnC,SAAK,OAAO,OAAO,MAAM;AACzB,SAAK,KAAK,iBAAiB;AAC3B,SAAK,qBAAqB;AAAA,EAC5B;AAAA,EACA,SAAS,SAAS;AAChB,SAAK,UAAU;AACf,UAAM,CAAC,EAAE,KAAK,YAAY,KAAK,IAAI,GAAG,sBAAsB,KAAK,UAAU,CAAC,EAAE,UAAU,MAAM,KAAK,iBAAiB,CAAC;AACrH,WAAO;AAAA,EACT;AAAA,EACA,mBAAmB;AACjB,SAAK,GAAG,oBAAoB,KAAK,SAAS,WAAW,KAAK,SAAS,UAAU,KAAK,qBAAqB,EAAE;AAAA,EAC3G;AAwBF;AAtBI,oBAAK,OAAO,SAAS,2BAA2B,mBAAmB;AACjE,SAAO,KAAK,qBAAqB,qBAAoB;AACvD;AAGA,oBAAK,OAAyB,kBAAkB;AAAA,EAC9C,MAAM;AAAA,EACN,WAAW,CAAC,CAAC,IAAI,sBAAsB,EAAE,CAAC;AAAA,EAC1C,cAAc,SAAS,gCAAgC,IAAI,KAAK;AAC9D,QAAI,KAAK,GAAG;AACV,MAAG,WAAW,YAAY,SAAS,iDAAiD;AAClF,eAAO,IAAI,iBAAiB;AAAA,MAC9B,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EACA,QAAQ;AAAA,IACN,oBAAoB;AAAA,EACtB;AAAA,EACA,YAAY;AAAA,EACZ,UAAU,CAAI,mBAAmB,CAAC,WAAW,eAAe,qBAAoB,IAAI,CAAC,CAAC,CAAC;AACzF,CAAC;AApCL,IAAM,qBAAN;AAAA,CAuCC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,oBAAoB,CAAC;AAAA,IAC3F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,WAAW,CAAC,WAAW,eAAe,oBAAoB,IAAI,CAAC;AAAA,MAC/D,MAAM;AAAA,QACJ,cAAc;AAAA,MAChB;AAAA,IACF,CAAC;AAAA,EACH,CAAC,GAAG,MAAM;AAAA,IACR,oBAAoB,CAAC;AAAA,MACnB,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;",
  "names": []
}
