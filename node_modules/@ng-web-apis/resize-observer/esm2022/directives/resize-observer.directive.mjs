import { Directive, ElementRef, inject } from '@angular/core';
import { ResizeObserverService } from '../services/resize-observer.service';
import { RESIZE_OPTION_BOX, RESIZE_OPTION_BOX_DEFAULT } from '../tokens/resize-option-box';
import * as i0 from "@angular/core";
class WaResizeObserver {
    waResizeObserver = inject(ResizeObserverService);
    box = RESIZE_OPTION_BOX_DEFAULT;
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: WaResizeObserver, deps: [], target: i0.ɵɵFactoryTarget.Directive });
    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: WaResizeObserver, isStandalone: true, selector: "[waResizeObserver]", inputs: { waResizeBox: ["box", "waResizeBox"] }, outputs: { waResizeObserver: "waResizeObserver" }, providers: [
            ResizeObserverService,
            {
                provide: RESIZE_OPTION_BOX,
                useFactory: () => inject(ElementRef).nativeElement.getAttribute('waResizeBox') ||
                    RESIZE_OPTION_BOX_DEFAULT,
            },
        ], ngImport: i0 });
}
export { WaResizeObserver };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: WaResizeObserver, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                    selector: '[waResizeObserver]',
                    inputs: ['waResizeBox: box'],
                    outputs: ['waResizeObserver'],
                    providers: [
                        ResizeObserverService,
                        {
                            provide: RESIZE_OPTION_BOX,
                            useFactory: () => inject(ElementRef).nativeElement.getAttribute('waResizeBox') ||
                                RESIZE_OPTION_BOX_DEFAULT,
                        },
                    ],
                }]
        }] });
/**
 * @deprecated: use {@link WaResizeObserver}
 */
export const ResizeObserverDirective = WaResizeObserver;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzaXplLW9ic2VydmVyLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYnMvcmVzaXplLW9ic2VydmVyL3NyYy9kaXJlY3RpdmVzL3Jlc2l6ZS1vYnNlcnZlci5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTVELE9BQU8sRUFBQyxxQkFBcUIsRUFBQyxNQUFNLHFDQUFxQyxDQUFDO0FBQzFFLE9BQU8sRUFBQyxpQkFBaUIsRUFBRSx5QkFBeUIsRUFBQyxNQUFNLDZCQUE2QixDQUFDOztBQUV6RixNQWVhLGdCQUFnQjtJQUNOLGdCQUFnQixHQUFHLE1BQU0sQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO0lBRTdELEdBQUcsR0FBNkIseUJBQXlCLENBQUM7d0dBSHhELGdCQUFnQjs0RkFBaEIsZ0JBQWdCLHFLQVZkO1lBQ1AscUJBQXFCO1lBQ3JCO2dCQUNJLE9BQU8sRUFBRSxpQkFBaUI7Z0JBQzFCLFVBQVUsRUFBRSxHQUE2QixFQUFFLENBQ3ZDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQyxhQUFhLENBQUMsWUFBWSxDQUFDLGFBQWEsQ0FBQztvQkFDNUQseUJBQXlCO2FBQ2hDO1NBQ0o7O1NBRVEsZ0JBQWdCOzRGQUFoQixnQkFBZ0I7a0JBZjVCLFNBQVM7bUJBQUM7b0JBQ1AsVUFBVSxFQUFFLElBQUk7b0JBQ2hCLFFBQVEsRUFBRSxvQkFBb0I7b0JBQzlCLE1BQU0sRUFBRSxDQUFDLGtCQUFrQixDQUFDO29CQUM1QixPQUFPLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQztvQkFDN0IsU0FBUyxFQUFFO3dCQUNQLHFCQUFxQjt3QkFDckI7NEJBQ0ksT0FBTyxFQUFFLGlCQUFpQjs0QkFDMUIsVUFBVSxFQUFFLEdBQTZCLEVBQUUsQ0FDdkMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxZQUFZLENBQUMsYUFBYSxDQUFDO2dDQUM1RCx5QkFBeUI7eUJBQ2hDO3FCQUNKO2lCQUNKOztBQU9EOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sdUJBQXVCLEdBQUcsZ0JBQWdCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RpcmVjdGl2ZSwgRWxlbWVudFJlZiwgaW5qZWN0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHtSZXNpemVPYnNlcnZlclNlcnZpY2V9IGZyb20gJy4uL3NlcnZpY2VzL3Jlc2l6ZS1vYnNlcnZlci5zZXJ2aWNlJztcbmltcG9ydCB7UkVTSVpFX09QVElPTl9CT1gsIFJFU0laRV9PUFRJT05fQk9YX0RFRkFVTFR9IGZyb20gJy4uL3Rva2Vucy9yZXNpemUtb3B0aW9uLWJveCc7XG5cbkBEaXJlY3RpdmUoe1xuICAgIHN0YW5kYWxvbmU6IHRydWUsXG4gICAgc2VsZWN0b3I6ICdbd2FSZXNpemVPYnNlcnZlcl0nLFxuICAgIGlucHV0czogWyd3YVJlc2l6ZUJveDogYm94J10sXG4gICAgb3V0cHV0czogWyd3YVJlc2l6ZU9ic2VydmVyJ10sXG4gICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIFJlc2l6ZU9ic2VydmVyU2VydmljZSxcbiAgICAgICAge1xuICAgICAgICAgICAgcHJvdmlkZTogUkVTSVpFX09QVElPTl9CT1gsXG4gICAgICAgICAgICB1c2VGYWN0b3J5OiAoKTogUmVzaXplT2JzZXJ2ZXJCb3hPcHRpb25zID0+XG4gICAgICAgICAgICAgICAgaW5qZWN0KEVsZW1lbnRSZWYpLm5hdGl2ZUVsZW1lbnQuZ2V0QXR0cmlidXRlKCd3YVJlc2l6ZUJveCcpIHx8XG4gICAgICAgICAgICAgICAgUkVTSVpFX09QVElPTl9CT1hfREVGQVVMVCxcbiAgICAgICAgfSxcbiAgICBdLFxufSlcbmV4cG9ydCBjbGFzcyBXYVJlc2l6ZU9ic2VydmVyIHtcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgd2FSZXNpemVPYnNlcnZlciA9IGluamVjdChSZXNpemVPYnNlcnZlclNlcnZpY2UpO1xuXG4gICAgcHVibGljIGJveDogUmVzaXplT2JzZXJ2ZXJCb3hPcHRpb25zID0gUkVTSVpFX09QVElPTl9CT1hfREVGQVVMVDtcbn1cblxuLyoqXG4gKiBAZGVwcmVjYXRlZDogdXNlIHtAbGluayBXYVJlc2l6ZU9ic2VydmVyfVxuICovXG5leHBvcnQgY29uc3QgUmVzaXplT2JzZXJ2ZXJEaXJlY3RpdmUgPSBXYVJlc2l6ZU9ic2VydmVyO1xuIl19