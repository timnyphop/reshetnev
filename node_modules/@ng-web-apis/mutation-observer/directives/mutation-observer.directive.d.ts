import type { OnDestroy } from '@angular/core';
import { EventEmitter } from '@angular/core';
import { SafeObserver } from '../classes/safe-observer';
import * as i0 from "@angular/core";
export declare class WaMutationObserver extends SafeObserver implements OnDestroy {
    private readonly nativeElement;
    private readonly config;
    attributeFilter: string;
    attributeOldValue: "";
    attributes: "";
    characterData: "";
    characterDataOldValue: "";
    childList: "";
    subtree: "";
    readonly waMutationObserver: EventEmitter<MutationRecord[]>;
    constructor();
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<WaMutationObserver, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<WaMutationObserver, "[waMutationObserver]", ["MutationObserver"], { "attributeFilter": { "alias": "attributeFilter"; "required": false; }; "attributeOldValue": { "alias": "attributeOldValue"; "required": false; }; "attributes": { "alias": "attributes"; "required": false; }; "characterData": { "alias": "characterData"; "required": false; }; "characterDataOldValue": { "alias": "characterDataOldValue"; "required": false; }; "childList": { "alias": "childList"; "required": false; }; "subtree": { "alias": "subtree"; "required": false; }; }, { "waMutationObserver": "waMutationObserver"; }, never, never, true, never>;
}
/**
 * @deprecated: use {@link WaMutationObserver}
 */
export declare const MutationObserverDirective: typeof WaMutationObserver;
