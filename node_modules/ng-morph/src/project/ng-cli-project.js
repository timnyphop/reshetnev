"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NgCliProject = void 0;
const tslib_1 = require("tslib");
const ts_morph_1 = require("ts-morph");
const devkit_file_system_1 = require("./devkit-file-system");
const file_system_1 = require("./file-system");
const ng_morph_tree_1 = require("./ng-morph-tree");
class NgCliProject extends ts_morph_1.Project {
    constructor(_a) {
        var { host } = _a, options = tslib_1.__rest(_a, ["host"]);
        super(Object.assign(Object.assign({}, options), { fileSystem: new file_system_1.NgCliFileSystem(new devkit_file_system_1.DevkitFileSystem(host)) }));
    }
    getFileSystem() {
        return super.getFileSystem();
    }
    async save() {
        await super.save();
        await this.trySaveTree();
    }
    saveSync() {
        super.saveSync();
        void this.trySaveTree();
    }
    async trySaveTree() {
        const tree = this.getFileSystem().fs.tree;
        if (tree instanceof ng_morph_tree_1.NgMorphTree) {
            await tree.commitChanges();
        }
    }
}
exports.NgCliProject = NgCliProject;
//# sourceMappingURL=ng-cli-project.js.map