import type { OptionalKind, StructureKind } from 'ts-morph';
import type { Pattern } from './pattern';
import type { StructureType } from './structure-type';
import type { StructuredStatement } from './structured-statement';
export declare function getDeclarationCreator<Declaration extends StructuredStatement<Declaration>, Structure extends OptionalKind<StructureType<Declaration>> = OptionalKind<StructureType<Declaration>>, CommonStructure extends Partial<Structure> & {
    kind: StructureKind;
} = Partial<Structure> & {
    kind: StructureKind;
}>(common: CommonStructure, { position }?: {
    position?: number | null;
}): (pattern: Pattern, structures: Structure | Structure[]) => void;
