import type { DecoratableNode, Decorator, DecoratorStructure } from 'ts-morph';
import type { Query } from '../utils';
export declare function getDecorators(declarations: DecoratableNode | DecoratableNode[], query?: Query<DecoratorStructure>): Decorator[];
export declare const getAllDecorators: (pattern: import("../utils").Pattern, query?: Partial<{
    leadingTrivia?: string | string[] | undefined;
    trailingTrivia?: string | string[] | undefined;
    name: string | string[];
    arguments?: string | string[] | undefined;
    typeArguments?: string | string[] | undefined;
    kind: import("ts-morph").StructureKind.Decorator | import("ts-morph").StructureKind.Decorator[];
}> | undefined) => Decorator[];
