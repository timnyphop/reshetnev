"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.pushToDecoratorArrayProperty = void 0;
const ts_morph_1 = require("ts-morph");
const decorators_1 = require("../../decorators");
const push_to_object_literal_array_property_1 = require("./push-to-object-literal-array-property");
// TODO: investigate how to handle consts in descriptors that don't accept array of array type, like styleUrls
function pushToDecoratorArrayProperty(classDeclaration, decoratorName, propertyName, initializer, { unique = false, forceToArray = false, } = {}) {
    const [decorator] = (0, decorators_1.getDecorators)(classDeclaration, {
        name: decoratorName,
    });
    const [metadata = decorator === null || decorator === void 0 ? void 0 : decorator.addArgument(`{${propertyName}: []}`)] = (decorator === null || decorator === void 0 ? void 0 : decorator.getArguments()) || [];
    if (!ts_morph_1.Node.isObjectLiteralExpression(metadata)) {
        return;
    }
    (0, push_to_object_literal_array_property_1.pushToObjectLiteralArrayProperty)(metadata, propertyName, initializer, {
        unique,
        forceToArray,
    });
}
exports.pushToDecoratorArrayProperty = pushToDecoratorArrayProperty;
//# sourceMappingURL=push-to-decorator-array-property.js.map