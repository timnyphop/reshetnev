export const TUI_DUTCH_LANGUAGE_ADDON_EDITOR = {
    colorSelectorModeNames: ['Effen kleur', 'Kleurverloop'],
    toolbarTools: {
        undo: 'Undo',
        redo: 'Redo',
        font: 'Lettertype',
        fontStyle: 'Tekenstijl',
        fontSize: 'Punten',
        bold: 'Vet',
        italic: 'Cursief',
        underline: 'Onderstrepen',
        strikeThrough: 'Doorhalen',
        justify: 'Uitlijning',
        justifyLeft: 'Uitlijning links',
        justifyCenter: 'Uitlijning midden',
        justifyRight: 'Uitlijning rechts',
        justifyFull: 'Uitlijning uitvullen',
        list: 'Lijst',
        indent: 'Inspringen',
        outdent: 'Uitspringen',
        unorderedList: 'Ongesorteerde lijst',
        orderedList: 'Gesorteerde lijst',
        quote: 'Citeren',
        foreColor: 'Kleur',
        backColor: 'Achtergrondkleur',
        hiliteColor: 'Tekstmarkeringskleur',
        clear: 'Wis',
        link: 'Koppeling',
        attach: 'Bestand toevoegen',
        tex: 'TeX toevoegen',
        code: 'Code',
        image: 'Afbeelding toevoegen',
        insertHorizontalRule: 'Horizontale lijn toevoegen',
        superscript: 'Superscript',
        subscript: 'Subscript',
        insertTable: 'Insert table',
        insertGroup: 'Insert group',
        hiliteGroup: 'Hilite group',
        removeGroup: 'Remove group',
        insertAnchor: 'Insert anchor',
        mergeCells: 'Merge cells',
        splitCells: 'Split cells',
        rowsColumnsManaging: 'Managing rows and columns',
        cellColor: 'Cell color',
        setDetails: 'Details',
        removeDetails: 'Remove details',
    },
    editorEditLink: {
        urlExample: 'example.com',
        anchorExample: 'anchor',
    },
    editorTableCommands: [
        ['Insert column before', 'Insert column after'],
        ['Insert row before', 'Insert row after'],
        ['Delete column', 'Delete row'],
    ],
    editorCodeOptions: ['Code in the text', 'Code in block'],
    editorFontOptions: {
        small: 'Small',
        large: 'Large',
        normal: 'Normal',
        title: 'Title',
        subtitle: 'Subtitle',
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkb24tZWRpdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaTE4bi9sYW5ndWFnZXMvZHV0Y2gvYWRkb24tZWRpdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE1BQU0sQ0FBQyxNQUFNLCtCQUErQixHQUFzQjtJQUM5RCxzQkFBc0IsRUFBRSxDQUFDLGFBQWEsRUFBRSxjQUFjLENBQUM7SUFDdkQsWUFBWSxFQUFFO1FBQ1YsSUFBSSxFQUFFLE1BQU07UUFDWixJQUFJLEVBQUUsTUFBTTtRQUNaLElBQUksRUFBRSxZQUFZO1FBQ2xCLFNBQVMsRUFBRSxZQUFZO1FBQ3ZCLFFBQVEsRUFBRSxRQUFRO1FBQ2xCLElBQUksRUFBRSxLQUFLO1FBQ1gsTUFBTSxFQUFFLFNBQVM7UUFDakIsU0FBUyxFQUFFLGNBQWM7UUFDekIsYUFBYSxFQUFFLFdBQVc7UUFDMUIsT0FBTyxFQUFFLFlBQVk7UUFDckIsV0FBVyxFQUFFLGtCQUFrQjtRQUMvQixhQUFhLEVBQUUsbUJBQW1CO1FBQ2xDLFlBQVksRUFBRSxtQkFBbUI7UUFDakMsV0FBVyxFQUFFLHNCQUFzQjtRQUNuQyxJQUFJLEVBQUUsT0FBTztRQUNiLE1BQU0sRUFBRSxZQUFZO1FBQ3BCLE9BQU8sRUFBRSxhQUFhO1FBQ3RCLGFBQWEsRUFBRSxxQkFBcUI7UUFDcEMsV0FBVyxFQUFFLG1CQUFtQjtRQUNoQyxLQUFLLEVBQUUsU0FBUztRQUNoQixTQUFTLEVBQUUsT0FBTztRQUNsQixTQUFTLEVBQUUsa0JBQWtCO1FBQzdCLFdBQVcsRUFBRSxzQkFBc0I7UUFDbkMsS0FBSyxFQUFFLEtBQUs7UUFDWixJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsbUJBQW1CO1FBQzNCLEdBQUcsRUFBRSxlQUFlO1FBQ3BCLElBQUksRUFBRSxNQUFNO1FBQ1osS0FBSyxFQUFFLHNCQUFzQjtRQUM3QixvQkFBb0IsRUFBRSw0QkFBNEI7UUFDbEQsV0FBVyxFQUFFLGFBQWE7UUFDMUIsU0FBUyxFQUFFLFdBQVc7UUFDdEIsV0FBVyxFQUFFLGNBQWM7UUFDM0IsV0FBVyxFQUFFLGNBQWM7UUFDM0IsV0FBVyxFQUFFLGNBQWM7UUFDM0IsV0FBVyxFQUFFLGNBQWM7UUFDM0IsWUFBWSxFQUFFLGVBQWU7UUFDN0IsVUFBVSxFQUFFLGFBQWE7UUFDekIsVUFBVSxFQUFFLGFBQWE7UUFDekIsbUJBQW1CLEVBQUUsMkJBQTJCO1FBQ2hELFNBQVMsRUFBRSxZQUFZO1FBQ3ZCLFVBQVUsRUFBRSxTQUFTO1FBQ3JCLGFBQWEsRUFBRSxnQkFBZ0I7S0FDbEM7SUFDRCxjQUFjLEVBQUU7UUFDWixVQUFVLEVBQUUsYUFBYTtRQUN6QixhQUFhLEVBQUUsUUFBUTtLQUMxQjtJQUNELG1CQUFtQixFQUFFO1FBQ2pCLENBQUMsc0JBQXNCLEVBQUUscUJBQXFCLENBQUM7UUFDL0MsQ0FBQyxtQkFBbUIsRUFBRSxrQkFBa0IsQ0FBQztRQUN6QyxDQUFDLGVBQWUsRUFBRSxZQUFZLENBQUM7S0FDbEM7SUFDRCxpQkFBaUIsRUFBRSxDQUFDLGtCQUFrQixFQUFFLGVBQWUsQ0FBQztJQUN4RCxpQkFBaUIsRUFBRTtRQUNmLEtBQUssRUFBRSxPQUFPO1FBQ2QsS0FBSyxFQUFFLE9BQU87UUFDZCxNQUFNLEVBQUUsUUFBUTtRQUNoQixLQUFLLEVBQUUsT0FBTztRQUNkLFFBQVEsRUFBRSxVQUFVO0tBQ3ZCO0NBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHtUdWlMYW5ndWFnZUVkaXRvcn0gZnJvbSAnQHRhaWdhLXVpL2kxOG4vdHlwZXMnO1xuXG5leHBvcnQgY29uc3QgVFVJX0RVVENIX0xBTkdVQUdFX0FERE9OX0VESVRPUjogVHVpTGFuZ3VhZ2VFZGl0b3IgPSB7XG4gICAgY29sb3JTZWxlY3Rvck1vZGVOYW1lczogWydFZmZlbiBrbGV1cicsICdLbGV1cnZlcmxvb3AnXSxcbiAgICB0b29sYmFyVG9vbHM6IHtcbiAgICAgICAgdW5kbzogJ1VuZG8nLFxuICAgICAgICByZWRvOiAnUmVkbycsXG4gICAgICAgIGZvbnQ6ICdMZXR0ZXJ0eXBlJyxcbiAgICAgICAgZm9udFN0eWxlOiAnVGVrZW5zdGlqbCcsXG4gICAgICAgIGZvbnRTaXplOiAnUHVudGVuJyxcbiAgICAgICAgYm9sZDogJ1ZldCcsXG4gICAgICAgIGl0YWxpYzogJ0N1cnNpZWYnLFxuICAgICAgICB1bmRlcmxpbmU6ICdPbmRlcnN0cmVwZW4nLFxuICAgICAgICBzdHJpa2VUaHJvdWdoOiAnRG9vcmhhbGVuJyxcbiAgICAgICAganVzdGlmeTogJ1VpdGxpam5pbmcnLFxuICAgICAgICBqdXN0aWZ5TGVmdDogJ1VpdGxpam5pbmcgbGlua3MnLFxuICAgICAgICBqdXN0aWZ5Q2VudGVyOiAnVWl0bGlqbmluZyBtaWRkZW4nLFxuICAgICAgICBqdXN0aWZ5UmlnaHQ6ICdVaXRsaWpuaW5nIHJlY2h0cycsXG4gICAgICAgIGp1c3RpZnlGdWxsOiAnVWl0bGlqbmluZyB1aXR2dWxsZW4nLFxuICAgICAgICBsaXN0OiAnTGlqc3QnLFxuICAgICAgICBpbmRlbnQ6ICdJbnNwcmluZ2VuJyxcbiAgICAgICAgb3V0ZGVudDogJ1VpdHNwcmluZ2VuJyxcbiAgICAgICAgdW5vcmRlcmVkTGlzdDogJ09uZ2Vzb3J0ZWVyZGUgbGlqc3QnLFxuICAgICAgICBvcmRlcmVkTGlzdDogJ0dlc29ydGVlcmRlIGxpanN0JyxcbiAgICAgICAgcXVvdGU6ICdDaXRlcmVuJyxcbiAgICAgICAgZm9yZUNvbG9yOiAnS2xldXInLFxuICAgICAgICBiYWNrQ29sb3I6ICdBY2h0ZXJncm9uZGtsZXVyJyxcbiAgICAgICAgaGlsaXRlQ29sb3I6ICdUZWtzdG1hcmtlcmluZ3NrbGV1cicsXG4gICAgICAgIGNsZWFyOiAnV2lzJyxcbiAgICAgICAgbGluazogJ0tvcHBlbGluZycsXG4gICAgICAgIGF0dGFjaDogJ0Jlc3RhbmQgdG9ldm9lZ2VuJyxcbiAgICAgICAgdGV4OiAnVGVYIHRvZXZvZWdlbicsXG4gICAgICAgIGNvZGU6ICdDb2RlJyxcbiAgICAgICAgaW1hZ2U6ICdBZmJlZWxkaW5nIHRvZXZvZWdlbicsXG4gICAgICAgIGluc2VydEhvcml6b250YWxSdWxlOiAnSG9yaXpvbnRhbGUgbGlqbiB0b2V2b2VnZW4nLFxuICAgICAgICBzdXBlcnNjcmlwdDogJ1N1cGVyc2NyaXB0JyxcbiAgICAgICAgc3Vic2NyaXB0OiAnU3Vic2NyaXB0JyxcbiAgICAgICAgaW5zZXJ0VGFibGU6ICdJbnNlcnQgdGFibGUnLFxuICAgICAgICBpbnNlcnRHcm91cDogJ0luc2VydCBncm91cCcsXG4gICAgICAgIGhpbGl0ZUdyb3VwOiAnSGlsaXRlIGdyb3VwJyxcbiAgICAgICAgcmVtb3ZlR3JvdXA6ICdSZW1vdmUgZ3JvdXAnLFxuICAgICAgICBpbnNlcnRBbmNob3I6ICdJbnNlcnQgYW5jaG9yJyxcbiAgICAgICAgbWVyZ2VDZWxsczogJ01lcmdlIGNlbGxzJyxcbiAgICAgICAgc3BsaXRDZWxsczogJ1NwbGl0IGNlbGxzJyxcbiAgICAgICAgcm93c0NvbHVtbnNNYW5hZ2luZzogJ01hbmFnaW5nIHJvd3MgYW5kIGNvbHVtbnMnLFxuICAgICAgICBjZWxsQ29sb3I6ICdDZWxsIGNvbG9yJyxcbiAgICAgICAgc2V0RGV0YWlsczogJ0RldGFpbHMnLFxuICAgICAgICByZW1vdmVEZXRhaWxzOiAnUmVtb3ZlIGRldGFpbHMnLFxuICAgIH0sXG4gICAgZWRpdG9yRWRpdExpbms6IHtcbiAgICAgICAgdXJsRXhhbXBsZTogJ2V4YW1wbGUuY29tJyxcbiAgICAgICAgYW5jaG9yRXhhbXBsZTogJ2FuY2hvcicsXG4gICAgfSxcbiAgICBlZGl0b3JUYWJsZUNvbW1hbmRzOiBbXG4gICAgICAgIFsnSW5zZXJ0IGNvbHVtbiBiZWZvcmUnLCAnSW5zZXJ0IGNvbHVtbiBhZnRlciddLFxuICAgICAgICBbJ0luc2VydCByb3cgYmVmb3JlJywgJ0luc2VydCByb3cgYWZ0ZXInXSxcbiAgICAgICAgWydEZWxldGUgY29sdW1uJywgJ0RlbGV0ZSByb3cnXSxcbiAgICBdLFxuICAgIGVkaXRvckNvZGVPcHRpb25zOiBbJ0NvZGUgaW4gdGhlIHRleHQnLCAnQ29kZSBpbiBibG9jayddLFxuICAgIGVkaXRvckZvbnRPcHRpb25zOiB7XG4gICAgICAgIHNtYWxsOiAnU21hbGwnLFxuICAgICAgICBsYXJnZTogJ0xhcmdlJyxcbiAgICAgICAgbm9ybWFsOiAnTm9ybWFsJyxcbiAgICAgICAgdGl0bGU6ICdUaXRsZScsXG4gICAgICAgIHN1YnRpdGxlOiAnU3VidGl0bGUnLFxuICAgIH0sXG59O1xuIl19