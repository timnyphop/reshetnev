export const TUI_SPANISH_LANGUAGE_ADDON_EDITOR = {
    colorSelectorModeNames: ['Color sólido', 'Gradiente'],
    toolbarTools: {
        undo: 'Deshacer',
        redo: 'Rehacer',
        font: 'Fuente',
        fontStyle: 'Estilo de la fuente',
        fontSize: 'Tamaño de la fuente',
        bold: 'Negrita',
        italic: 'Cursiva',
        underline: 'Subrayado',
        strikeThrough: 'Tachado',
        justify: 'Justificar',
        justifyLeft: 'Alinear a izquierda',
        justifyCenter: 'Centrar',
        justifyRight: 'Alinear a derecha',
        justifyFull: 'Justificar',
        list: 'Listar',
        indent: 'Sangría',
        outdent: 'Sin sangría',
        unorderedList: 'Lista desordenada',
        orderedList: 'Lista ordenada',
        quote: 'Cita',
        foreColor: 'Color',
        backColor: 'Color de fondo',
        hiliteColor: 'Color de resaltado',
        clear: 'Limpiar',
        link: 'Enlace',
        attach: 'Adjuntar archivo',
        tex: 'Insertar texto',
        code: 'Código',
        image: 'Insertar imagen',
        insertHorizontalRule: 'Insertar regla horizontal',
        superscript: 'Superíndice',
        subscript: 'Subíndice',
        insertTable: 'Insert table',
        hiliteGroup: 'Hilite group',
        insertGroup: 'Insert group',
        removeGroup: 'Remove group',
        insertAnchor: 'Insert anchor',
        mergeCells: 'Merge cells',
        splitCells: 'Split cells',
        rowsColumnsManaging: 'Managing rows and columns',
        cellColor: 'Cell color',
        setDetails: 'Details',
        removeDetails: 'Remove details',
    },
    editorEditLink: {
        urlExample: 'example.com',
        anchorExample: 'anchor',
    },
    editorTableCommands: [
        ['Insert column before', 'Insert column after'],
        ['Insert row before', 'Insert row after'],
        ['Delete column', 'Delete row'],
    ],
    editorCodeOptions: ['Code in the text', 'Code in block'],
    editorFontOptions: {
        small: 'Small',
        normal: 'Normal',
        large: 'Large',
        title: 'Title',
        subtitle: 'Subtitle',
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkb24tZWRpdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaTE4bi9sYW5ndWFnZXMvc3BhbmlzaC9hZGRvbi1lZGl0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLE1BQU0saUNBQWlDLEdBQXNCO0lBQ2hFLHNCQUFzQixFQUFFLENBQUMsY0FBYyxFQUFFLFdBQVcsQ0FBQztJQUNyRCxZQUFZLEVBQUU7UUFDVixJQUFJLEVBQUUsVUFBVTtRQUNoQixJQUFJLEVBQUUsU0FBUztRQUNmLElBQUksRUFBRSxRQUFRO1FBQ2QsU0FBUyxFQUFFLHFCQUFxQjtRQUNoQyxRQUFRLEVBQUUscUJBQXFCO1FBQy9CLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLFNBQVM7UUFDakIsU0FBUyxFQUFFLFdBQVc7UUFDdEIsYUFBYSxFQUFFLFNBQVM7UUFDeEIsT0FBTyxFQUFFLFlBQVk7UUFDckIsV0FBVyxFQUFFLHFCQUFxQjtRQUNsQyxhQUFhLEVBQUUsU0FBUztRQUN4QixZQUFZLEVBQUUsbUJBQW1CO1FBQ2pDLFdBQVcsRUFBRSxZQUFZO1FBQ3pCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLFNBQVM7UUFDakIsT0FBTyxFQUFFLGFBQWE7UUFDdEIsYUFBYSxFQUFFLG1CQUFtQjtRQUNsQyxXQUFXLEVBQUUsZ0JBQWdCO1FBQzdCLEtBQUssRUFBRSxNQUFNO1FBQ2IsU0FBUyxFQUFFLE9BQU87UUFDbEIsU0FBUyxFQUFFLGdCQUFnQjtRQUMzQixXQUFXLEVBQUUsb0JBQW9CO1FBQ2pDLEtBQUssRUFBRSxTQUFTO1FBQ2hCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLGtCQUFrQjtRQUMxQixHQUFHLEVBQUUsZ0JBQWdCO1FBQ3JCLElBQUksRUFBRSxRQUFRO1FBQ2QsS0FBSyxFQUFFLGlCQUFpQjtRQUN4QixvQkFBb0IsRUFBRSwyQkFBMkI7UUFDakQsV0FBVyxFQUFFLGFBQWE7UUFDMUIsU0FBUyxFQUFFLFdBQVc7UUFDdEIsV0FBVyxFQUFFLGNBQWM7UUFDM0IsV0FBVyxFQUFFLGNBQWM7UUFDM0IsV0FBVyxFQUFFLGNBQWM7UUFDM0IsV0FBVyxFQUFFLGNBQWM7UUFDM0IsWUFBWSxFQUFFLGVBQWU7UUFDN0IsVUFBVSxFQUFFLGFBQWE7UUFDekIsVUFBVSxFQUFFLGFBQWE7UUFDekIsbUJBQW1CLEVBQUUsMkJBQTJCO1FBQ2hELFNBQVMsRUFBRSxZQUFZO1FBQ3ZCLFVBQVUsRUFBRSxTQUFTO1FBQ3JCLGFBQWEsRUFBRSxnQkFBZ0I7S0FDbEM7SUFDRCxjQUFjLEVBQUU7UUFDWixVQUFVLEVBQUUsYUFBYTtRQUN6QixhQUFhLEVBQUUsUUFBUTtLQUMxQjtJQUNELG1CQUFtQixFQUFFO1FBQ2pCLENBQUMsc0JBQXNCLEVBQUUscUJBQXFCLENBQUM7UUFDL0MsQ0FBQyxtQkFBbUIsRUFBRSxrQkFBa0IsQ0FBQztRQUN6QyxDQUFDLGVBQWUsRUFBRSxZQUFZLENBQUM7S0FDbEM7SUFDRCxpQkFBaUIsRUFBRSxDQUFDLGtCQUFrQixFQUFFLGVBQWUsQ0FBQztJQUN4RCxpQkFBaUIsRUFBRTtRQUNmLEtBQUssRUFBRSxPQUFPO1FBQ2QsTUFBTSxFQUFFLFFBQVE7UUFDaEIsS0FBSyxFQUFFLE9BQU87UUFDZCxLQUFLLEVBQUUsT0FBTztRQUNkLFFBQVEsRUFBRSxVQUFVO0tBQ3ZCO0NBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHtUdWlMYW5ndWFnZUVkaXRvcn0gZnJvbSAnQHRhaWdhLXVpL2kxOG4vdHlwZXMnO1xuXG5leHBvcnQgY29uc3QgVFVJX1NQQU5JU0hfTEFOR1VBR0VfQURET05fRURJVE9SOiBUdWlMYW5ndWFnZUVkaXRvciA9IHtcbiAgICBjb2xvclNlbGVjdG9yTW9kZU5hbWVzOiBbJ0NvbG9yIHPDs2xpZG8nLCAnR3JhZGllbnRlJ10sXG4gICAgdG9vbGJhclRvb2xzOiB7XG4gICAgICAgIHVuZG86ICdEZXNoYWNlcicsXG4gICAgICAgIHJlZG86ICdSZWhhY2VyJyxcbiAgICAgICAgZm9udDogJ0Z1ZW50ZScsXG4gICAgICAgIGZvbnRTdHlsZTogJ0VzdGlsbyBkZSBsYSBmdWVudGUnLFxuICAgICAgICBmb250U2l6ZTogJ1RhbWHDsW8gZGUgbGEgZnVlbnRlJyxcbiAgICAgICAgYm9sZDogJ05lZ3JpdGEnLFxuICAgICAgICBpdGFsaWM6ICdDdXJzaXZhJyxcbiAgICAgICAgdW5kZXJsaW5lOiAnU3VicmF5YWRvJyxcbiAgICAgICAgc3RyaWtlVGhyb3VnaDogJ1RhY2hhZG8nLFxuICAgICAgICBqdXN0aWZ5OiAnSnVzdGlmaWNhcicsXG4gICAgICAgIGp1c3RpZnlMZWZ0OiAnQWxpbmVhciBhIGl6cXVpZXJkYScsXG4gICAgICAgIGp1c3RpZnlDZW50ZXI6ICdDZW50cmFyJyxcbiAgICAgICAganVzdGlmeVJpZ2h0OiAnQWxpbmVhciBhIGRlcmVjaGEnLFxuICAgICAgICBqdXN0aWZ5RnVsbDogJ0p1c3RpZmljYXInLFxuICAgICAgICBsaXN0OiAnTGlzdGFyJyxcbiAgICAgICAgaW5kZW50OiAnU2FuZ3LDrWEnLFxuICAgICAgICBvdXRkZW50OiAnU2luIHNhbmdyw61hJyxcbiAgICAgICAgdW5vcmRlcmVkTGlzdDogJ0xpc3RhIGRlc29yZGVuYWRhJyxcbiAgICAgICAgb3JkZXJlZExpc3Q6ICdMaXN0YSBvcmRlbmFkYScsXG4gICAgICAgIHF1b3RlOiAnQ2l0YScsXG4gICAgICAgIGZvcmVDb2xvcjogJ0NvbG9yJyxcbiAgICAgICAgYmFja0NvbG9yOiAnQ29sb3IgZGUgZm9uZG8nLFxuICAgICAgICBoaWxpdGVDb2xvcjogJ0NvbG9yIGRlIHJlc2FsdGFkbycsXG4gICAgICAgIGNsZWFyOiAnTGltcGlhcicsXG4gICAgICAgIGxpbms6ICdFbmxhY2UnLFxuICAgICAgICBhdHRhY2g6ICdBZGp1bnRhciBhcmNoaXZvJyxcbiAgICAgICAgdGV4OiAnSW5zZXJ0YXIgdGV4dG8nLFxuICAgICAgICBjb2RlOiAnQ8OzZGlnbycsXG4gICAgICAgIGltYWdlOiAnSW5zZXJ0YXIgaW1hZ2VuJyxcbiAgICAgICAgaW5zZXJ0SG9yaXpvbnRhbFJ1bGU6ICdJbnNlcnRhciByZWdsYSBob3Jpem9udGFsJyxcbiAgICAgICAgc3VwZXJzY3JpcHQ6ICdTdXBlcsOtbmRpY2UnLFxuICAgICAgICBzdWJzY3JpcHQ6ICdTdWLDrW5kaWNlJyxcbiAgICAgICAgaW5zZXJ0VGFibGU6ICdJbnNlcnQgdGFibGUnLFxuICAgICAgICBoaWxpdGVHcm91cDogJ0hpbGl0ZSBncm91cCcsXG4gICAgICAgIGluc2VydEdyb3VwOiAnSW5zZXJ0IGdyb3VwJyxcbiAgICAgICAgcmVtb3ZlR3JvdXA6ICdSZW1vdmUgZ3JvdXAnLFxuICAgICAgICBpbnNlcnRBbmNob3I6ICdJbnNlcnQgYW5jaG9yJyxcbiAgICAgICAgbWVyZ2VDZWxsczogJ01lcmdlIGNlbGxzJyxcbiAgICAgICAgc3BsaXRDZWxsczogJ1NwbGl0IGNlbGxzJyxcbiAgICAgICAgcm93c0NvbHVtbnNNYW5hZ2luZzogJ01hbmFnaW5nIHJvd3MgYW5kIGNvbHVtbnMnLFxuICAgICAgICBjZWxsQ29sb3I6ICdDZWxsIGNvbG9yJyxcbiAgICAgICAgc2V0RGV0YWlsczogJ0RldGFpbHMnLFxuICAgICAgICByZW1vdmVEZXRhaWxzOiAnUmVtb3ZlIGRldGFpbHMnLFxuICAgIH0sXG4gICAgZWRpdG9yRWRpdExpbms6IHtcbiAgICAgICAgdXJsRXhhbXBsZTogJ2V4YW1wbGUuY29tJyxcbiAgICAgICAgYW5jaG9yRXhhbXBsZTogJ2FuY2hvcicsXG4gICAgfSxcbiAgICBlZGl0b3JUYWJsZUNvbW1hbmRzOiBbXG4gICAgICAgIFsnSW5zZXJ0IGNvbHVtbiBiZWZvcmUnLCAnSW5zZXJ0IGNvbHVtbiBhZnRlciddLFxuICAgICAgICBbJ0luc2VydCByb3cgYmVmb3JlJywgJ0luc2VydCByb3cgYWZ0ZXInXSxcbiAgICAgICAgWydEZWxldGUgY29sdW1uJywgJ0RlbGV0ZSByb3cnXSxcbiAgICBdLFxuICAgIGVkaXRvckNvZGVPcHRpb25zOiBbJ0NvZGUgaW4gdGhlIHRleHQnLCAnQ29kZSBpbiBibG9jayddLFxuICAgIGVkaXRvckZvbnRPcHRpb25zOiB7XG4gICAgICAgIHNtYWxsOiAnU21hbGwnLFxuICAgICAgICBub3JtYWw6ICdOb3JtYWwnLFxuICAgICAgICBsYXJnZTogJ0xhcmdlJyxcbiAgICAgICAgdGl0bGU6ICdUaXRsZScsXG4gICAgICAgIHN1YnRpdGxlOiAnU3VidGl0bGUnLFxuICAgIH0sXG59O1xuIl19