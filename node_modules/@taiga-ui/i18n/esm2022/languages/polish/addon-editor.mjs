export const TUI_POLISH_LANGUAGE_ADDON_EDITOR = {
    colorSelectorModeNames: ['Kolor', 'Gradient'],
    toolbarTools: {
        undo: 'Cofnij',
        redo: 'Ponów',
        font: 'Czcionka',
        fontStyle: 'Styl czcionki',
        fontSize: 'Rozmiar czcionki',
        bold: 'Pogrubienie',
        italic: 'Kursywa',
        underline: 'Podkreślenie',
        strikeThrough: 'Przekreślenie',
        justify: 'Wyrównanie',
        justifyLeft: 'Wyrównanie do lewej',
        justifyCenter: 'Wyrównanie do środka',
        justifyRight: 'Wyrównanie do prawej',
        justifyFull: 'Justowanie',
        list: 'Lista',
        indent: 'Zwiększ wcięcie',
        outdent: 'Zmniejsz wcięcie',
        unorderedList: 'Lista punktowana',
        orderedList: 'Lista numerowana',
        quote: 'Cytat',
        foreColor: 'Kolor tekstu',
        backColor: 'Kolor tła',
        hiliteColor: 'Kolor zaznaczenia',
        clear: 'Wyczyść',
        link: 'Link',
        attach: 'Załącz plik',
        tex: 'Wstaw wzór',
        code: 'Kod',
        image: 'Wstaw ilustrację',
        insertHorizontalRule: 'Wstaw separator',
        superscript: 'Indeks górny',
        subscript: 'Indeks dolny',
        insertTable: 'Wstaw tabelę',
        insertGroup: 'Insert group',
        hiliteGroup: 'Hilite group',
        removeGroup: 'Remove group',
        insertAnchor: 'Insert anchor',
        mergeCells: 'Scal komórki',
        splitCells: 'Podziel komórki',
        rowsColumnsManaging: 'Zarządzaj wierszami i kolumnami',
        cellColor: 'Kolor komórki',
        setDetails: 'Details',
        removeDetails: 'Remove details',
    },
    editorEditLink: {
        urlExample: 'example.com',
        anchorExample: 'anchor',
    },
    editorTableCommands: [
        ['Wstaw kolumnę przed', 'Wstaw kolumnę po'],
        ['Wstaw wiersz przed', 'Wstaw wiersz po'],
        ['Usuń kolumnę', 'Usuń wiersz'],
    ],
    editorCodeOptions: ['Kod w tekście', 'Kod w bloku'],
    editorFontOptions: {
        small: 'Small',
        normal: 'Normalny',
        large: 'Large',
        title: 'Tytuł',
        subtitle: 'Podtytuł',
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkb24tZWRpdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaTE4bi9sYW5ndWFnZXMvcG9saXNoL2FkZG9uLWVkaXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLENBQUMsTUFBTSxnQ0FBZ0MsR0FBc0I7SUFDL0Qsc0JBQXNCLEVBQUUsQ0FBQyxPQUFPLEVBQUUsVUFBVSxDQUFDO0lBQzdDLFlBQVksRUFBRTtRQUNWLElBQUksRUFBRSxRQUFRO1FBQ2QsSUFBSSxFQUFFLE9BQU87UUFDYixJQUFJLEVBQUUsVUFBVTtRQUNoQixTQUFTLEVBQUUsZUFBZTtRQUMxQixRQUFRLEVBQUUsa0JBQWtCO1FBQzVCLElBQUksRUFBRSxhQUFhO1FBQ25CLE1BQU0sRUFBRSxTQUFTO1FBQ2pCLFNBQVMsRUFBRSxjQUFjO1FBQ3pCLGFBQWEsRUFBRSxlQUFlO1FBQzlCLE9BQU8sRUFBRSxZQUFZO1FBQ3JCLFdBQVcsRUFBRSxxQkFBcUI7UUFDbEMsYUFBYSxFQUFFLHNCQUFzQjtRQUNyQyxZQUFZLEVBQUUsc0JBQXNCO1FBQ3BDLFdBQVcsRUFBRSxZQUFZO1FBQ3pCLElBQUksRUFBRSxPQUFPO1FBQ2IsTUFBTSxFQUFFLGlCQUFpQjtRQUN6QixPQUFPLEVBQUUsa0JBQWtCO1FBQzNCLGFBQWEsRUFBRSxrQkFBa0I7UUFDakMsV0FBVyxFQUFFLGtCQUFrQjtRQUMvQixLQUFLLEVBQUUsT0FBTztRQUNkLFNBQVMsRUFBRSxjQUFjO1FBQ3pCLFNBQVMsRUFBRSxXQUFXO1FBQ3RCLFdBQVcsRUFBRSxtQkFBbUI7UUFDaEMsS0FBSyxFQUFFLFNBQVM7UUFDaEIsSUFBSSxFQUFFLE1BQU07UUFDWixNQUFNLEVBQUUsYUFBYTtRQUNyQixHQUFHLEVBQUUsWUFBWTtRQUNqQixJQUFJLEVBQUUsS0FBSztRQUNYLEtBQUssRUFBRSxrQkFBa0I7UUFDekIsb0JBQW9CLEVBQUUsaUJBQWlCO1FBQ3ZDLFdBQVcsRUFBRSxjQUFjO1FBQzNCLFNBQVMsRUFBRSxjQUFjO1FBQ3pCLFdBQVcsRUFBRSxjQUFjO1FBQzNCLFdBQVcsRUFBRSxjQUFjO1FBQzNCLFdBQVcsRUFBRSxjQUFjO1FBQzNCLFdBQVcsRUFBRSxjQUFjO1FBQzNCLFlBQVksRUFBRSxlQUFlO1FBQzdCLFVBQVUsRUFBRSxjQUFjO1FBQzFCLFVBQVUsRUFBRSxpQkFBaUI7UUFDN0IsbUJBQW1CLEVBQUUsaUNBQWlDO1FBQ3RELFNBQVMsRUFBRSxlQUFlO1FBQzFCLFVBQVUsRUFBRSxTQUFTO1FBQ3JCLGFBQWEsRUFBRSxnQkFBZ0I7S0FDbEM7SUFDRCxjQUFjLEVBQUU7UUFDWixVQUFVLEVBQUUsYUFBYTtRQUN6QixhQUFhLEVBQUUsUUFBUTtLQUMxQjtJQUNELG1CQUFtQixFQUFFO1FBQ2pCLENBQUMscUJBQXFCLEVBQUUsa0JBQWtCLENBQUM7UUFDM0MsQ0FBQyxvQkFBb0IsRUFBRSxpQkFBaUIsQ0FBQztRQUN6QyxDQUFDLGNBQWMsRUFBRSxhQUFhLENBQUM7S0FDbEM7SUFDRCxpQkFBaUIsRUFBRSxDQUFDLGVBQWUsRUFBRSxhQUFhLENBQUM7SUFDbkQsaUJBQWlCLEVBQUU7UUFDZixLQUFLLEVBQUUsT0FBTztRQUNkLE1BQU0sRUFBRSxVQUFVO1FBQ2xCLEtBQUssRUFBRSxPQUFPO1FBQ2QsS0FBSyxFQUFFLE9BQU87UUFDZCxRQUFRLEVBQUUsVUFBVTtLQUN2QjtDQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7VHVpTGFuZ3VhZ2VFZGl0b3J9IGZyb20gJ0B0YWlnYS11aS9pMThuL3R5cGVzJztcblxuZXhwb3J0IGNvbnN0IFRVSV9QT0xJU0hfTEFOR1VBR0VfQURET05fRURJVE9SOiBUdWlMYW5ndWFnZUVkaXRvciA9IHtcbiAgICBjb2xvclNlbGVjdG9yTW9kZU5hbWVzOiBbJ0tvbG9yJywgJ0dyYWRpZW50J10sXG4gICAgdG9vbGJhclRvb2xzOiB7XG4gICAgICAgIHVuZG86ICdDb2ZuaWonLFxuICAgICAgICByZWRvOiAnUG9uw7N3JyxcbiAgICAgICAgZm9udDogJ0N6Y2lvbmthJyxcbiAgICAgICAgZm9udFN0eWxlOiAnU3R5bCBjemNpb25raScsXG4gICAgICAgIGZvbnRTaXplOiAnUm96bWlhciBjemNpb25raScsXG4gICAgICAgIGJvbGQ6ICdQb2dydWJpZW5pZScsXG4gICAgICAgIGl0YWxpYzogJ0t1cnN5d2EnLFxuICAgICAgICB1bmRlcmxpbmU6ICdQb2RrcmXFm2xlbmllJyxcbiAgICAgICAgc3RyaWtlVGhyb3VnaDogJ1ByemVrcmXFm2xlbmllJyxcbiAgICAgICAganVzdGlmeTogJ1d5csOzd25hbmllJyxcbiAgICAgICAganVzdGlmeUxlZnQ6ICdXeXLDs3duYW5pZSBkbyBsZXdlaicsXG4gICAgICAgIGp1c3RpZnlDZW50ZXI6ICdXeXLDs3duYW5pZSBkbyDFm3JvZGthJyxcbiAgICAgICAganVzdGlmeVJpZ2h0OiAnV3lyw7N3bmFuaWUgZG8gcHJhd2VqJyxcbiAgICAgICAganVzdGlmeUZ1bGw6ICdKdXN0b3dhbmllJyxcbiAgICAgICAgbGlzdDogJ0xpc3RhJyxcbiAgICAgICAgaW5kZW50OiAnWndpxJlrc3ogd2NpxJljaWUnLFxuICAgICAgICBvdXRkZW50OiAnWm1uaWVqc3ogd2NpxJljaWUnLFxuICAgICAgICB1bm9yZGVyZWRMaXN0OiAnTGlzdGEgcHVua3Rvd2FuYScsXG4gICAgICAgIG9yZGVyZWRMaXN0OiAnTGlzdGEgbnVtZXJvd2FuYScsXG4gICAgICAgIHF1b3RlOiAnQ3l0YXQnLFxuICAgICAgICBmb3JlQ29sb3I6ICdLb2xvciB0ZWtzdHUnLFxuICAgICAgICBiYWNrQ29sb3I6ICdLb2xvciB0xYJhJyxcbiAgICAgICAgaGlsaXRlQ29sb3I6ICdLb2xvciB6YXpuYWN6ZW5pYScsXG4gICAgICAgIGNsZWFyOiAnV3ljennFm8SHJyxcbiAgICAgICAgbGluazogJ0xpbmsnLFxuICAgICAgICBhdHRhY2g6ICdaYcWCxIVjeiBwbGlrJyxcbiAgICAgICAgdGV4OiAnV3N0YXcgd3rDs3InLFxuICAgICAgICBjb2RlOiAnS29kJyxcbiAgICAgICAgaW1hZ2U6ICdXc3RhdyBpbHVzdHJhY2rEmScsXG4gICAgICAgIGluc2VydEhvcml6b250YWxSdWxlOiAnV3N0YXcgc2VwYXJhdG9yJyxcbiAgICAgICAgc3VwZXJzY3JpcHQ6ICdJbmRla3MgZ8Ozcm55JyxcbiAgICAgICAgc3Vic2NyaXB0OiAnSW5kZWtzIGRvbG55JyxcbiAgICAgICAgaW5zZXJ0VGFibGU6ICdXc3RhdyB0YWJlbMSZJyxcbiAgICAgICAgaW5zZXJ0R3JvdXA6ICdJbnNlcnQgZ3JvdXAnLFxuICAgICAgICBoaWxpdGVHcm91cDogJ0hpbGl0ZSBncm91cCcsXG4gICAgICAgIHJlbW92ZUdyb3VwOiAnUmVtb3ZlIGdyb3VwJyxcbiAgICAgICAgaW5zZXJ0QW5jaG9yOiAnSW5zZXJ0IGFuY2hvcicsXG4gICAgICAgIG1lcmdlQ2VsbHM6ICdTY2FsIGtvbcOzcmtpJyxcbiAgICAgICAgc3BsaXRDZWxsczogJ1BvZHppZWwga29tw7Nya2knLFxuICAgICAgICByb3dzQ29sdW1uc01hbmFnaW5nOiAnWmFyesSFZHphaiB3aWVyc3phbWkgaSBrb2x1bW5hbWknLFxuICAgICAgICBjZWxsQ29sb3I6ICdLb2xvciBrb23Ds3JraScsXG4gICAgICAgIHNldERldGFpbHM6ICdEZXRhaWxzJyxcbiAgICAgICAgcmVtb3ZlRGV0YWlsczogJ1JlbW92ZSBkZXRhaWxzJyxcbiAgICB9LFxuICAgIGVkaXRvckVkaXRMaW5rOiB7XG4gICAgICAgIHVybEV4YW1wbGU6ICdleGFtcGxlLmNvbScsXG4gICAgICAgIGFuY2hvckV4YW1wbGU6ICdhbmNob3InLFxuICAgIH0sXG4gICAgZWRpdG9yVGFibGVDb21tYW5kczogW1xuICAgICAgICBbJ1dzdGF3IGtvbHVtbsSZIHByemVkJywgJ1dzdGF3IGtvbHVtbsSZIHBvJ10sXG4gICAgICAgIFsnV3N0YXcgd2llcnN6IHByemVkJywgJ1dzdGF3IHdpZXJzeiBwbyddLFxuICAgICAgICBbJ1VzdcWEIGtvbHVtbsSZJywgJ1VzdcWEIHdpZXJzeiddLFxuICAgIF0sXG4gICAgZWRpdG9yQ29kZU9wdGlvbnM6IFsnS29kIHcgdGVrxZtjaWUnLCAnS29kIHcgYmxva3UnXSxcbiAgICBlZGl0b3JGb250T3B0aW9uczoge1xuICAgICAgICBzbWFsbDogJ1NtYWxsJyxcbiAgICAgICAgbm9ybWFsOiAnTm9ybWFsbnknLFxuICAgICAgICBsYXJnZTogJ0xhcmdlJyxcbiAgICAgICAgdGl0bGU6ICdUeXR1xYInLFxuICAgICAgICBzdWJ0aXRsZTogJ1BvZHR5dHXFgicsXG4gICAgfSxcbn07XG4iXX0=