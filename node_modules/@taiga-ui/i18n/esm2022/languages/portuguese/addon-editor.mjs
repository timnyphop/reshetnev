export const TUI_PORTUGUESE_LANGUAGE_ADDON_EDITOR = {
    colorSelectorModeNames: ['Cor sólida', 'Gradiente'],
    toolbarTools: {
        undo: 'Desfazer',
        redo: 'Refazer',
        font: 'Fonte',
        fontStyle: 'Estilo da Fonte',
        fontSize: 'Tamanho da Fonte',
        bold: 'Negrito',
        italic: 'Itálico',
        underline: 'Sublinhado',
        strikeThrough: 'Riscado',
        justify: 'Justificado',
        justifyLeft: 'Justificado à esquerda',
        justifyCenter: 'Justificado ao centro',
        justifyRight: 'Justificado à direita',
        justifyFull: 'Totalmente justificado',
        list: 'Lista',
        indent: 'Recuo interno',
        outdent: 'Recuo externo',
        unorderedList: 'Lista desordenada',
        orderedList: 'Lista ordenada',
        quote: 'Frase',
        foreColor: 'Cor',
        backColor: 'Cor de fundo',
        hiliteColor: 'Cor destaque',
        clear: 'Limpar',
        link: 'Link',
        attach: 'Anexar arquivo',
        tex: 'Inserir TeX',
        code: 'Código',
        image: 'Inserir imagem',
        insertHorizontalRule: 'Inserir regra horizontal',
        superscript: 'Superscript',
        subscript: 'Subscript',
        insertTable: 'Insert table',
        hiliteGroup: 'Hilite group',
        insertGroup: 'Insert group',
        removeGroup: 'Remove group',
        insertAnchor: 'Insert anchor',
        mergeCells: 'Merge cells',
        splitCells: 'Split cells',
        rowsColumnsManaging: 'Managing rows and columns',
        cellColor: 'Cell color',
        setDetails: 'Details',
        removeDetails: 'Remove details',
    },
    editorEditLink: {
        urlExample: 'example.com',
        anchorExample: 'anchor',
    },
    editorTableCommands: [
        ['Insert column before', 'Insert column after'],
        ['Insert row before', 'Insert row after'],
        ['Delete column', 'Delete row'],
    ],
    editorCodeOptions: ['Code in the text', 'Code in block'],
    editorFontOptions: {
        small: 'Small',
        normal: 'Normal',
        large: 'Large',
        title: 'Title',
        subtitle: 'Subtitle',
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkb24tZWRpdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaTE4bi9sYW5ndWFnZXMvcG9ydHVndWVzZS9hZGRvbi1lZGl0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLE1BQU0sb0NBQW9DLEdBQXNCO0lBQ25FLHNCQUFzQixFQUFFLENBQUMsWUFBWSxFQUFFLFdBQVcsQ0FBQztJQUNuRCxZQUFZLEVBQUU7UUFDVixJQUFJLEVBQUUsVUFBVTtRQUNoQixJQUFJLEVBQUUsU0FBUztRQUNmLElBQUksRUFBRSxPQUFPO1FBQ2IsU0FBUyxFQUFFLGlCQUFpQjtRQUM1QixRQUFRLEVBQUUsa0JBQWtCO1FBQzVCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLFNBQVM7UUFDakIsU0FBUyxFQUFFLFlBQVk7UUFDdkIsYUFBYSxFQUFFLFNBQVM7UUFDeEIsT0FBTyxFQUFFLGFBQWE7UUFDdEIsV0FBVyxFQUFFLHdCQUF3QjtRQUNyQyxhQUFhLEVBQUUsdUJBQXVCO1FBQ3RDLFlBQVksRUFBRSx1QkFBdUI7UUFDckMsV0FBVyxFQUFFLHdCQUF3QjtRQUNyQyxJQUFJLEVBQUUsT0FBTztRQUNiLE1BQU0sRUFBRSxlQUFlO1FBQ3ZCLE9BQU8sRUFBRSxlQUFlO1FBQ3hCLGFBQWEsRUFBRSxtQkFBbUI7UUFDbEMsV0FBVyxFQUFFLGdCQUFnQjtRQUM3QixLQUFLLEVBQUUsT0FBTztRQUNkLFNBQVMsRUFBRSxLQUFLO1FBQ2hCLFNBQVMsRUFBRSxjQUFjO1FBQ3pCLFdBQVcsRUFBRSxjQUFjO1FBQzNCLEtBQUssRUFBRSxRQUFRO1FBQ2YsSUFBSSxFQUFFLE1BQU07UUFDWixNQUFNLEVBQUUsZ0JBQWdCO1FBQ3hCLEdBQUcsRUFBRSxhQUFhO1FBQ2xCLElBQUksRUFBRSxRQUFRO1FBQ2QsS0FBSyxFQUFFLGdCQUFnQjtRQUN2QixvQkFBb0IsRUFBRSwwQkFBMEI7UUFDaEQsV0FBVyxFQUFFLGFBQWE7UUFDMUIsU0FBUyxFQUFFLFdBQVc7UUFDdEIsV0FBVyxFQUFFLGNBQWM7UUFDM0IsV0FBVyxFQUFFLGNBQWM7UUFDM0IsV0FBVyxFQUFFLGNBQWM7UUFDM0IsV0FBVyxFQUFFLGNBQWM7UUFDM0IsWUFBWSxFQUFFLGVBQWU7UUFDN0IsVUFBVSxFQUFFLGFBQWE7UUFDekIsVUFBVSxFQUFFLGFBQWE7UUFDekIsbUJBQW1CLEVBQUUsMkJBQTJCO1FBQ2hELFNBQVMsRUFBRSxZQUFZO1FBQ3ZCLFVBQVUsRUFBRSxTQUFTO1FBQ3JCLGFBQWEsRUFBRSxnQkFBZ0I7S0FDbEM7SUFDRCxjQUFjLEVBQUU7UUFDWixVQUFVLEVBQUUsYUFBYTtRQUN6QixhQUFhLEVBQUUsUUFBUTtLQUMxQjtJQUNELG1CQUFtQixFQUFFO1FBQ2pCLENBQUMsc0JBQXNCLEVBQUUscUJBQXFCLENBQUM7UUFDL0MsQ0FBQyxtQkFBbUIsRUFBRSxrQkFBa0IsQ0FBQztRQUN6QyxDQUFDLGVBQWUsRUFBRSxZQUFZLENBQUM7S0FDbEM7SUFDRCxpQkFBaUIsRUFBRSxDQUFDLGtCQUFrQixFQUFFLGVBQWUsQ0FBQztJQUN4RCxpQkFBaUIsRUFBRTtRQUNmLEtBQUssRUFBRSxPQUFPO1FBQ2QsTUFBTSxFQUFFLFFBQVE7UUFDaEIsS0FBSyxFQUFFLE9BQU87UUFDZCxLQUFLLEVBQUUsT0FBTztRQUNkLFFBQVEsRUFBRSxVQUFVO0tBQ3ZCO0NBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHtUdWlMYW5ndWFnZUVkaXRvcn0gZnJvbSAnQHRhaWdhLXVpL2kxOG4vdHlwZXMnO1xuXG5leHBvcnQgY29uc3QgVFVJX1BPUlRVR1VFU0VfTEFOR1VBR0VfQURET05fRURJVE9SOiBUdWlMYW5ndWFnZUVkaXRvciA9IHtcbiAgICBjb2xvclNlbGVjdG9yTW9kZU5hbWVzOiBbJ0NvciBzw7NsaWRhJywgJ0dyYWRpZW50ZSddLFxuICAgIHRvb2xiYXJUb29sczoge1xuICAgICAgICB1bmRvOiAnRGVzZmF6ZXInLFxuICAgICAgICByZWRvOiAnUmVmYXplcicsXG4gICAgICAgIGZvbnQ6ICdGb250ZScsXG4gICAgICAgIGZvbnRTdHlsZTogJ0VzdGlsbyBkYSBGb250ZScsXG4gICAgICAgIGZvbnRTaXplOiAnVGFtYW5obyBkYSBGb250ZScsXG4gICAgICAgIGJvbGQ6ICdOZWdyaXRvJyxcbiAgICAgICAgaXRhbGljOiAnSXTDoWxpY28nLFxuICAgICAgICB1bmRlcmxpbmU6ICdTdWJsaW5oYWRvJyxcbiAgICAgICAgc3RyaWtlVGhyb3VnaDogJ1Jpc2NhZG8nLFxuICAgICAgICBqdXN0aWZ5OiAnSnVzdGlmaWNhZG8nLFxuICAgICAgICBqdXN0aWZ5TGVmdDogJ0p1c3RpZmljYWRvIMOgIGVzcXVlcmRhJyxcbiAgICAgICAganVzdGlmeUNlbnRlcjogJ0p1c3RpZmljYWRvIGFvIGNlbnRybycsXG4gICAgICAgIGp1c3RpZnlSaWdodDogJ0p1c3RpZmljYWRvIMOgIGRpcmVpdGEnLFxuICAgICAgICBqdXN0aWZ5RnVsbDogJ1RvdGFsbWVudGUganVzdGlmaWNhZG8nLFxuICAgICAgICBsaXN0OiAnTGlzdGEnLFxuICAgICAgICBpbmRlbnQ6ICdSZWN1byBpbnRlcm5vJyxcbiAgICAgICAgb3V0ZGVudDogJ1JlY3VvIGV4dGVybm8nLFxuICAgICAgICB1bm9yZGVyZWRMaXN0OiAnTGlzdGEgZGVzb3JkZW5hZGEnLFxuICAgICAgICBvcmRlcmVkTGlzdDogJ0xpc3RhIG9yZGVuYWRhJyxcbiAgICAgICAgcXVvdGU6ICdGcmFzZScsXG4gICAgICAgIGZvcmVDb2xvcjogJ0NvcicsXG4gICAgICAgIGJhY2tDb2xvcjogJ0NvciBkZSBmdW5kbycsXG4gICAgICAgIGhpbGl0ZUNvbG9yOiAnQ29yIGRlc3RhcXVlJyxcbiAgICAgICAgY2xlYXI6ICdMaW1wYXInLFxuICAgICAgICBsaW5rOiAnTGluaycsXG4gICAgICAgIGF0dGFjaDogJ0FuZXhhciBhcnF1aXZvJyxcbiAgICAgICAgdGV4OiAnSW5zZXJpciBUZVgnLFxuICAgICAgICBjb2RlOiAnQ8OzZGlnbycsXG4gICAgICAgIGltYWdlOiAnSW5zZXJpciBpbWFnZW0nLFxuICAgICAgICBpbnNlcnRIb3Jpem9udGFsUnVsZTogJ0luc2VyaXIgcmVncmEgaG9yaXpvbnRhbCcsXG4gICAgICAgIHN1cGVyc2NyaXB0OiAnU3VwZXJzY3JpcHQnLFxuICAgICAgICBzdWJzY3JpcHQ6ICdTdWJzY3JpcHQnLFxuICAgICAgICBpbnNlcnRUYWJsZTogJ0luc2VydCB0YWJsZScsXG4gICAgICAgIGhpbGl0ZUdyb3VwOiAnSGlsaXRlIGdyb3VwJyxcbiAgICAgICAgaW5zZXJ0R3JvdXA6ICdJbnNlcnQgZ3JvdXAnLFxuICAgICAgICByZW1vdmVHcm91cDogJ1JlbW92ZSBncm91cCcsXG4gICAgICAgIGluc2VydEFuY2hvcjogJ0luc2VydCBhbmNob3InLFxuICAgICAgICBtZXJnZUNlbGxzOiAnTWVyZ2UgY2VsbHMnLFxuICAgICAgICBzcGxpdENlbGxzOiAnU3BsaXQgY2VsbHMnLFxuICAgICAgICByb3dzQ29sdW1uc01hbmFnaW5nOiAnTWFuYWdpbmcgcm93cyBhbmQgY29sdW1ucycsXG4gICAgICAgIGNlbGxDb2xvcjogJ0NlbGwgY29sb3InLFxuICAgICAgICBzZXREZXRhaWxzOiAnRGV0YWlscycsXG4gICAgICAgIHJlbW92ZURldGFpbHM6ICdSZW1vdmUgZGV0YWlscycsXG4gICAgfSxcbiAgICBlZGl0b3JFZGl0TGluazoge1xuICAgICAgICB1cmxFeGFtcGxlOiAnZXhhbXBsZS5jb20nLFxuICAgICAgICBhbmNob3JFeGFtcGxlOiAnYW5jaG9yJyxcbiAgICB9LFxuICAgIGVkaXRvclRhYmxlQ29tbWFuZHM6IFtcbiAgICAgICAgWydJbnNlcnQgY29sdW1uIGJlZm9yZScsICdJbnNlcnQgY29sdW1uIGFmdGVyJ10sXG4gICAgICAgIFsnSW5zZXJ0IHJvdyBiZWZvcmUnLCAnSW5zZXJ0IHJvdyBhZnRlciddLFxuICAgICAgICBbJ0RlbGV0ZSBjb2x1bW4nLCAnRGVsZXRlIHJvdyddLFxuICAgIF0sXG4gICAgZWRpdG9yQ29kZU9wdGlvbnM6IFsnQ29kZSBpbiB0aGUgdGV4dCcsICdDb2RlIGluIGJsb2NrJ10sXG4gICAgZWRpdG9yRm9udE9wdGlvbnM6IHtcbiAgICAgICAgc21hbGw6ICdTbWFsbCcsXG4gICAgICAgIG5vcm1hbDogJ05vcm1hbCcsXG4gICAgICAgIGxhcmdlOiAnTGFyZ2UnLFxuICAgICAgICB0aXRsZTogJ1RpdGxlJyxcbiAgICAgICAgc3VidGl0bGU6ICdTdWJ0aXRsZScsXG4gICAgfSxcbn07XG4iXX0=