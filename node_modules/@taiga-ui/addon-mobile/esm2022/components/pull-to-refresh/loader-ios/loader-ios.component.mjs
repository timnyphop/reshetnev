import { NgIf } from '@angular/common';
import { ChangeDetectionStrategy, Component, inject } from '@angular/core';
import { TuiRepeatTimes } from '@taiga-ui/cdk/directives/repeat-times';
import { POLYMORPHEUS_CONTEXT, PolymorpheusComponent } from '@taiga-ui/polymorpheus';
import { TUI_PULL_TO_REFRESH_THRESHOLD } from '../pull-to-refresh.providers';
import * as i0 from "@angular/core";
const LOADED_STEP = 8;
const ROTATE_X_STEP = 30;
class TuiMobileLoaderIOS {
    constructor() {
        this.context = inject(POLYMORPHEUS_CONTEXT);
        this.threshold = inject(TUI_PULL_TO_REFRESH_THRESHOLD);
        this.steps = 12;
    }
    get finished() {
        return this.percent >= 100;
    }
    get percent() {
        return (this.context.$implicit * 100) / this.threshold;
    }
    isShown(index) {
        return this.percent > (index + 1) * LOADED_STEP;
    }
    calculateTransform(index) {
        return `rotate(${index * ROTATE_X_STEP} 50 50)`;
    }
    calculateAnimationBegin(index) {
        return `${(index * LOADED_STEP) / 100}s`;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiMobileLoaderIOS, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiMobileLoaderIOS, isStandalone: true, selector: "tui-mobile-ios-loader", ngImport: i0, template: "<svg\n    height=\"36\"\n    preserveAspectRatio=\"xMidYMid\"\n    viewBox=\"0 0 100 100\"\n    width=\"36\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n>\n    <ng-container *tuiRepeatTimes=\"let index of steps\">\n        <g\n            *ngIf=\"isShown(index)\"\n            [attr.transform]=\"calculateTransform(index)\"\n        >\n            <rect\n                fill=\"#c7c9cc\"\n                height=\"16\"\n                rx=\"7.05\"\n                ry=\"3.3\"\n                width=\"6\"\n                x=\"47\"\n                y=\"22\"\n            >\n                <animate\n                    *ngIf=\"finished\"\n                    attributeName=\"opacity\"\n                    dur=\"1s\"\n                    keyTimes=\"0;1\"\n                    repeatCount=\"indefinite\"\n                    values=\"1;0\"\n                    [attr.begin]=\"calculateAnimationBegin(index)\"\n                />\n            </rect>\n        </g>\n    </ng-container>\n</svg>\n", styles: [":host{position:absolute;top:-.5rem;left:50%;margin-left:-1.125rem}\n"], dependencies: [{ kind: "directive", type: TuiRepeatTimes, selector: "[tuiRepeatTimes][tuiRepeatTimesOf]", inputs: ["tuiRepeatTimesOf"] }, { kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { TuiMobileLoaderIOS };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiMobileLoaderIOS, decorators: [{
            type: Component,
            args: [{ standalone: true, selector: 'tui-mobile-ios-loader', imports: [TuiRepeatTimes, NgIf], changeDetection: ChangeDetectionStrategy.OnPush, template: "<svg\n    height=\"36\"\n    preserveAspectRatio=\"xMidYMid\"\n    viewBox=\"0 0 100 100\"\n    width=\"36\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n>\n    <ng-container *tuiRepeatTimes=\"let index of steps\">\n        <g\n            *ngIf=\"isShown(index)\"\n            [attr.transform]=\"calculateTransform(index)\"\n        >\n            <rect\n                fill=\"#c7c9cc\"\n                height=\"16\"\n                rx=\"7.05\"\n                ry=\"3.3\"\n                width=\"6\"\n                x=\"47\"\n                y=\"22\"\n            >\n                <animate\n                    *ngIf=\"finished\"\n                    attributeName=\"opacity\"\n                    dur=\"1s\"\n                    keyTimes=\"0;1\"\n                    repeatCount=\"indefinite\"\n                    values=\"1;0\"\n                    [attr.begin]=\"calculateAnimationBegin(index)\"\n                />\n            </rect>\n        </g>\n    </ng-container>\n</svg>\n", styles: [":host{position:absolute;top:-.5rem;left:50%;margin-left:-1.125rem}\n"] }]
        }] });
export const TUI_IOS_LOADER = new PolymorpheusComponent(TuiMobileLoaderIOS);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGVyLWlvcy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9hZGRvbi1tb2JpbGUvY29tcG9uZW50cy9wdWxsLXRvLXJlZnJlc2gvbG9hZGVyLWlvcy9sb2FkZXItaW9zLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2FkZG9uLW1vYmlsZS9jb21wb25lbnRzL3B1bGwtdG8tcmVmcmVzaC9sb2FkZXItaW9zL2xvYWRlci1pb3MudGVtcGxhdGUuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsSUFBSSxFQUFDLE1BQU0saUJBQWlCLENBQUM7QUFDckMsT0FBTyxFQUFDLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDekUsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLHVDQUF1QyxDQUFDO0FBRXJFLE9BQU8sRUFBQyxvQkFBb0IsRUFBRSxxQkFBcUIsRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBRW5GLE9BQU8sRUFBQyw2QkFBNkIsRUFBQyxNQUFNLDhCQUE4QixDQUFDOztBQUUzRSxNQUFNLFdBQVcsR0FBRyxDQUFDLENBQUM7QUFDdEIsTUFBTSxhQUFhLEdBQUcsRUFBRSxDQUFDO0FBRXpCLE1BUWEsa0JBQWtCO0lBUi9CO1FBU3FCLFlBQU8sR0FBRyxNQUFNLENBQXFCLG9CQUFvQixDQUFDLENBQUM7UUFDM0QsY0FBUyxHQUFHLE1BQU0sQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDO1FBRWhELFVBQUssR0FBRyxFQUFFLENBQUM7S0FxQmpDO0lBbkJHLElBQWMsUUFBUTtRQUNsQixPQUFPLElBQUksQ0FBQyxPQUFPLElBQUksR0FBRyxDQUFDO0lBQy9CLENBQUM7SUFFRCxJQUFjLE9BQU87UUFDakIsT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxHQUFHLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDM0QsQ0FBQztJQUVTLE9BQU8sQ0FBQyxLQUFhO1FBQzNCLE9BQU8sSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsR0FBRyxXQUFXLENBQUM7SUFDcEQsQ0FBQztJQUVTLGtCQUFrQixDQUFDLEtBQWE7UUFDdEMsT0FBTyxVQUFVLEtBQUssR0FBRyxhQUFhLFNBQVMsQ0FBQztJQUNwRCxDQUFDO0lBRVMsdUJBQXVCLENBQUMsS0FBYTtRQUMzQyxPQUFPLEdBQUcsQ0FBQyxLQUFLLEdBQUcsV0FBVyxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUM7SUFDN0MsQ0FBQzsrR0F4QlEsa0JBQWtCO21HQUFsQixrQkFBa0IsaUZDbkIvQixvaENBbUNBLDhIRHJCYyxjQUFjLDZHQUFFLElBQUk7O1NBS3JCLGtCQUFrQjs0RkFBbEIsa0JBQWtCO2tCQVI5QixTQUFTO2lDQUNNLElBQUksWUFDTix1QkFBdUIsV0FDeEIsQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLG1CQUdkLHVCQUF1QixDQUFDLE1BQU07O0FBNkJuRCxNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsSUFBSSxxQkFBcUIsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtOZ0lmfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHtDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBpbmplY3R9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtUdWlSZXBlYXRUaW1lc30gZnJvbSAnQHRhaWdhLXVpL2Nkay9kaXJlY3RpdmVzL3JlcGVhdC10aW1lcyc7XG5pbXBvcnQgdHlwZSB7VHVpQ29udGV4dH0gZnJvbSAnQHRhaWdhLXVpL2Nkay90eXBlcyc7XG5pbXBvcnQge1BPTFlNT1JQSEVVU19DT05URVhULCBQb2x5bW9ycGhldXNDb21wb25lbnR9IGZyb20gJ0B0YWlnYS11aS9wb2x5bW9ycGhldXMnO1xuXG5pbXBvcnQge1RVSV9QVUxMX1RPX1JFRlJFU0hfVEhSRVNIT0xEfSBmcm9tICcuLi9wdWxsLXRvLXJlZnJlc2gucHJvdmlkZXJzJztcblxuY29uc3QgTE9BREVEX1NURVAgPSA4O1xuY29uc3QgUk9UQVRFX1hfU1RFUCA9IDMwO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzdGFuZGFsb25lOiB0cnVlLFxuICAgIHNlbGVjdG9yOiAndHVpLW1vYmlsZS1pb3MtbG9hZGVyJyxcbiAgICBpbXBvcnRzOiBbVHVpUmVwZWF0VGltZXMsIE5nSWZdLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9sb2FkZXItaW9zLnRlbXBsYXRlLmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL2xvYWRlci1pb3Muc3R5bGUubGVzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlNb2JpbGVMb2FkZXJJT1Mge1xuICAgIHByaXZhdGUgcmVhZG9ubHkgY29udGV4dCA9IGluamVjdDxUdWlDb250ZXh0PG51bWJlcj4+KFBPTFlNT1JQSEVVU19DT05URVhUKTtcbiAgICBwcml2YXRlIHJlYWRvbmx5IHRocmVzaG9sZCA9IGluamVjdChUVUlfUFVMTF9UT19SRUZSRVNIX1RIUkVTSE9MRCk7XG5cbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgc3RlcHMgPSAxMjtcblxuICAgIHByb3RlY3RlZCBnZXQgZmluaXNoZWQoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLnBlcmNlbnQgPj0gMTAwO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBnZXQgcGVyY2VudCgpOiBudW1iZXIge1xuICAgICAgICByZXR1cm4gKHRoaXMuY29udGV4dC4kaW1wbGljaXQgKiAxMDApIC8gdGhpcy50aHJlc2hvbGQ7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIGlzU2hvd24oaW5kZXg6IG51bWJlcik6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5wZXJjZW50ID4gKGluZGV4ICsgMSkgKiBMT0FERURfU1RFUDtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgY2FsY3VsYXRlVHJhbnNmb3JtKGluZGV4OiBudW1iZXIpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gYHJvdGF0ZSgke2luZGV4ICogUk9UQVRFX1hfU1RFUH0gNTAgNTApYDtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgY2FsY3VsYXRlQW5pbWF0aW9uQmVnaW4oaW5kZXg6IG51bWJlcik6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiBgJHsoaW5kZXggKiBMT0FERURfU1RFUCkgLyAxMDB9c2A7XG4gICAgfVxufVxuXG5leHBvcnQgY29uc3QgVFVJX0lPU19MT0FERVIgPSBuZXcgUG9seW1vcnBoZXVzQ29tcG9uZW50KFR1aU1vYmlsZUxvYWRlcklPUyk7XG4iLCI8c3ZnXG4gICAgaGVpZ2h0PVwiMzZcIlxuICAgIHByZXNlcnZlQXNwZWN0UmF0aW89XCJ4TWlkWU1pZFwiXG4gICAgdmlld0JveD1cIjAgMCAxMDAgMTAwXCJcbiAgICB3aWR0aD1cIjM2XCJcbiAgICB4bWxuczp4bGluaz1cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIlxuICAgIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlxuPlxuICAgIDxuZy1jb250YWluZXIgKnR1aVJlcGVhdFRpbWVzPVwibGV0IGluZGV4IG9mIHN0ZXBzXCI+XG4gICAgICAgIDxnXG4gICAgICAgICAgICAqbmdJZj1cImlzU2hvd24oaW5kZXgpXCJcbiAgICAgICAgICAgIFthdHRyLnRyYW5zZm9ybV09XCJjYWxjdWxhdGVUcmFuc2Zvcm0oaW5kZXgpXCJcbiAgICAgICAgPlxuICAgICAgICAgICAgPHJlY3RcbiAgICAgICAgICAgICAgICBmaWxsPVwiI2M3YzljY1wiXG4gICAgICAgICAgICAgICAgaGVpZ2h0PVwiMTZcIlxuICAgICAgICAgICAgICAgIHJ4PVwiNy4wNVwiXG4gICAgICAgICAgICAgICAgcnk9XCIzLjNcIlxuICAgICAgICAgICAgICAgIHdpZHRoPVwiNlwiXG4gICAgICAgICAgICAgICAgeD1cIjQ3XCJcbiAgICAgICAgICAgICAgICB5PVwiMjJcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxhbmltYXRlXG4gICAgICAgICAgICAgICAgICAgICpuZ0lmPVwiZmluaXNoZWRcIlxuICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVOYW1lPVwib3BhY2l0eVwiXG4gICAgICAgICAgICAgICAgICAgIGR1cj1cIjFzXCJcbiAgICAgICAgICAgICAgICAgICAga2V5VGltZXM9XCIwOzFcIlxuICAgICAgICAgICAgICAgICAgICByZXBlYXRDb3VudD1cImluZGVmaW5pdGVcIlxuICAgICAgICAgICAgICAgICAgICB2YWx1ZXM9XCIxOzBcIlxuICAgICAgICAgICAgICAgICAgICBbYXR0ci5iZWdpbl09XCJjYWxjdWxhdGVBbmltYXRpb25CZWdpbihpbmRleClcIlxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L3JlY3Q+XG4gICAgICAgIDwvZz5cbiAgICA8L25nLWNvbnRhaW5lcj5cbjwvc3ZnPlxuIl19