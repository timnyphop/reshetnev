import { Optional, SkipSelf } from '@angular/core';
import { tuiCreateToken } from '@taiga-ui/cdk/utils/miscellaneous';
import { map, of } from 'rxjs';
export const TUI_DEFAULT_DATE_FORMAT = {
    mode: 'DMY',
    separator: '.',
};
/**
 * Formatting configuration for displayed dates
 */
export const TUI_DATE_FORMAT = tuiCreateToken(of(TUI_DEFAULT_DATE_FORMAT));
export function tuiDateFormatProvider(options) {
    return {
        provide: TUI_DATE_FORMAT,
        deps: [[new Optional(), new SkipSelf(), TUI_DATE_FORMAT]],
        useFactory: (parent) => (parent || of(TUI_DEFAULT_DATE_FORMAT)).pipe(map((format) => ({ ...format, ...options }))),
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1mb3JtYXQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL3Rva2Vucy9kYXRlLWZvcm1hdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUMsUUFBUSxFQUFFLFFBQVEsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUVqRCxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sbUNBQW1DLENBQUM7QUFFakUsT0FBTyxFQUFDLEdBQUcsRUFBRSxFQUFFLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFpQjdCLE1BQU0sQ0FBQyxNQUFNLHVCQUF1QixHQUEwQjtJQUMxRCxJQUFJLEVBQUUsS0FBSztJQUNYLFNBQVMsRUFBRSxHQUFHO0NBQ2pCLENBQUM7QUFFRjs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FDeEIsY0FBYyxDQUFDLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDLENBQUM7QUFFaEQsTUFBTSxVQUFVLHFCQUFxQixDQUFDLE9BQXVDO0lBQ3pFLE9BQU87UUFDSCxPQUFPLEVBQUUsZUFBZTtRQUN4QixJQUFJLEVBQUUsQ0FBQyxDQUFDLElBQUksUUFBUSxFQUFFLEVBQUUsSUFBSSxRQUFRLEVBQUUsRUFBRSxlQUFlLENBQUMsQ0FBQztRQUN6RCxVQUFVLEVBQUUsQ0FDUixNQUFnRCxFQUNmLEVBQUUsQ0FDbkMsQ0FBQyxNQUFNLElBQUksRUFBRSxDQUFDLHVCQUF1QixDQUFDLENBQUMsQ0FBQyxJQUFJLENBQ3hDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFDLEdBQUcsTUFBTSxFQUFFLEdBQUcsT0FBTyxFQUFDLENBQUMsQ0FBQyxDQUM3QztLQUNSLENBQUM7QUFDTixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUge0luamVjdGlvblRva2VuLCBQcm92aWRlcn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge09wdGlvbmFsLCBTa2lwU2VsZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgdHlwZSB7VHVpRGF0ZU1vZGV9IGZyb20gJ0B0YWlnYS11aS9jZGsvZGF0ZS10aW1lJztcbmltcG9ydCB7dHVpQ3JlYXRlVG9rZW59IGZyb20gJ0B0YWlnYS11aS9jZGsvdXRpbHMvbWlzY2VsbGFuZW91cyc7XG5pbXBvcnQgdHlwZSB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XG5pbXBvcnQge21hcCwgb2Z9IGZyb20gJ3J4anMnO1xuXG4vKipcbiAqIEZvcm1hdHRpbmcgY29uZmlndXJhdGlvbiBmb3IgZGlzcGxheWVkIGRhdGVzXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgVHVpRGF0ZUZvcm1hdFNldHRpbmdzIHtcbiAgICAvKipcbiAgICAgKiBEYXRlIGZvcm1hdCBtb2RlLlxuICAgICAqL1xuICAgIHJlYWRvbmx5IG1vZGU6IFR1aURhdGVNb2RlO1xuICAgIC8qKlxuICAgICAqIFNlcGFyYXRvciBiZXR3ZWVuIGRhdGUgc2VnbWVudHNcbiAgICAgKiBAZXhhbXBsZSAxMC4wMiAoJy4nIGJ5IGRlZmF1bHQpXG4gICAgICovXG4gICAgcmVhZG9ubHkgc2VwYXJhdG9yOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBjb25zdCBUVUlfREVGQVVMVF9EQVRFX0ZPUk1BVDogVHVpRGF0ZUZvcm1hdFNldHRpbmdzID0ge1xuICAgIG1vZGU6ICdETVknLFxuICAgIHNlcGFyYXRvcjogJy4nLFxufTtcblxuLyoqXG4gKiBGb3JtYXR0aW5nIGNvbmZpZ3VyYXRpb24gZm9yIGRpc3BsYXllZCBkYXRlc1xuICovXG5leHBvcnQgY29uc3QgVFVJX0RBVEVfRk9STUFUOiBJbmplY3Rpb25Ub2tlbjxPYnNlcnZhYmxlPFR1aURhdGVGb3JtYXRTZXR0aW5ncz4+ID1cbiAgICB0dWlDcmVhdGVUb2tlbihvZihUVUlfREVGQVVMVF9EQVRFX0ZPUk1BVCkpO1xuXG5leHBvcnQgZnVuY3Rpb24gdHVpRGF0ZUZvcm1hdFByb3ZpZGVyKG9wdGlvbnM6IFBhcnRpYWw8VHVpRGF0ZUZvcm1hdFNldHRpbmdzPik6IFByb3ZpZGVyIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBwcm92aWRlOiBUVUlfREFURV9GT1JNQVQsXG4gICAgICAgIGRlcHM6IFtbbmV3IE9wdGlvbmFsKCksIG5ldyBTa2lwU2VsZigpLCBUVUlfREFURV9GT1JNQVRdXSxcbiAgICAgICAgdXNlRmFjdG9yeTogKFxuICAgICAgICAgICAgcGFyZW50OiBPYnNlcnZhYmxlPFR1aURhdGVGb3JtYXRTZXR0aW5ncz4gfCBudWxsLFxuICAgICAgICApOiBPYnNlcnZhYmxlPFR1aURhdGVGb3JtYXRTZXR0aW5ncz4gPT5cbiAgICAgICAgICAgIChwYXJlbnQgfHwgb2YoVFVJX0RFRkFVTFRfREFURV9GT1JNQVQpKS5waXBlKFxuICAgICAgICAgICAgICAgIG1hcCgoZm9ybWF0KSA9PiAoey4uLmZvcm1hdCwgLi4ub3B0aW9uc30pKSxcbiAgICAgICAgICAgICksXG4gICAgfTtcbn1cbiJdfQ==