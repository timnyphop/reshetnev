import { Optional, SkipSelf } from '@angular/core';
import { CHAR_NO_BREAK_SPACE } from '@taiga-ui/cdk/constants';
import { tuiCreateToken } from '@taiga-ui/cdk/utils/miscellaneous';
import { map, of } from 'rxjs';
export const TUI_DEFAULT_NUMBER_FORMAT = {
    precision: NaN,
    decimalSeparator: '.',
    thousandSeparator: CHAR_NO_BREAK_SPACE,
    rounding: 'truncate',
    decimalMode: 'pad',
};
/**
 * Formatting configuration for displayed numbers
 */
export const TUI_NUMBER_FORMAT = tuiCreateToken(of(TUI_DEFAULT_NUMBER_FORMAT));
export function tuiNumberFormatProvider(options) {
    return {
        provide: TUI_NUMBER_FORMAT,
        deps: [[new Optional(), new SkipSelf(), TUI_NUMBER_FORMAT]],
        useFactory: (parent) => (parent || of(TUI_DEFAULT_NUMBER_FORMAT)).pipe(map((format) => ({ ...format, ...options }))),
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnVtYmVyLWZvcm1hdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmUvdG9rZW5zL251bWJlci1mb3JtYXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFDLFFBQVEsRUFBRSxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0seUJBQXlCLENBQUM7QUFFNUQsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLG1DQUFtQyxDQUFDO0FBRWpFLE9BQU8sRUFBQyxHQUFHLEVBQUUsRUFBRSxFQUFDLE1BQU0sTUFBTSxDQUFDO0FBa0M3QixNQUFNLENBQUMsTUFBTSx5QkFBeUIsR0FBNEI7SUFDOUQsU0FBUyxFQUFFLEdBQUc7SUFDZCxnQkFBZ0IsRUFBRSxHQUFHO0lBQ3JCLGlCQUFpQixFQUFFLG1CQUFtQjtJQUN0QyxRQUFRLEVBQUUsVUFBVTtJQUNwQixXQUFXLEVBQUUsS0FBSztDQUNyQixDQUFDO0FBRUY7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FDMUIsY0FBYyxDQUFDLEVBQUUsQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDLENBQUM7QUFFbEQsTUFBTSxVQUFVLHVCQUF1QixDQUNuQyxPQUF5QztJQUV6QyxPQUFPO1FBQ0gsT0FBTyxFQUFFLGlCQUFpQjtRQUMxQixJQUFJLEVBQUUsQ0FBQyxDQUFDLElBQUksUUFBUSxFQUFFLEVBQUUsSUFBSSxRQUFRLEVBQUUsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO1FBQzNELFVBQVUsRUFBRSxDQUNSLE1BQWtELEVBQ2YsRUFBRSxDQUNyQyxDQUFDLE1BQU0sSUFBSSxFQUFFLENBQUMseUJBQXlCLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDMUMsR0FBRyxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQUMsR0FBRyxNQUFNLEVBQUUsR0FBRyxPQUFPLEVBQUMsQ0FBQyxDQUFDLENBQzdDO0tBQ1IsQ0FBQztBQUNOLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7SW5qZWN0aW9uVG9rZW4sIFByb3ZpZGVyfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7T3B0aW9uYWwsIFNraXBTZWxmfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7Q0hBUl9OT19CUkVBS19TUEFDRX0gZnJvbSAnQHRhaWdhLXVpL2Nkay9jb25zdGFudHMnO1xuaW1wb3J0IHR5cGUge1R1aVJvdW5kaW5nfSBmcm9tICdAdGFpZ2EtdWkvY2RrL3R5cGVzJztcbmltcG9ydCB7dHVpQ3JlYXRlVG9rZW59IGZyb20gJ0B0YWlnYS11aS9jZGsvdXRpbHMvbWlzY2VsbGFuZW91cyc7XG5pbXBvcnQgdHlwZSB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XG5pbXBvcnQge21hcCwgb2Z9IGZyb20gJ3J4anMnO1xuXG5leHBvcnQgdHlwZSBUdWlEZWNpbWFsTW9kZSA9ICdhbHdheXMnIHwgJ25vdC16ZXJvJyB8ICdwYWQnO1xuZXhwb3J0IHR5cGUgVHVpRGVjaW1hbFN5bWJvbCA9ICcsJyB8ICcuJztcblxuLyoqXG4gKiBGb3JtYXR0aW5nIGNvbmZpZ3VyYXRpb24gZm9yIGRpc3BsYXllZCBudW1iZXJzXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgVHVpTnVtYmVyRm9ybWF0U2V0dGluZ3Mge1xuICAgIC8qKlxuICAgICAqIE51bWJlciBvZiBkaWdpdHMgb2YgZGVjaW1hbCBwYXJ0LlxuICAgICAqIEBub3RlIFVzZSBgSW5maW5pdHlgIHRvIGtlZXAgdW50b3VjaGVkLlxuICAgICAqL1xuICAgIHJlYWRvbmx5IHByZWNpc2lvbjogbnVtYmVyO1xuICAgIC8qKlxuICAgICAqIFNlcGFyYXRvciBiZXR3ZWVuIHRoZSBpbnRlZ2VyIGFuZCB0aGUgZGVjaW1hbCBwYXJ0LlxuICAgICAqIEBleGFtcGxlIDAsNDIgKCcsJyBieSBkZWZhdWx0KVxuICAgICAqL1xuICAgIHJlYWRvbmx5IGRlY2ltYWxTZXBhcmF0b3I6IFR1aURlY2ltYWxTeW1ib2w7XG4gICAgLyoqXG4gICAgICogUm91bmRpbmcgbWV0aG9kLlxuICAgICAqL1xuICAgIHJlYWRvbmx5IHJvdW5kaW5nOiBUdWlSb3VuZGluZztcbiAgICAvKipcbiAgICAgKiBTZXBhcmF0b3IgYmV0d2VlbiB0aG91c2FuZHMuXG4gICAgICogQGV4YW1wbGUgMzYwIDAwMCAoJyAnIGJ5IGRlZmF1bHQpXG4gICAgICovXG4gICAgcmVhZG9ubHkgdGhvdXNhbmRTZXBhcmF0b3I6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBEZWNpbWFsIHBhcnQgZGlzcGxheSBtb2RlLiAoJ25vdC16ZXJvJyBieSBkZWZhdWx0KVxuICAgICAqL1xuICAgIHJlYWRvbmx5IGRlY2ltYWxNb2RlOiBUdWlEZWNpbWFsTW9kZTtcbn1cblxuZXhwb3J0IGNvbnN0IFRVSV9ERUZBVUxUX05VTUJFUl9GT1JNQVQ6IFR1aU51bWJlckZvcm1hdFNldHRpbmdzID0ge1xuICAgIHByZWNpc2lvbjogTmFOLFxuICAgIGRlY2ltYWxTZXBhcmF0b3I6ICcuJyxcbiAgICB0aG91c2FuZFNlcGFyYXRvcjogQ0hBUl9OT19CUkVBS19TUEFDRSxcbiAgICByb3VuZGluZzogJ3RydW5jYXRlJyxcbiAgICBkZWNpbWFsTW9kZTogJ3BhZCcsXG59O1xuXG4vKipcbiAqIEZvcm1hdHRpbmcgY29uZmlndXJhdGlvbiBmb3IgZGlzcGxheWVkIG51bWJlcnNcbiAqL1xuZXhwb3J0IGNvbnN0IFRVSV9OVU1CRVJfRk9STUFUOiBJbmplY3Rpb25Ub2tlbjxPYnNlcnZhYmxlPFR1aU51bWJlckZvcm1hdFNldHRpbmdzPj4gPVxuICAgIHR1aUNyZWF0ZVRva2VuKG9mKFRVSV9ERUZBVUxUX05VTUJFUl9GT1JNQVQpKTtcblxuZXhwb3J0IGZ1bmN0aW9uIHR1aU51bWJlckZvcm1hdFByb3ZpZGVyKFxuICAgIG9wdGlvbnM6IFBhcnRpYWw8VHVpTnVtYmVyRm9ybWF0U2V0dGluZ3M+LFxuKTogUHJvdmlkZXIge1xuICAgIHJldHVybiB7XG4gICAgICAgIHByb3ZpZGU6IFRVSV9OVU1CRVJfRk9STUFULFxuICAgICAgICBkZXBzOiBbW25ldyBPcHRpb25hbCgpLCBuZXcgU2tpcFNlbGYoKSwgVFVJX05VTUJFUl9GT1JNQVRdXSxcbiAgICAgICAgdXNlRmFjdG9yeTogKFxuICAgICAgICAgICAgcGFyZW50OiBPYnNlcnZhYmxlPFR1aU51bWJlckZvcm1hdFNldHRpbmdzPiB8IG51bGwsXG4gICAgICAgICk6IE9ic2VydmFibGU8VHVpTnVtYmVyRm9ybWF0U2V0dGluZ3M+ID0+XG4gICAgICAgICAgICAocGFyZW50IHx8IG9mKFRVSV9ERUZBVUxUX05VTUJFUl9GT1JNQVQpKS5waXBlKFxuICAgICAgICAgICAgICAgIG1hcCgoZm9ybWF0KSA9PiAoey4uLmZvcm1hdCwgLi4ub3B0aW9uc30pKSxcbiAgICAgICAgICAgICksXG4gICAgfTtcbn1cbiJdfQ==