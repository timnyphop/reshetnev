import { inject } from '@angular/core';
import { takeUntilDestroyed } from '@angular/core/rxjs-interop';
import { tuiDirectiveBinding } from '@taiga-ui/cdk/utils/miscellaneous';
import { TuiDropdownDirective } from './dropdown.directive';
import { TuiDropdownOpen } from './dropdown-open.directive';
export function tuiDropdown(value) {
    return tuiDirectiveBinding(TuiDropdownDirective, 'tuiDropdown', value, {});
}
export function tuiDropdownOpen() {
    const open = tuiDirectiveBinding(TuiDropdownOpen, 'tuiDropdownOpen', false, {});
    inject(TuiDropdownOpen)
        .tuiDropdownOpenChange.pipe(takeUntilDestroyed())
        .subscribe((value) => open.set(value));
    return open;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24uYmluZGluZ3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL2RpcmVjdGl2ZXMvZHJvcGRvd24vZHJvcGRvd24uYmluZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFDLE1BQU0sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNyQyxPQUFPLEVBQUMsa0JBQWtCLEVBQUMsTUFBTSw0QkFBNEIsQ0FBQztBQUM5RCxPQUFPLEVBQUMsbUJBQW1CLEVBQUMsTUFBTSxtQ0FBbUMsQ0FBQztBQUd0RSxPQUFPLEVBQUMsb0JBQW9CLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQztBQUMxRCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sMkJBQTJCLENBQUM7QUFNMUQsTUFBTSxVQUFVLFdBQVcsQ0FBQyxLQUFvQjtJQUM1QyxPQUFPLG1CQUFtQixDQUFDLG9CQUFvQixFQUFFLGFBQWEsRUFBRSxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDL0UsQ0FBQztBQUVELE1BQU0sVUFBVSxlQUFlO0lBQzNCLE1BQU0sSUFBSSxHQUE0QixtQkFBbUIsQ0FDckQsZUFBZSxFQUNmLGlCQUFpQixFQUNqQixLQUFLLEVBQ0wsRUFBRSxDQUNMLENBQUM7SUFFRixNQUFNLENBQUMsZUFBZSxDQUFDO1NBQ2xCLHFCQUFxQixDQUFDLElBQUksQ0FBQyxrQkFBa0IsRUFBRSxDQUFDO1NBQ2hELFNBQVMsQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBRTNDLE9BQU8sSUFBSSxDQUFDO0FBQ2hCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7U2lnbmFsLCBXcml0YWJsZVNpZ25hbH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge2luamVjdH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge3Rha2VVbnRpbERlc3Ryb3llZH0gZnJvbSAnQGFuZ3VsYXIvY29yZS9yeGpzLWludGVyb3AnO1xuaW1wb3J0IHt0dWlEaXJlY3RpdmVCaW5kaW5nfSBmcm9tICdAdGFpZ2EtdWkvY2RrL3V0aWxzL21pc2NlbGxhbmVvdXMnO1xuaW1wb3J0IHR5cGUge1BvbHltb3JwaGV1c0NvbnRlbnR9IGZyb20gJ0B0YWlnYS11aS9wb2x5bW9ycGhldXMnO1xuXG5pbXBvcnQge1R1aURyb3Bkb3duRGlyZWN0aXZlfSBmcm9tICcuL2Ryb3Bkb3duLmRpcmVjdGl2ZSc7XG5pbXBvcnQge1R1aURyb3Bkb3duT3Blbn0gZnJvbSAnLi9kcm9wZG93bi1vcGVuLmRpcmVjdGl2ZSc7XG5cbnR5cGUgQyA9IFBvbHltb3JwaGV1c0NvbnRlbnQ7XG5cbmV4cG9ydCBmdW5jdGlvbiB0dWlEcm9wZG93bih2YWx1ZTogQyB8IFdyaXRhYmxlU2lnbmFsPEM+KTogV3JpdGFibGVTaWduYWw8Qz47XG5leHBvcnQgZnVuY3Rpb24gdHVpRHJvcGRvd24odmFsdWU6IFNpZ25hbDxDPik6IFNpZ25hbDxDPjtcbmV4cG9ydCBmdW5jdGlvbiB0dWlEcm9wZG93bih2YWx1ZTogQyB8IFNpZ25hbDxDPik6IFNpZ25hbDxDPiB7XG4gICAgcmV0dXJuIHR1aURpcmVjdGl2ZUJpbmRpbmcoVHVpRHJvcGRvd25EaXJlY3RpdmUsICd0dWlEcm9wZG93bicsIHZhbHVlLCB7fSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0dWlEcm9wZG93bk9wZW4oKTogV3JpdGFibGVTaWduYWw8Ym9vbGVhbj4ge1xuICAgIGNvbnN0IG9wZW46IFdyaXRhYmxlU2lnbmFsPGJvb2xlYW4+ID0gdHVpRGlyZWN0aXZlQmluZGluZyhcbiAgICAgICAgVHVpRHJvcGRvd25PcGVuLFxuICAgICAgICAndHVpRHJvcGRvd25PcGVuJyxcbiAgICAgICAgZmFsc2UsXG4gICAgICAgIHt9LFxuICAgICk7XG5cbiAgICBpbmplY3QoVHVpRHJvcGRvd25PcGVuKVxuICAgICAgICAudHVpRHJvcGRvd25PcGVuQ2hhbmdlLnBpcGUodGFrZVVudGlsRGVzdHJveWVkKCkpXG4gICAgICAgIC5zdWJzY3JpYmUoKHZhbHVlKSA9PiBvcGVuLnNldCh2YWx1ZSkpO1xuXG4gICAgcmV0dXJuIG9wZW47XG59XG4iXX0=