import { Self } from '@angular/core';
import { Directive, inject, Input, Optional, SkipSelf } from '@angular/core';
import { tuiCreateToken, tuiProvide } from '@taiga-ui/cdk/utils/miscellaneous';
import { tuiOverrideOptions } from '@taiga-ui/core/utils';
import * as i0 from "@angular/core";
/** Default values for dropdown options */
export const TUI_DROPDOWN_DEFAULT_OPTIONS = {
    align: 'left',
    direction: null,
    limitWidth: 'auto',
    maxHeight: 400,
    minHeight: 80,
    offset: 4,
    appearance: '',
};
/**
 * Default parameters for dropdown directive
 */
export const TUI_DROPDOWN_OPTIONS = tuiCreateToken(TUI_DROPDOWN_DEFAULT_OPTIONS);
export const tuiDropdownOptionsProvider = (override) => ({
    provide: TUI_DROPDOWN_OPTIONS,
    deps: [
        [new Optional(), new Self(), TuiDropdownOptionsDirective],
        [new Optional(), new SkipSelf(), TUI_DROPDOWN_OPTIONS],
    ],
    useFactory: tuiOverrideOptions(override, TUI_DROPDOWN_DEFAULT_OPTIONS),
});
class TuiDropdownOptionsDirective {
    constructor() {
        this.options = inject(TUI_DROPDOWN_OPTIONS, { skipSelf: true });
        this.align = this.options.align;
        this.appearance = this.options.appearance;
        this.direction = this.options.direction;
        this.limitWidth = this.options.limitWidth;
        this.minHeight = this.options.minHeight;
        this.maxHeight = this.options.maxHeight;
        this.offset = this.options.offset;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiDropdownOptionsDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: TuiDropdownOptionsDirective, isStandalone: true, selector: "[tuiDropdownAlign], [tuiDropdownAppearance], [tuiDropdownDirection], [tuiDropdownLimitWidth], [tuiDropdownMinHeight], [tuiDropdownMaxHeight], [tuiDropdownOffset]", inputs: { align: ["tuiDropdownAlign", "align"], appearance: ["tuiDropdownAppearance", "appearance"], direction: ["tuiDropdownDirection", "direction"], limitWidth: ["tuiDropdownLimitWidth", "limitWidth"], minHeight: ["tuiDropdownMinHeight", "minHeight"], maxHeight: ["tuiDropdownMaxHeight", "maxHeight"], offset: ["tuiDropdownOffset", "offset"] }, providers: [tuiProvide(TUI_DROPDOWN_OPTIONS, TuiDropdownOptionsDirective)], ngImport: i0 }); }
}
export { TuiDropdownOptionsDirective };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiDropdownOptionsDirective, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                    selector: '[tuiDropdownAlign], [tuiDropdownAppearance], [tuiDropdownDirection], [tuiDropdownLimitWidth], [tuiDropdownMinHeight], [tuiDropdownMaxHeight], [tuiDropdownOffset]',
                    providers: [tuiProvide(TUI_DROPDOWN_OPTIONS, TuiDropdownOptionsDirective)],
                }]
        }], propDecorators: { align: [{
                type: Input,
                args: ['tuiDropdownAlign']
            }], appearance: [{
                type: Input,
                args: ['tuiDropdownAppearance']
            }], direction: [{
                type: Input,
                args: ['tuiDropdownDirection']
            }], limitWidth: [{
                type: Input,
                args: ['tuiDropdownLimitWidth']
            }], minHeight: [{
                type: Input,
                args: ['tuiDropdownMinHeight']
            }], maxHeight: [{
                type: Input,
                args: ['tuiDropdownMaxHeight']
            }], offset: [{
                type: Input,
                args: ['tuiDropdownOffset']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24tb3B0aW9ucy5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL2RpcmVjdGl2ZXMvZHJvcGRvd24vZHJvcGRvd24tb3B0aW9ucy5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUF1QixJQUFJLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDekQsT0FBTyxFQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDM0UsT0FBTyxFQUFDLGNBQWMsRUFBRSxVQUFVLEVBQUMsTUFBTSxtQ0FBbUMsQ0FBQztBQUU3RSxPQUFPLEVBQUMsa0JBQWtCLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQzs7QUFleEQsMENBQTBDO0FBQzFDLE1BQU0sQ0FBQyxNQUFNLDRCQUE0QixHQUF1QjtJQUM1RCxLQUFLLEVBQUUsTUFBTTtJQUNiLFNBQVMsRUFBRSxJQUFJO0lBQ2YsVUFBVSxFQUFFLE1BQU07SUFDbEIsU0FBUyxFQUFFLEdBQUc7SUFDZCxTQUFTLEVBQUUsRUFBRTtJQUNiLE1BQU0sRUFBRSxDQUFDO0lBQ1QsVUFBVSxFQUFFLEVBQUU7Q0FDakIsQ0FBQztBQUVGOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sb0JBQW9CLEdBQUcsY0FBYyxDQUFDLDRCQUE0QixDQUFDLENBQUM7QUFFakYsTUFBTSxDQUFDLE1BQU0sMEJBQTBCLEdBRWhCLENBQUMsUUFBcUMsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUMvRCxPQUFPLEVBQUUsb0JBQW9CO0lBQzdCLElBQUksRUFBRTtRQUNGLENBQUMsSUFBSSxRQUFRLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxFQUFFLDJCQUEyQixDQUFDO1FBQ3pELENBQUMsSUFBSSxRQUFRLEVBQUUsRUFBRSxJQUFJLFFBQVEsRUFBRSxFQUFFLG9CQUFvQixDQUFDO0tBQ3pEO0lBQ0QsVUFBVSxFQUFFLGtCQUFrQixDQUFDLFFBQVEsRUFBRSw0QkFBNEIsQ0FBQztDQUN6RSxDQUFDLENBQUM7QUFFSCxNQU1hLDJCQUEyQjtJQU54QztRQU9xQixZQUFPLEdBQUcsTUFBTSxDQUFDLG9CQUFvQixFQUFFLEVBQUMsUUFBUSxFQUFFLElBQUksRUFBQyxDQUFDLENBQUM7UUFHbkUsVUFBSyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDO1FBRzNCLGVBQVUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQztRQUdyQyxjQUFTLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUM7UUFHbkMsZUFBVSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDO1FBR3JDLGNBQVMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQztRQUduQyxjQUFTLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUM7UUFHbkMsV0FBTSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDO0tBQ3ZDOytHQXZCWSwyQkFBMkI7bUdBQTNCLDJCQUEyQiwyaUJBRnpCLENBQUMsVUFBVSxDQUFDLG9CQUFvQixFQUFFLDJCQUEyQixDQUFDLENBQUM7O1NBRWpFLDJCQUEyQjs0RkFBM0IsMkJBQTJCO2tCQU52QyxTQUFTO21CQUFDO29CQUNQLFVBQVUsRUFBRSxJQUFJO29CQUNoQixRQUFRLEVBQ0osbUtBQW1LO29CQUN2SyxTQUFTLEVBQUUsQ0FBQyxVQUFVLENBQUMsb0JBQW9CLDhCQUE4QixDQUFDO2lCQUM3RTs4QkFLVSxLQUFLO3NCQURYLEtBQUs7dUJBQUMsa0JBQWtCO2dCQUlsQixVQUFVO3NCQURoQixLQUFLO3VCQUFDLHVCQUF1QjtnQkFJdkIsU0FBUztzQkFEZixLQUFLO3VCQUFDLHNCQUFzQjtnQkFJdEIsVUFBVTtzQkFEaEIsS0FBSzt1QkFBQyx1QkFBdUI7Z0JBSXZCLFNBQVM7c0JBRGYsS0FBSzt1QkFBQyxzQkFBc0I7Z0JBSXRCLFNBQVM7c0JBRGYsS0FBSzt1QkFBQyxzQkFBc0I7Z0JBSXRCLE1BQU07c0JBRFosS0FBSzt1QkFBQyxtQkFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3R5cGUgRmFjdG9yeVByb3ZpZGVyLCBTZWxmfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7RGlyZWN0aXZlLCBpbmplY3QsIElucHV0LCBPcHRpb25hbCwgU2tpcFNlbGZ9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHt0dWlDcmVhdGVUb2tlbiwgdHVpUHJvdmlkZX0gZnJvbSAnQHRhaWdhLXVpL2Nkay91dGlscy9taXNjZWxsYW5lb3VzJztcbmltcG9ydCB0eXBlIHtUdWlWZXJ0aWNhbERpcmVjdGlvbn0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvdHlwZXMnO1xuaW1wb3J0IHt0dWlPdmVycmlkZU9wdGlvbnN9IGZyb20gJ0B0YWlnYS11aS9jb3JlL3V0aWxzJztcblxuZXhwb3J0IHR5cGUgVHVpRHJvcGRvd25BbGlnbiA9ICdjZW50ZXInIHwgJ2xlZnQnIHwgJ3JpZ2h0JztcbmV4cG9ydCB0eXBlIFR1aURyb3Bkb3duV2lkdGggPSAnYXV0bycgfCAnZml4ZWQnIHwgJ21pbic7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVHVpRHJvcGRvd25PcHRpb25zIHtcbiAgICByZWFkb25seSBhbGlnbjogVHVpRHJvcGRvd25BbGlnbjtcbiAgICByZWFkb25seSBhcHBlYXJhbmNlOiBzdHJpbmc7XG4gICAgcmVhZG9ubHkgZGlyZWN0aW9uOiBUdWlWZXJ0aWNhbERpcmVjdGlvbiB8IG51bGw7XG4gICAgcmVhZG9ubHkgbGltaXRXaWR0aDogVHVpRHJvcGRvd25XaWR0aDtcbiAgICByZWFkb25seSBtYXhIZWlnaHQ6IG51bWJlcjtcbiAgICByZWFkb25seSBtaW5IZWlnaHQ6IG51bWJlcjtcbiAgICByZWFkb25seSBvZmZzZXQ6IG51bWJlcjtcbn1cblxuLyoqIERlZmF1bHQgdmFsdWVzIGZvciBkcm9wZG93biBvcHRpb25zICovXG5leHBvcnQgY29uc3QgVFVJX0RST1BET1dOX0RFRkFVTFRfT1BUSU9OUzogVHVpRHJvcGRvd25PcHRpb25zID0ge1xuICAgIGFsaWduOiAnbGVmdCcsXG4gICAgZGlyZWN0aW9uOiBudWxsLFxuICAgIGxpbWl0V2lkdGg6ICdhdXRvJyxcbiAgICBtYXhIZWlnaHQ6IDQwMCxcbiAgICBtaW5IZWlnaHQ6IDgwLFxuICAgIG9mZnNldDogNCxcbiAgICBhcHBlYXJhbmNlOiAnJyxcbn07XG5cbi8qKlxuICogRGVmYXVsdCBwYXJhbWV0ZXJzIGZvciBkcm9wZG93biBkaXJlY3RpdmVcbiAqL1xuZXhwb3J0IGNvbnN0IFRVSV9EUk9QRE9XTl9PUFRJT05TID0gdHVpQ3JlYXRlVG9rZW4oVFVJX0RST1BET1dOX0RFRkFVTFRfT1BUSU9OUyk7XG5cbmV4cG9ydCBjb25zdCB0dWlEcm9wZG93bk9wdGlvbnNQcm92aWRlcjogKFxuICAgIG9wdGlvbnM6IFBhcnRpYWw8VHVpRHJvcGRvd25PcHRpb25zPixcbikgPT4gRmFjdG9yeVByb3ZpZGVyID0gKG92ZXJyaWRlOiBQYXJ0aWFsPFR1aURyb3Bkb3duT3B0aW9ucz4pID0+ICh7XG4gICAgcHJvdmlkZTogVFVJX0RST1BET1dOX09QVElPTlMsXG4gICAgZGVwczogW1xuICAgICAgICBbbmV3IE9wdGlvbmFsKCksIG5ldyBTZWxmKCksIFR1aURyb3Bkb3duT3B0aW9uc0RpcmVjdGl2ZV0sXG4gICAgICAgIFtuZXcgT3B0aW9uYWwoKSwgbmV3IFNraXBTZWxmKCksIFRVSV9EUk9QRE9XTl9PUFRJT05TXSxcbiAgICBdLFxuICAgIHVzZUZhY3Rvcnk6IHR1aU92ZXJyaWRlT3B0aW9ucyhvdmVycmlkZSwgVFVJX0RST1BET1dOX0RFRkFVTFRfT1BUSU9OUyksXG59KTtcblxuQERpcmVjdGl2ZSh7XG4gICAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgICBzZWxlY3RvcjpcbiAgICAgICAgJ1t0dWlEcm9wZG93bkFsaWduXSwgW3R1aURyb3Bkb3duQXBwZWFyYW5jZV0sIFt0dWlEcm9wZG93bkRpcmVjdGlvbl0sIFt0dWlEcm9wZG93bkxpbWl0V2lkdGhdLCBbdHVpRHJvcGRvd25NaW5IZWlnaHRdLCBbdHVpRHJvcGRvd25NYXhIZWlnaHRdLCBbdHVpRHJvcGRvd25PZmZzZXRdJyxcbiAgICBwcm92aWRlcnM6IFt0dWlQcm92aWRlKFRVSV9EUk9QRE9XTl9PUFRJT05TLCBUdWlEcm9wZG93bk9wdGlvbnNEaXJlY3RpdmUpXSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpRHJvcGRvd25PcHRpb25zRGlyZWN0aXZlIGltcGxlbWVudHMgVHVpRHJvcGRvd25PcHRpb25zIHtcbiAgICBwcml2YXRlIHJlYWRvbmx5IG9wdGlvbnMgPSBpbmplY3QoVFVJX0RST1BET1dOX09QVElPTlMsIHtza2lwU2VsZjogdHJ1ZX0pO1xuXG4gICAgQElucHV0KCd0dWlEcm9wZG93bkFsaWduJylcbiAgICBwdWJsaWMgYWxpZ24gPSB0aGlzLm9wdGlvbnMuYWxpZ247XG5cbiAgICBASW5wdXQoJ3R1aURyb3Bkb3duQXBwZWFyYW5jZScpXG4gICAgcHVibGljIGFwcGVhcmFuY2UgPSB0aGlzLm9wdGlvbnMuYXBwZWFyYW5jZTtcblxuICAgIEBJbnB1dCgndHVpRHJvcGRvd25EaXJlY3Rpb24nKVxuICAgIHB1YmxpYyBkaXJlY3Rpb24gPSB0aGlzLm9wdGlvbnMuZGlyZWN0aW9uO1xuXG4gICAgQElucHV0KCd0dWlEcm9wZG93bkxpbWl0V2lkdGgnKVxuICAgIHB1YmxpYyBsaW1pdFdpZHRoID0gdGhpcy5vcHRpb25zLmxpbWl0V2lkdGg7XG5cbiAgICBASW5wdXQoJ3R1aURyb3Bkb3duTWluSGVpZ2h0JylcbiAgICBwdWJsaWMgbWluSGVpZ2h0ID0gdGhpcy5vcHRpb25zLm1pbkhlaWdodDtcblxuICAgIEBJbnB1dCgndHVpRHJvcGRvd25NYXhIZWlnaHQnKVxuICAgIHB1YmxpYyBtYXhIZWlnaHQgPSB0aGlzLm9wdGlvbnMubWF4SGVpZ2h0O1xuXG4gICAgQElucHV0KCd0dWlEcm9wZG93bk9mZnNldCcpXG4gICAgcHVibGljIG9mZnNldCA9IHRoaXMub3B0aW9ucy5vZmZzZXQ7XG59XG4iXX0=