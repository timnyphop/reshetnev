import { __decorate } from "tslib";
import { computed, Directive, inject } from '@angular/core';
import { EMPTY_CLIENT_RECT } from '@taiga-ui/cdk/constants';
import { TuiActiveZone } from '@taiga-ui/cdk/directives/active-zone';
import { TUI_IS_IOS, TUI_IS_TOUCH } from '@taiga-ui/cdk/tokens';
import { tuiPointToClientRect } from '@taiga-ui/cdk/utils/dom';
import { tuiAsDriver, tuiAsRectAccessor, TuiRectAccessor } from '@taiga-ui/core/classes';
import { shouldCall } from '@taiga-ui/event-plugins';
import { TuiDropdownDriver } from './dropdown.driver';
import * as i0 from "@angular/core";
function activeZoneFilter(target) {
    return !this.activeZone.contains(target);
}
const TAP_DELAY = 700;
const MOVE_THRESHOLD = 15;
class TuiDropdownContext extends TuiRectAccessor {
    constructor() {
        super(...arguments);
        this.isIOS = inject(TUI_IS_IOS);
        this.isTouch = inject(TUI_IS_TOUCH);
        this.driver = inject(TuiDropdownDriver);
        this.currentRect = EMPTY_CLIENT_RECT;
        this.longTapTimeout = NaN;
        this.userSelect = computed(() => (this.isTouch() ? 'none' : null));
        this.activeZone = inject(TuiActiveZone);
        this.type = 'dropdown';
    }
    getClientRect() {
        return this.currentRect;
    }
    closeDropdown(_element) {
        this.driver.next(false);
        this.currentRect = EMPTY_CLIENT_RECT;
    }
    onContextMenu(x, y) {
        this.currentRect = tuiPointToClientRect(x, y);
        this.driver.next(true);
    }
    onTouchStart(x, y) {
        if (!this.isIOS || !this.isTouch() || this.currentRect !== EMPTY_CLIENT_RECT) {
            return;
        }
        this.currentRect = tuiPointToClientRect(x, y);
        this.longTapTimeout = setTimeout(() => this.driver.next(true), TAP_DELAY);
    }
    onTouchMove(x, y) {
        if (this.isIOS &&
            this.isTouch() &&
            this.currentRect !== EMPTY_CLIENT_RECT &&
            Math.hypot(x - this.currentRect.x, y - this.currentRect.y) > MOVE_THRESHOLD) {
            this.onTouchEnd();
        }
    }
    onTouchEnd() {
        clearTimeout(this.longTapTimeout);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiDropdownContext, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: TuiDropdownContext, isStandalone: true, selector: "[tuiDropdownContext]", host: { listeners: { "touchend.silent.passive": "onTouchEnd()", "touchcancel.silent.passive": "onTouchEnd()", "touchmove.silent.passive": "onTouchMove($event.touches[0].clientX, $event.touches[0].clientY)", "touchstart.silent.passive": "onTouchStart($event.touches[0].clientX, $event.touches[0].clientY)", "document:pointerdown.silent": "closeDropdown($event.target)", "document:contextmenu.capture.silent": "closeDropdown($event.target)", "document:keydown.esc": "closeDropdown($event.currentTarget)", "contextmenu.prevent.stop": "onContextMenu($event.clientX, $event.clientY)" }, properties: { "style.user-select": "userSelect()", "style.-webkit-user-select": "userSelect()", "style.-webkit-touch-callout": "userSelect()" } }, providers: [
            TuiActiveZone,
            TuiDropdownDriver,
            tuiAsDriver(TuiDropdownDriver),
            tuiAsRectAccessor(TuiDropdownContext),
        ], usesInheritance: true, ngImport: i0 }); }
}
__decorate([
    shouldCall(activeZoneFilter)
], TuiDropdownContext.prototype, "closeDropdown", null);
export { TuiDropdownContext };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiDropdownContext, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                    selector: '[tuiDropdownContext]',
                    providers: [
                        TuiActiveZone,
                        TuiDropdownDriver,
                        tuiAsDriver(TuiDropdownDriver),
                        tuiAsRectAccessor(TuiDropdownContext),
                    ],
                    host: {
                        '[style.user-select]': 'userSelect()',
                        '[style.-webkit-user-select]': 'userSelect()',
                        '[style.-webkit-touch-callout]': 'userSelect()',
                        '(touchend.silent.passive)': 'onTouchEnd()',
                        '(touchcancel.silent.passive)': 'onTouchEnd()',
                        '(touchmove.silent.passive)': 'onTouchMove($event.touches[0].clientX, $event.touches[0].clientY)',
                        '(touchstart.silent.passive)': 'onTouchStart($event.touches[0].clientX, $event.touches[0].clientY)',
                        '(document:pointerdown.silent)': 'closeDropdown($event.target)',
                        '(document:contextmenu.capture.silent)': 'closeDropdown($event.target)',
                        '(document:keydown.esc)': 'closeDropdown($event.currentTarget)',
                        '(contextmenu.prevent.stop)': 'onContextMenu($event.clientX, $event.clientY)',
                    },
                }]
        }], propDecorators: { closeDropdown: [] } });
//# sourceMappingURL=data:application/json;base64,