import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, inject } from '@angular/core';
import { takeUntilDestroyed } from '@angular/core/rxjs-interop';
import { EMPTY_CLIENT_RECT } from '@taiga-ui/cdk/constants';
import { TuiHoveredService } from '@taiga-ui/cdk/directives/hovered';
import { tuiInjectElement } from '@taiga-ui/cdk/utils/dom';
import { tuiClamp } from '@taiga-ui/cdk/utils/math';
import { tuiPure, tuiPx } from '@taiga-ui/cdk/utils/miscellaneous';
import { tuiFadeIn } from '@taiga-ui/core/animations';
import { tuiPositionAccessorFor, TuiRectAccessor, tuiRectAccessorFor, } from '@taiga-ui/core/classes';
import { TuiPositionService, TuiVisualViewportService } from '@taiga-ui/core/services';
import { TUI_ANIMATIONS_SPEED, TUI_VIEWPORT } from '@taiga-ui/core/tokens';
import { tuiIsObscured, tuiToAnimationOptions } from '@taiga-ui/core/utils';
import { injectContext } from '@taiga-ui/polymorpheus';
import { PolymorpheusOutlet } from '@taiga-ui/polymorpheus';
import { map, takeWhile } from 'rxjs';
import { TuiHintDirective } from './hint.directive';
import { TuiHintHover } from './hint-hover.directive';
import { TuiHintPointer } from './hint-pointer.directive';
import { TuiHintPosition } from './hint-position.directive';
import { TuiHintUnstyledComponent } from './hint-unstyled.component';
import * as i0 from "@angular/core";
const GAP = 4;
export const TUI_HINT_PROVIDERS = [
    TuiPositionService,
    TuiHoveredService,
    tuiPositionAccessorFor('hint', TuiHintPosition),
    tuiRectAccessorFor('hint', TuiHintDirective),
];
class TuiHintComponent {
    constructor() {
        this.el = tuiInjectElement();
        this.hover = inject(TuiHintHover);
        this.vvs = inject(TuiVisualViewportService);
        this.viewport = inject(TUI_VIEWPORT);
        this.options = tuiToAnimationOptions(inject(TUI_ANIMATIONS_SPEED));
        this.pointer = inject(TuiHintPointer, { optional: true });
        this.accessor = inject(TuiRectAccessor);
        this.hint = injectContext().$implicit;
        this.appearance = this.hint.appearance ||
            this.hint.el.closest('[tuiTheme]')?.getAttribute('tuiTheme');
        inject(TuiPositionService)
            .pipe(takeWhile(() => this.hint.el.isConnected), map((point) => this.vvs.correct(point)), takeUntilDestroyed())
            .subscribe({
            next: ([top, left]) => this.update(top, left),
            complete: () => this.hover.toggle(false),
        });
        inject(TuiHoveredService)
            .pipe(takeUntilDestroyed())
            .subscribe((hover) => this.hover.toggle(hover));
    }
    get content() {
        return this.hint.component.component === TuiHintUnstyledComponent
            ? ''
            : this.hint.content;
    }
    onClick(target) {
        if ((!target.closest('tui-hint') && !this.hint.el.contains(target)) ||
            tuiIsObscured(this.hint.el)) {
            this.hover.toggle(false);
        }
    }
    apply(top, left, beakTop, beakLeft) {
        this.el.style.top = top;
        this.el.style.left = left;
        this.el.style.setProperty('--top', beakTop);
        this.el.style.setProperty('--left', beakLeft);
    }
    update(top, left) {
        const { height, width } = this.el.getBoundingClientRect();
        const rect = this.accessor.getClientRect();
        const viewport = this.viewport.getClientRect();
        if (rect === EMPTY_CLIENT_RECT || !height || !width) {
            return;
        }
        const safeLeft = tuiClamp(left, GAP, viewport.width - width - GAP);
        const [beakTop, beakLeft] = this.vvs.correct([
            rect.top + rect.height / 2 - top,
            rect.left + rect.width / 2 - safeLeft,
        ]);
        this.apply(tuiPx(Math.round(top)), tuiPx(Math.round(safeLeft)), tuiPx(Math.round(tuiClamp(beakTop, 1, height - 1))), tuiPx(Math.round(tuiClamp(beakLeft, 1, width - 1))));
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiHintComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiHintComponent, isStandalone: true, selector: "tui-hint", host: { listeners: { "document:click": "onClick($event.target)" }, properties: { "@tuiFadeIn": "options", "class._untouchable": "pointer", "attr.data-appearance": "appearance", "attr.tuiTheme": "appearance" } }, providers: TUI_HINT_PROVIDERS, ngImport: i0, template: `
        <ng-content />
        <span
            *polymorpheusOutlet="content as text; context: hint.context"
            [innerHTML]="text"
        ></span>
    `, isInline: true, styles: [":host{position:absolute;max-inline-size:18rem;min-block-size:var(--tui-height-m);padding:.75rem 1rem;background:var(--tui-background-accent-1);border-radius:var(--tui-radius-l);color:var(--tui-text-primary-on-accent-1);box-sizing:border-box;font:var(--tui-font-text-s);white-space:pre-line;word-wrap:break-word;line-height:1.25rem}:host:before{content:\"\";position:absolute;top:var(--top);left:var(--left);inline-size:.5rem;block-size:.5rem;border-radius:.125rem;box-sizing:border-box;background:inherit;transform:translate(-50%,-50%) rotate(45deg)}:host[data-appearance=error]{background:var(--tui-status-negative)}:host[data-appearance=dark]{background:var(--tui-background-accent-opposite-hover);color:var(--tui-background-base);filter:drop-shadow(0 0 .125rem rgba(0,0,0,.16)) drop-shadow(0 1.5rem 1rem rgba(0,0,0,.03)) drop-shadow(0 .75rem .75rem rgba(0,0,0,.04)) drop-shadow(0 .25rem .375rem rgba(0,0,0,.05))}:host:not([style*=top]){visibility:hidden}:host._untouchable{pointer-events:none}\n"], dependencies: [{ kind: "directive", type: PolymorpheusOutlet, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], animations: [tuiFadeIn], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
__decorate([
    tuiPure
], TuiHintComponent.prototype, "apply", null);
export { TuiHintComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiHintComponent, decorators: [{
            type: Component,
            args: [{ standalone: true, selector: 'tui-hint', imports: [PolymorpheusOutlet], template: `
        <ng-content />
        <span
            *polymorpheusOutlet="content as text; context: hint.context"
            [innerHTML]="text"
        ></span>
    `, changeDetection: ChangeDetectionStrategy.OnPush, providers: TUI_HINT_PROVIDERS, animations: [tuiFadeIn], host: {
                        '[@tuiFadeIn]': 'options',
                        '[class._untouchable]': 'pointer',
                        '[attr.data-appearance]': 'appearance',
                        '[attr.tuiTheme]': 'appearance',
                        '(document:click)': 'onClick($event.target)',
                    }, styles: [":host{position:absolute;max-inline-size:18rem;min-block-size:var(--tui-height-m);padding:.75rem 1rem;background:var(--tui-background-accent-1);border-radius:var(--tui-radius-l);color:var(--tui-text-primary-on-accent-1);box-sizing:border-box;font:var(--tui-font-text-s);white-space:pre-line;word-wrap:break-word;line-height:1.25rem}:host:before{content:\"\";position:absolute;top:var(--top);left:var(--left);inline-size:.5rem;block-size:.5rem;border-radius:.125rem;box-sizing:border-box;background:inherit;transform:translate(-50%,-50%) rotate(45deg)}:host[data-appearance=error]{background:var(--tui-status-negative)}:host[data-appearance=dark]{background:var(--tui-background-accent-opposite-hover);color:var(--tui-background-base);filter:drop-shadow(0 0 .125rem rgba(0,0,0,.16)) drop-shadow(0 1.5rem 1rem rgba(0,0,0,.03)) drop-shadow(0 .75rem .75rem rgba(0,0,0,.04)) drop-shadow(0 .25rem .375rem rgba(0,0,0,.05))}:host:not([style*=top]){visibility:hidden}:host._untouchable{pointer-events:none}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { apply: [] } });
//# sourceMappingURL=data:application/json;base64,