import { CommonModule } from '@angular/common';
import { ChangeDetectionStrategy, Component, inject } from '@angular/core';
import { TuiFocusTrap } from '@taiga-ui/cdk/directives/focus-trap';
import { tuiInjectElement } from '@taiga-ui/cdk/utils/dom';
import { tuiHost } from '@taiga-ui/core/animations';
import { TuiScrollControls, TuiScrollRef } from '@taiga-ui/core/components/scrollbar';
import { PolymorpheusOutlet, PolymorpheusTemplate } from '@taiga-ui/polymorpheus';
import { TUI_DIALOGS } from './dialog.tokens';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
class TuiDialogs {
    constructor() {
        this.el = tuiInjectElement();
        this.dialogs$ = inject(TUI_DIALOGS);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiDialogs, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiDialogs, isStandalone: true, selector: "tui-dialogs", host: { listeners: { "keydown.silent": "el.scrollTop = el.scrollHeight / 2" } }, ngImport: i0, template: "<ng-container *ngIf=\"dialogs$ | async as dialogs\">\n    <section\n        *ngFor=\"let item of dialogs\"\n        aria-modal=\"true\"\n        role=\"dialog\"\n        tuiFocusTrap\n        tuiScrollRef\n        class=\"t-dialog\"\n        @tuiHost\n        [attr.aria-labelledby]=\"item.id\"\n        [class.t-dialog_closing]=\"!dialogs.length\"\n    >\n        <ng-container *polymorpheusOutlet=\"item.component; context: item\" />\n        <tui-scroll-controls class=\"t-scrollbars\" />\n    </section>\n    <div\n        class=\"t-overlay\"\n        [style.opacity]=\"dialogs.length\"\n    ></div>\n</ng-container>\n", styles: [":host{position:fixed;top:0;left:0;inline-size:100%;block-size:100%;scrollbar-width:none;-ms-overflow-style:none;pointer-events:none;overflow:hidden;overscroll-behavior:none}:host::-webkit-scrollbar,:host::-webkit-scrollbar-thumb{display:none}:host:has(section){pointer-events:auto;overflow:auto}:host:before{content:\"\";display:block;block-size:1000%}.t-overlay,.t-dialog{scrollbar-width:none;-ms-overflow-style:none;position:fixed;top:0;left:0;bottom:0;right:0;display:flex;block-size:100%;align-items:flex-start;outline:none;overflow:auto}.t-overlay::-webkit-scrollbar,.t-dialog::-webkit-scrollbar,.t-overlay::-webkit-scrollbar-thumb,.t-dialog::-webkit-scrollbar-thumb{display:none}.t-overlay.ng-animating,.t-dialog.ng-animating{overflow:clip}.t-dialog{position:sticky;pointer-events:auto;overscroll-behavior:none}.t-overlay{transition-property:opacity;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;background:var(--tui-service-backdrop);-webkit-backdrop-filter:var(--tui-backdrop, none);backdrop-filter:var(--tui-backdrop, none)}.t-dialog:last-of-type{z-index:1}.t-scrollbars{position:fixed;top:0;left:0;bottom:0;right:0;margin:0;color:#747474}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "pipe", type: i1.AsyncPipe, name: "async" }, { kind: "directive", type: PolymorpheusOutlet, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { kind: "directive", type: TuiFocusTrap, selector: "[tuiFocusTrap]" }, { kind: "component", type: TuiScrollControls, selector: "tui-scroll-controls" }, { kind: "directive", type: TuiScrollRef, selector: "[tuiScrollRef]" }], animations: [tuiHost], changeDetection: i0.ChangeDetectionStrategy.Default }); }
}
export { TuiDialogs };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiDialogs, decorators: [{
            type: Component,
            args: [{ standalone: true, selector: 'tui-dialogs', imports: [
                        CommonModule,
                        PolymorpheusOutlet,
                        PolymorpheusTemplate,
                        TuiFocusTrap,
                        TuiScrollControls,
                        TuiScrollRef,
                    ], changeDetection: ChangeDetectionStrategy.Default, animations: [tuiHost], host: {
                        '(keydown.silent)': 'el.scrollTop = el.scrollHeight / 2',
                    }, template: "<ng-container *ngIf=\"dialogs$ | async as dialogs\">\n    <section\n        *ngFor=\"let item of dialogs\"\n        aria-modal=\"true\"\n        role=\"dialog\"\n        tuiFocusTrap\n        tuiScrollRef\n        class=\"t-dialog\"\n        @tuiHost\n        [attr.aria-labelledby]=\"item.id\"\n        [class.t-dialog_closing]=\"!dialogs.length\"\n    >\n        <ng-container *polymorpheusOutlet=\"item.component; context: item\" />\n        <tui-scroll-controls class=\"t-scrollbars\" />\n    </section>\n    <div\n        class=\"t-overlay\"\n        [style.opacity]=\"dialogs.length\"\n    ></div>\n</ng-container>\n", styles: [":host{position:fixed;top:0;left:0;inline-size:100%;block-size:100%;scrollbar-width:none;-ms-overflow-style:none;pointer-events:none;overflow:hidden;overscroll-behavior:none}:host::-webkit-scrollbar,:host::-webkit-scrollbar-thumb{display:none}:host:has(section){pointer-events:auto;overflow:auto}:host:before{content:\"\";display:block;block-size:1000%}.t-overlay,.t-dialog{scrollbar-width:none;-ms-overflow-style:none;position:fixed;top:0;left:0;bottom:0;right:0;display:flex;block-size:100%;align-items:flex-start;outline:none;overflow:auto}.t-overlay::-webkit-scrollbar,.t-dialog::-webkit-scrollbar,.t-overlay::-webkit-scrollbar-thumb,.t-dialog::-webkit-scrollbar-thumb{display:none}.t-overlay.ng-animating,.t-dialog.ng-animating{overflow:clip}.t-dialog{position:sticky;pointer-events:auto;overscroll-behavior:none}.t-overlay{transition-property:opacity;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;background:var(--tui-service-backdrop);-webkit-backdrop-filter:var(--tui-backdrop, none);backdrop-filter:var(--tui-backdrop, none)}.t-dialog:last-of-type{z-index:1}.t-scrollbars{position:fixed;top:0;left:0;bottom:0;right:0;margin:0;color:#747474}\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlhbG9ncy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL2NvbXBvbmVudHMvZGlhbG9nL2RpYWxvZ3MuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZS9jb21wb25lbnRzL2RpYWxvZy9kaWFsb2dzLnRlbXBsYXRlLmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBQyx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3pFLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxxQ0FBcUMsQ0FBQztBQUVqRSxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQztBQUN6RCxPQUFPLEVBQUMsT0FBTyxFQUFDLE1BQU0sMkJBQTJCLENBQUM7QUFDbEQsT0FBTyxFQUFDLGlCQUFpQixFQUFFLFlBQVksRUFBQyxNQUFNLHFDQUFxQyxDQUFDO0FBQ3BGLE9BQU8sRUFBQyxrQkFBa0IsRUFBRSxvQkFBb0IsRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBR2hGLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQzs7O0FBRTVDLE1BcUJhLFVBQVU7SUFyQnZCO1FBc0J1QixPQUFFLEdBQUcsZ0JBQWdCLEVBQUUsQ0FBQztRQUN4QixhQUFRLEdBQ3ZCLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQztLQUMzQjsrR0FKWSxVQUFVO21HQUFWLFVBQVUsd0pDakN2QixnbkJBb0JBLDZ0Q0RKUSxZQUFZLHFUQUNaLGtCQUFrQiw4SEFFbEIsWUFBWSwyREFDWixpQkFBaUIsZ0VBQ2pCLFlBQVksNkNBT0osQ0FBQyxPQUFPLENBQUM7O1NBS1osVUFBVTs0RkFBVixVQUFVO2tCQXJCdEIsU0FBUztpQ0FDTSxJQUFJLFlBQ04sYUFBYSxXQUNkO3dCQUNMLFlBQVk7d0JBQ1osa0JBQWtCO3dCQUNsQixvQkFBb0I7d0JBQ3BCLFlBQVk7d0JBQ1osaUJBQWlCO3dCQUNqQixZQUFZO3FCQUNmLG1CQUtnQix1QkFBdUIsQ0FBQyxPQUFPLGNBQ3BDLENBQUMsT0FBTyxDQUFDLFFBQ2Y7d0JBQ0Ysa0JBQWtCLEVBQUUsb0NBQW9DO3FCQUMzRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tbW9uTW9kdWxlfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHtDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBpbmplY3R9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtUdWlGb2N1c1RyYXB9IGZyb20gJ0B0YWlnYS11aS9jZGsvZGlyZWN0aXZlcy9mb2N1cy10cmFwJztcbmltcG9ydCB0eXBlIHtUdWlQb3BvdmVyfSBmcm9tICdAdGFpZ2EtdWkvY2RrL3NlcnZpY2VzJztcbmltcG9ydCB7dHVpSW5qZWN0RWxlbWVudH0gZnJvbSAnQHRhaWdhLXVpL2Nkay91dGlscy9kb20nO1xuaW1wb3J0IHt0dWlIb3N0fSBmcm9tICdAdGFpZ2EtdWkvY29yZS9hbmltYXRpb25zJztcbmltcG9ydCB7VHVpU2Nyb2xsQ29udHJvbHMsIFR1aVNjcm9sbFJlZn0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvY29tcG9uZW50cy9zY3JvbGxiYXInO1xuaW1wb3J0IHtQb2x5bW9ycGhldXNPdXRsZXQsIFBvbHltb3JwaGV1c1RlbXBsYXRlfSBmcm9tICdAdGFpZ2EtdWkvcG9seW1vcnBoZXVzJztcbmltcG9ydCB0eXBlIHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcblxuaW1wb3J0IHtUVUlfRElBTE9HU30gZnJvbSAnLi9kaWFsb2cudG9rZW5zJztcblxuQENvbXBvbmVudCh7XG4gICAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgICBzZWxlY3RvcjogJ3R1aS1kaWFsb2dzJyxcbiAgICBpbXBvcnRzOiBbXG4gICAgICAgIENvbW1vbk1vZHVsZSxcbiAgICAgICAgUG9seW1vcnBoZXVzT3V0bGV0LFxuICAgICAgICBQb2x5bW9ycGhldXNUZW1wbGF0ZSxcbiAgICAgICAgVHVpRm9jdXNUcmFwLFxuICAgICAgICBUdWlTY3JvbGxDb250cm9scyxcbiAgICAgICAgVHVpU2Nyb2xsUmVmLFxuICAgIF0sXG4gICAgdGVtcGxhdGVVcmw6ICcuL2RpYWxvZ3MudGVtcGxhdGUuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vZGlhbG9ncy5zdHlsZS5sZXNzJ10sXG4gICAgLy8gU28gdGhhdCB3ZSBkbyBub3QgZm9yY2UgT25QdXNoIG9uIGN1c3RvbSBkaWFsb2dzXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEBhbmd1bGFyLWVzbGludC9wcmVmZXItb24tcHVzaC1jb21wb25lbnQtY2hhbmdlLWRldGVjdGlvblxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuRGVmYXVsdCxcbiAgICBhbmltYXRpb25zOiBbdHVpSG9zdF0sXG4gICAgaG9zdDoge1xuICAgICAgICAnKGtleWRvd24uc2lsZW50KSc6ICdlbC5zY3JvbGxUb3AgPSBlbC5zY3JvbGxIZWlnaHQgLyAyJyxcbiAgICB9LFxufSlcbmV4cG9ydCBjbGFzcyBUdWlEaWFsb2dzIHtcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgZWwgPSB0dWlJbmplY3RFbGVtZW50KCk7XG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IGRpYWxvZ3MkOiBPYnNlcnZhYmxlPFJlYWRvbmx5QXJyYXk8VHVpUG9wb3ZlcjxhbnksIGFueT4+PiA9XG4gICAgICAgIGluamVjdChUVUlfRElBTE9HUyk7XG59XG4iLCI8bmctY29udGFpbmVyICpuZ0lmPVwiZGlhbG9ncyQgfCBhc3luYyBhcyBkaWFsb2dzXCI+XG4gICAgPHNlY3Rpb25cbiAgICAgICAgKm5nRm9yPVwibGV0IGl0ZW0gb2YgZGlhbG9nc1wiXG4gICAgICAgIGFyaWEtbW9kYWw9XCJ0cnVlXCJcbiAgICAgICAgcm9sZT1cImRpYWxvZ1wiXG4gICAgICAgIHR1aUZvY3VzVHJhcFxuICAgICAgICB0dWlTY3JvbGxSZWZcbiAgICAgICAgY2xhc3M9XCJ0LWRpYWxvZ1wiXG4gICAgICAgIEB0dWlIb3N0XG4gICAgICAgIFthdHRyLmFyaWEtbGFiZWxsZWRieV09XCJpdGVtLmlkXCJcbiAgICAgICAgW2NsYXNzLnQtZGlhbG9nX2Nsb3NpbmddPVwiIWRpYWxvZ3MubGVuZ3RoXCJcbiAgICA+XG4gICAgICAgIDxuZy1jb250YWluZXIgKnBvbHltb3JwaGV1c091dGxldD1cIml0ZW0uY29tcG9uZW50OyBjb250ZXh0OiBpdGVtXCIgLz5cbiAgICAgICAgPHR1aS1zY3JvbGwtY29udHJvbHMgY2xhc3M9XCJ0LXNjcm9sbGJhcnNcIiAvPlxuICAgIDwvc2VjdGlvbj5cbiAgICA8ZGl2XG4gICAgICAgIGNsYXNzPVwidC1vdmVybGF5XCJcbiAgICAgICAgW3N0eWxlLm9wYWNpdHldPVwiZGlhbG9ncy5sZW5ndGhcIlxuICAgID48L2Rpdj5cbjwvbmctY29udGFpbmVyPlxuIl19