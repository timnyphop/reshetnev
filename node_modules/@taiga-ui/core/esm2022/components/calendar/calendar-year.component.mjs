import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, } from '@angular/core';
import { TUI_FALSE_HANDLER } from '@taiga-ui/cdk/constants';
import { MAX_YEAR, MIN_YEAR, TuiMonth, TuiMonthRange, TuiYear, } from '@taiga-ui/cdk/date-time';
import { TuiHovered } from '@taiga-ui/cdk/directives/hovered';
import { TuiLet } from '@taiga-ui/cdk/directives/let';
import { TuiRepeatTimes } from '@taiga-ui/cdk/directives/repeat-times';
import { tuiInRange } from '@taiga-ui/cdk/utils/math';
import { tuiIsNumber } from '@taiga-ui/cdk/utils/miscellaneous';
import { TuiScrollIntoView } from '@taiga-ui/core/components/scrollbar';
import * as i0 from "@angular/core";
const LIMIT = 100;
const ITEMS_IN_ROW = 4;
class TuiCalendarYear {
    constructor() {
        this.hoveredItem = null;
        this.currentYear = TuiMonth.currentLocal().year;
        this.value = null;
        this.initialItem = this.currentYear;
        this.min = MIN_YEAR;
        this.max = MAX_YEAR;
        this.disabledItemHandler = TUI_FALSE_HANDLER;
        this.yearClick = new EventEmitter();
    }
    isDisabled(item) {
        return ((this.max && this.max < item) ||
            (this.min && this.min > item) ||
            this.disabledItemHandler(item));
    }
    getItemRange(item) {
        const { value, hoveredItem } = this;
        if (value === null) {
            return null;
        }
        if (value instanceof TuiYear) {
            return value.year === item ? 'single' : null;
        }
        if (tuiIsNumber(value)) {
            return value === item ? 'single' : null;
        }
        if (!(value instanceof TuiMonthRange)) {
            return value.find((day) => day.year === item) ? 'single' : null;
        }
        if ((value.from.year === item && !value.from.yearSame(value.to)) ||
            (hoveredItem !== null &&
                hoveredItem > value.from.year &&
                value.from.year === item &&
                value.from.yearSame(value.to)) ||
            (hoveredItem !== null &&
                hoveredItem === item &&
                hoveredItem < value.from.year &&
                value.from.yearSame(value.to))) {
            return 'start';
        }
        if ((value.to.year === item && !value.from.yearSame(value.to)) ||
            (hoveredItem !== null &&
                hoveredItem < value.from.year &&
                value.from.year === item &&
                value.from.yearSame(value.to)) ||
            (hoveredItem !== null &&
                hoveredItem === item &&
                hoveredItem > value.from.year &&
                value.from.yearSame(value.to))) {
            return 'end';
        }
        return value.from.yearSame(value.to) && value.from.year === item
            ? 'single'
            : null;
    }
    itemIsInterval(item) {
        const { value, hoveredItem } = this;
        if (!this.isRange(value)) {
            return false;
        }
        if (!value.from.yearSame(value.to)) {
            return value.from.year <= item && value.to.year > item;
        }
        if (hoveredItem === null || value.from.year === hoveredItem) {
            return false;
        }
        return tuiInRange(item, Math.min(value.from.year, hoveredItem), Math.max(value.from.year, hoveredItem));
    }
    onItemHovered(hovered, item) {
        this.updateHoveredItem(hovered, item);
    }
    get isSingle() {
        return this.isRange(this.value) && this.value.from.yearSame(this.value.to);
    }
    get rows() {
        return Math.ceil((this.calculatedMax - this.calculatedMin) / ITEMS_IN_ROW);
    }
    isRange(item) {
        return item instanceof TuiMonthRange;
    }
    scrollItemIntoView(item) {
        return this.initialItem === item;
    }
    getItem(rowIndex, colIndex) {
        return rowIndex * ITEMS_IN_ROW + colIndex + this.calculatedMin;
    }
    itemIsToday(item) {
        return this.currentYear === item;
    }
    get calculatedMin() {
        const initial = this.initialItem - LIMIT;
        const min = this.min ?? MIN_YEAR;
        return min > initial ? min : initial;
    }
    get calculatedMax() {
        const initial = this.initialItem + LIMIT;
        const max = this.max ?? MAX_YEAR;
        return max < initial ? max + 1 : initial;
    }
    updateHoveredItem(hovered, item) {
        this.hoveredItem = hovered ? item : null;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiCalendarYear, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiCalendarYear, isStandalone: true, selector: "tui-calendar-year", inputs: { value: "value", initialItem: "initialItem", min: "min", max: "max", disabledItemHandler: "disabledItemHandler" }, outputs: { yearClick: "yearClick" }, host: { properties: { "class._single": "isSingle" } }, ngImport: i0, template: "<div\n    *tuiRepeatTimes=\"let rowIndex of rows\"\n    automation-id=\"tui-calendar-year__row\"\n    class=\"t-row\"\n>\n    <ng-container *tuiRepeatTimes=\"let colIndex of 4\">\n        <div\n            *tuiLet=\"getItem(rowIndex, colIndex) as item\"\n            automation-id=\"tui-calendar-year__cell\"\n            class=\"t-cell\"\n            [attr.data-range]=\"getItemRange(item)\"\n            [class.t-cell_disabled]=\"isDisabled(item)\"\n            [class.t-cell_interval]=\"itemIsInterval(item)\"\n            [class.t-cell_today]=\"itemIsToday(item)\"\n            [tuiScrollIntoView]=\"scrollItemIntoView(item)\"\n            (click)=\"yearClick.emit(item)\"\n            (tuiHoveredChange)=\"onItemHovered($event, item)\"\n        >\n            <div class=\"t-item\">{{ item }}</div>\n        </div>\n    </ng-container>\n</div>\n", styles: [":host{display:block;font:var(--tui-font-text-m)}.t-row{position:relative;display:flex;justify-content:space-between;block-size:2.25rem;isolation:isolate}.t-item{position:relative;flex:1;line-height:2rem;border-radius:var(--tui-radius-m)}.t-item:before,.t-item:after{position:absolute;top:0;left:0;bottom:0;right:0;content:\"\";z-index:-1;border-radius:var(--tui-radius-m)}.t-item:after{border-radius:.5rem}.t-cell{position:relative;display:flex;align-items:center;justify-content:center;inline-size:3.9375rem;text-align:center;outline:none;cursor:pointer;background-clip:content-box;box-sizing:border-box;border:.125rem solid transparent}.t-cell:before{content:\"\";position:absolute;top:0;left:0;right:0;bottom:0;z-index:-1;border-radius:var(--tui-radius-m)}.t-cell_today:after{position:absolute;left:50%;transform:translate(-50%);content:\"\";bottom:.3125rem;block-size:.125rem;inline-size:.75rem;border-radius:.375rem;background:var(--tui-text-primary)}.t-cell_interval:before{background:var(--tui-background-base-alt)}:host._single .t-cell_interval:before{background:var(--tui-background-neutral-1-hover)}.t-cell_interval:not(:last-child):before{right:-.1875rem;border-start-end-radius:0;border-end-end-radius:0}.t-cell_interval:not([data-range=start]):not(:first-child):before{border-start-start-radius:0;border-end-start-radius:0}.t-cell_interval:last-child:first-child:before{right:0}.t-cell_interval:first-child>.t-item{border-start-start-radius:var(--tui-radius-m);border-end-start-radius:var(--tui-radius-m)}.t-cell_interval:last-child>.t-item{border-start-end-radius:var(--tui-radius-m);border-end-end-radius:var(--tui-radius-m)}.t-cell_interval>.t-item{border-radius:0}.t-cell[data-range]:after{background:var(--tui-text-primary-on-accent-1)}.t-cell[data-range]>.t-item{color:var(--tui-text-primary-on-accent-1)}.t-cell[data-range]>.t-item:before,.t-cell[data-range]>.t-item:after{background:var(--tui-background-accent-1)}.t-cell[data-range]:hover>.t-item:before,.t-cell[data-range]:hover>.t-item:after{background:var(--tui-background-accent-1-hover)}.t-cell[data-range]:active>.t-item:before,.t-cell[data-range]:active>.t-item:after{background:var(--tui-background-accent-1-pressed)}.t-cell[data-range=end]:before{background:var(--tui-background-base-alt)}:host._single .t-cell[data-range=end]:before{background:var(--tui-background-neutral-1-hover)}.t-cell[data-range=end]:not(:first-child):before{border-start-start-radius:0;border-end-start-radius:0}.t-cell[data-range=end]>.t-item:before{left:.625rem;border-start-start-radius:0;border-end-start-radius:0}.t-cell[data-range=end]>.t-item:after{left:-2rem;right:100%;transform:translate(1.6rem) scaleY(.83) scaleX(.5) rotate(45deg)}.t-cell[data-range=start]>.t-item:before{right:.625rem;border-start-end-radius:0;border-end-end-radius:0}.t-cell[data-range=start]>.t-item:after{left:100%;right:-2rem;transform:translate(-1.6rem) scaleY(.83) scaleX(.5) rotate(45deg)}.t-cell[data-range=single]>.t-item:after{display:none}.t-cell_disabled{pointer-events:none}.t-cell_disabled>.t-item{opacity:.36}.t-cell:hover:not([data-range])>.t-item{background:var(--tui-background-neutral-1-hover)}.t-cell:active:not([data-range])>.t-item{background:var(--tui-background-neutral-1-pressed)}:host{inline-size:15.75rem}.t-row{margin:.875rem 0}.t-row:first-child{margin-top:0}.t-row:last-child{margin-bottom:0}\n"], dependencies: [{ kind: "directive", type: TuiHovered, selector: "[tuiHoveredChange]", outputs: ["tuiHoveredChange"] }, { kind: "directive", type: TuiRepeatTimes, selector: "[tuiRepeatTimes][tuiRepeatTimesOf]", inputs: ["tuiRepeatTimesOf"] }, { kind: "directive", type: TuiLet, selector: "[tuiLet]", inputs: ["tuiLet"] }, { kind: "directive", type: TuiScrollIntoView, selector: "[tuiScrollIntoView]", inputs: ["tuiScrollIntoView"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { TuiCalendarYear };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiCalendarYear, decorators: [{
            type: Component,
            args: [{ standalone: true, selector: 'tui-calendar-year', imports: [TuiHovered, TuiRepeatTimes, TuiLet, TuiScrollIntoView], changeDetection: ChangeDetectionStrategy.OnPush, host: {
                        '[class._single]': 'isSingle',
                    }, template: "<div\n    *tuiRepeatTimes=\"let rowIndex of rows\"\n    automation-id=\"tui-calendar-year__row\"\n    class=\"t-row\"\n>\n    <ng-container *tuiRepeatTimes=\"let colIndex of 4\">\n        <div\n            *tuiLet=\"getItem(rowIndex, colIndex) as item\"\n            automation-id=\"tui-calendar-year__cell\"\n            class=\"t-cell\"\n            [attr.data-range]=\"getItemRange(item)\"\n            [class.t-cell_disabled]=\"isDisabled(item)\"\n            [class.t-cell_interval]=\"itemIsInterval(item)\"\n            [class.t-cell_today]=\"itemIsToday(item)\"\n            [tuiScrollIntoView]=\"scrollItemIntoView(item)\"\n            (click)=\"yearClick.emit(item)\"\n            (tuiHoveredChange)=\"onItemHovered($event, item)\"\n        >\n            <div class=\"t-item\">{{ item }}</div>\n        </div>\n    </ng-container>\n</div>\n", styles: [":host{display:block;font:var(--tui-font-text-m)}.t-row{position:relative;display:flex;justify-content:space-between;block-size:2.25rem;isolation:isolate}.t-item{position:relative;flex:1;line-height:2rem;border-radius:var(--tui-radius-m)}.t-item:before,.t-item:after{position:absolute;top:0;left:0;bottom:0;right:0;content:\"\";z-index:-1;border-radius:var(--tui-radius-m)}.t-item:after{border-radius:.5rem}.t-cell{position:relative;display:flex;align-items:center;justify-content:center;inline-size:3.9375rem;text-align:center;outline:none;cursor:pointer;background-clip:content-box;box-sizing:border-box;border:.125rem solid transparent}.t-cell:before{content:\"\";position:absolute;top:0;left:0;right:0;bottom:0;z-index:-1;border-radius:var(--tui-radius-m)}.t-cell_today:after{position:absolute;left:50%;transform:translate(-50%);content:\"\";bottom:.3125rem;block-size:.125rem;inline-size:.75rem;border-radius:.375rem;background:var(--tui-text-primary)}.t-cell_interval:before{background:var(--tui-background-base-alt)}:host._single .t-cell_interval:before{background:var(--tui-background-neutral-1-hover)}.t-cell_interval:not(:last-child):before{right:-.1875rem;border-start-end-radius:0;border-end-end-radius:0}.t-cell_interval:not([data-range=start]):not(:first-child):before{border-start-start-radius:0;border-end-start-radius:0}.t-cell_interval:last-child:first-child:before{right:0}.t-cell_interval:first-child>.t-item{border-start-start-radius:var(--tui-radius-m);border-end-start-radius:var(--tui-radius-m)}.t-cell_interval:last-child>.t-item{border-start-end-radius:var(--tui-radius-m);border-end-end-radius:var(--tui-radius-m)}.t-cell_interval>.t-item{border-radius:0}.t-cell[data-range]:after{background:var(--tui-text-primary-on-accent-1)}.t-cell[data-range]>.t-item{color:var(--tui-text-primary-on-accent-1)}.t-cell[data-range]>.t-item:before,.t-cell[data-range]>.t-item:after{background:var(--tui-background-accent-1)}.t-cell[data-range]:hover>.t-item:before,.t-cell[data-range]:hover>.t-item:after{background:var(--tui-background-accent-1-hover)}.t-cell[data-range]:active>.t-item:before,.t-cell[data-range]:active>.t-item:after{background:var(--tui-background-accent-1-pressed)}.t-cell[data-range=end]:before{background:var(--tui-background-base-alt)}:host._single .t-cell[data-range=end]:before{background:var(--tui-background-neutral-1-hover)}.t-cell[data-range=end]:not(:first-child):before{border-start-start-radius:0;border-end-start-radius:0}.t-cell[data-range=end]>.t-item:before{left:.625rem;border-start-start-radius:0;border-end-start-radius:0}.t-cell[data-range=end]>.t-item:after{left:-2rem;right:100%;transform:translate(1.6rem) scaleY(.83) scaleX(.5) rotate(45deg)}.t-cell[data-range=start]>.t-item:before{right:.625rem;border-start-end-radius:0;border-end-end-radius:0}.t-cell[data-range=start]>.t-item:after{left:100%;right:-2rem;transform:translate(-1.6rem) scaleY(.83) scaleX(.5) rotate(45deg)}.t-cell[data-range=single]>.t-item:after{display:none}.t-cell_disabled{pointer-events:none}.t-cell_disabled>.t-item{opacity:.36}.t-cell:hover:not([data-range])>.t-item{background:var(--tui-background-neutral-1-hover)}.t-cell:active:not([data-range])>.t-item{background:var(--tui-background-neutral-1-pressed)}:host{inline-size:15.75rem}.t-row{margin:.875rem 0}.t-row:first-child{margin-top:0}.t-row:last-child{margin-bottom:0}\n"] }]
        }], propDecorators: { value: [{
                type: Input
            }], initialItem: [{
                type: Input
            }], min: [{
                type: Input
            }], max: [{
                type: Input
            }], disabledItemHandler: [{
                type: Input
            }], yearClick: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,