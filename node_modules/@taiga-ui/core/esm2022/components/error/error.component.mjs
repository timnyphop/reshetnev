import { NgIf } from '@angular/common';
import { ChangeDetectionStrategy, Component, inject, Input } from '@angular/core';
import { toSignal } from '@angular/core/rxjs-interop';
import { TuiValidationError } from '@taiga-ui/cdk/classes';
import { tuiIsString } from '@taiga-ui/cdk/utils/miscellaneous';
import { tuiFadeIn, tuiHeightCollapse } from '@taiga-ui/core/animations';
import { TUI_ANIMATIONS_SPEED, TUI_DEFAULT_ERROR_MESSAGE } from '@taiga-ui/core/tokens';
import { tuiToAnimationOptions } from '@taiga-ui/core/utils';
import { PolymorpheusOutlet } from '@taiga-ui/polymorpheus';
import * as i0 from "@angular/core";
class TuiError {
    constructor() {
        this.options = tuiToAnimationOptions(inject(TUI_ANIMATIONS_SPEED));
        this.error = null;
        this.visible = true;
        this.default = toSignal(inject(TUI_DEFAULT_ERROR_MESSAGE));
    }
    set errorSetter(error) {
        this.error = tuiIsString(error) ? new TuiValidationError(error) : error;
    }
    onAnimation(visible) {
        this.visible = visible;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiError, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiError, isStandalone: true, selector: "tui-error", inputs: { errorSetter: ["error", "errorSetter"] }, host: { listeners: { "animationcancel.self": "onAnimation(false)", "animationstart.self": "onAnimation(true)" } }, ngImport: i0, template: "<div\n    *ngIf=\"error && visible\"\n    automation-id=\"tui-error__text\"\n    class=\"t-message-text\"\n    [@tuiFadeIn]=\"options\"\n    [@tuiHeightCollapse]=\"options\"\n>\n    <ng-container *polymorpheusOutlet=\"error.message || default() as text; context: error.context || {}\">\n        {{ text }}\n    </ng-container>\n</div>\n", styles: [":host{display:block;font:var(--tui-font-text-s);color:var(--tui-text-negative);word-wrap:break-word;animation:tuiPresent 1s infinite}.t-message-text{white-space:pre-line}.t-message-text:before{content:\"\";line-height:1.5rem;vertical-align:bottom}\n"], dependencies: [{ kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: PolymorpheusOutlet, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], animations: [tuiHeightCollapse, tuiFadeIn], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { TuiError };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiError, decorators: [{
            type: Component,
            args: [{ standalone: true, selector: 'tui-error', imports: [NgIf, PolymorpheusOutlet], changeDetection: ChangeDetectionStrategy.OnPush, animations: [tuiHeightCollapse, tuiFadeIn], host: {
                        '(animationcancel.self)': 'onAnimation(false)',
                        '(animationstart.self)': 'onAnimation(true)',
                    }, template: "<div\n    *ngIf=\"error && visible\"\n    automation-id=\"tui-error__text\"\n    class=\"t-message-text\"\n    [@tuiFadeIn]=\"options\"\n    [@tuiHeightCollapse]=\"options\"\n>\n    <ng-container *polymorpheusOutlet=\"error.message || default() as text; context: error.context || {}\">\n        {{ text }}\n    </ng-container>\n</div>\n", styles: [":host{display:block;font:var(--tui-font-text-s);color:var(--tui-text-negative);word-wrap:break-word;animation:tuiPresent 1s infinite}.t-message-text{white-space:pre-line}.t-message-text:before{content:\"\";line-height:1.5rem;vertical-align:bottom}\n"] }]
        }], propDecorators: { errorSetter: [{
                type: Input,
                args: ['error']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3IuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZS9jb21wb25lbnRzL2Vycm9yL2Vycm9yLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmUvY29tcG9uZW50cy9lcnJvci9lcnJvci50ZW1wbGF0ZS5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxJQUFJLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQUNyQyxPQUFPLEVBQUMsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDaEYsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLDRCQUE0QixDQUFDO0FBQ3BELE9BQU8sRUFBQyxrQkFBa0IsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBQ3pELE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxtQ0FBbUMsQ0FBQztBQUM5RCxPQUFPLEVBQUMsU0FBUyxFQUFFLGlCQUFpQixFQUFDLE1BQU0sMkJBQTJCLENBQUM7QUFDdkUsT0FBTyxFQUFDLG9CQUFvQixFQUFFLHlCQUF5QixFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFDdEYsT0FBTyxFQUFDLHFCQUFxQixFQUFDLE1BQU0sc0JBQXNCLENBQUM7QUFDM0QsT0FBTyxFQUFDLGtCQUFrQixFQUFDLE1BQU0sd0JBQXdCLENBQUM7O0FBRTFELE1BYWEsUUFBUTtJQWJyQjtRQWN1QixZQUFPLEdBQUcscUJBQXFCLENBQUMsTUFBTSxDQUFDLG9CQUFvQixDQUFDLENBQUMsQ0FBQztRQUN2RSxVQUFLLEdBQThCLElBQUksQ0FBQztRQUN4QyxZQUFPLEdBQUcsSUFBSSxDQUFDO1FBQ04sWUFBTyxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUMseUJBQXlCLENBQUMsQ0FBQyxDQUFDO0tBVTVFO0lBUkcsSUFDVyxXQUFXLENBQUMsS0FBeUM7UUFDNUQsSUFBSSxDQUFDLEtBQUssR0FBRyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksa0JBQWtCLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztJQUM1RSxDQUFDO0lBRVMsV0FBVyxDQUFDLE9BQWdCO1FBQ2xDLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO0lBQzNCLENBQUM7K0dBYlEsUUFBUTttR0FBUixRQUFRLDJPQ3ZCckIsa1ZBV0EsbVRERWMsSUFBSSw2RkFBRSxrQkFBa0IsZ0hBSXRCLENBQUMsaUJBQWlCLEVBQUUsU0FBUyxDQUFDOztTQU1qQyxRQUFROzRGQUFSLFFBQVE7a0JBYnBCLFNBQVM7aUNBQ00sSUFBSSxZQUNOLFdBQVcsV0FDWixDQUFDLElBQUksRUFBRSxrQkFBa0IsQ0FBQyxtQkFHbEIsdUJBQXVCLENBQUMsTUFBTSxjQUNuQyxDQUFDLGlCQUFpQixFQUFFLFNBQVMsQ0FBQyxRQUNwQzt3QkFDRix3QkFBd0IsRUFBRSxvQkFBb0I7d0JBQzlDLHVCQUF1QixFQUFFLG1CQUFtQjtxQkFDL0M7OEJBU1UsV0FBVztzQkFEckIsS0FBSzt1QkFBQyxPQUFPIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtOZ0lmfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHtDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBpbmplY3QsIElucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7dG9TaWduYWx9IGZyb20gJ0Bhbmd1bGFyL2NvcmUvcnhqcy1pbnRlcm9wJztcbmltcG9ydCB7VHVpVmFsaWRhdGlvbkVycm9yfSBmcm9tICdAdGFpZ2EtdWkvY2RrL2NsYXNzZXMnO1xuaW1wb3J0IHt0dWlJc1N0cmluZ30gZnJvbSAnQHRhaWdhLXVpL2Nkay91dGlscy9taXNjZWxsYW5lb3VzJztcbmltcG9ydCB7dHVpRmFkZUluLCB0dWlIZWlnaHRDb2xsYXBzZX0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvYW5pbWF0aW9ucyc7XG5pbXBvcnQge1RVSV9BTklNQVRJT05TX1NQRUVELCBUVUlfREVGQVVMVF9FUlJPUl9NRVNTQUdFfSBmcm9tICdAdGFpZ2EtdWkvY29yZS90b2tlbnMnO1xuaW1wb3J0IHt0dWlUb0FuaW1hdGlvbk9wdGlvbnN9IGZyb20gJ0B0YWlnYS11aS9jb3JlL3V0aWxzJztcbmltcG9ydCB7UG9seW1vcnBoZXVzT3V0bGV0fSBmcm9tICdAdGFpZ2EtdWkvcG9seW1vcnBoZXVzJztcblxuQENvbXBvbmVudCh7XG4gICAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgICBzZWxlY3RvcjogJ3R1aS1lcnJvcicsXG4gICAgaW1wb3J0czogW05nSWYsIFBvbHltb3JwaGV1c091dGxldF0sXG4gICAgdGVtcGxhdGVVcmw6ICcuL2Vycm9yLnRlbXBsYXRlLmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL2Vycm9yLnN0eWxlLmxlc3MnXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICBhbmltYXRpb25zOiBbdHVpSGVpZ2h0Q29sbGFwc2UsIHR1aUZhZGVJbl0sXG4gICAgaG9zdDoge1xuICAgICAgICAnKGFuaW1hdGlvbmNhbmNlbC5zZWxmKSc6ICdvbkFuaW1hdGlvbihmYWxzZSknLFxuICAgICAgICAnKGFuaW1hdGlvbnN0YXJ0LnNlbGYpJzogJ29uQW5pbWF0aW9uKHRydWUpJyxcbiAgICB9LFxufSlcbmV4cG9ydCBjbGFzcyBUdWlFcnJvciB7XG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IG9wdGlvbnMgPSB0dWlUb0FuaW1hdGlvbk9wdGlvbnMoaW5qZWN0KFRVSV9BTklNQVRJT05TX1NQRUVEKSk7XG4gICAgcHJvdGVjdGVkIGVycm9yOiBUdWlWYWxpZGF0aW9uRXJyb3IgfCBudWxsID0gbnVsbDtcbiAgICBwcm90ZWN0ZWQgdmlzaWJsZSA9IHRydWU7XG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IGRlZmF1bHQgPSB0b1NpZ25hbChpbmplY3QoVFVJX0RFRkFVTFRfRVJST1JfTUVTU0FHRSkpO1xuXG4gICAgQElucHV0KCdlcnJvcicpXG4gICAgcHVibGljIHNldCBlcnJvclNldHRlcihlcnJvcjogVHVpVmFsaWRhdGlvbkVycm9yIHwgc3RyaW5nIHwgbnVsbCkge1xuICAgICAgICB0aGlzLmVycm9yID0gdHVpSXNTdHJpbmcoZXJyb3IpID8gbmV3IFR1aVZhbGlkYXRpb25FcnJvcihlcnJvcikgOiBlcnJvcjtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgb25BbmltYXRpb24odmlzaWJsZTogYm9vbGVhbik6IHZvaWQge1xuICAgICAgICB0aGlzLnZpc2libGUgPSB2aXNpYmxlO1xuICAgIH1cbn1cbiIsIjxkaXZcbiAgICAqbmdJZj1cImVycm9yICYmIHZpc2libGVcIlxuICAgIGF1dG9tYXRpb24taWQ9XCJ0dWktZXJyb3JfX3RleHRcIlxuICAgIGNsYXNzPVwidC1tZXNzYWdlLXRleHRcIlxuICAgIFtAdHVpRmFkZUluXT1cIm9wdGlvbnNcIlxuICAgIFtAdHVpSGVpZ2h0Q29sbGFwc2VdPVwib3B0aW9uc1wiXG4+XG4gICAgPG5nLWNvbnRhaW5lciAqcG9seW1vcnBoZXVzT3V0bGV0PVwiZXJyb3IubWVzc2FnZSB8fCBkZWZhdWx0KCkgYXMgdGV4dDsgY29udGV4dDogZXJyb3IuY29udGV4dCB8fCB7fVwiPlxuICAgICAgICB7eyB0ZXh0IH19XG4gICAgPC9uZy1jb250YWluZXI+XG48L2Rpdj5cbiJdfQ==