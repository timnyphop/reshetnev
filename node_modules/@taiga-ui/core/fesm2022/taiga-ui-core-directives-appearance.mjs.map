{"version":3,"file":"taiga-ui-core-directives-appearance.mjs","sources":["../../../projects/core/directives/appearance/appearance.options.ts","../../../projects/core/directives/appearance/appearance.directive.ts","../../../projects/core/directives/appearance/appearance.bindings.ts","../../../projects/core/directives/appearance/with-appearance.ts","../../../projects/core/directives/appearance/taiga-ui-core-directives-appearance.ts"],"sourcesContent":["import type {ExistingProvider, ProviderToken} from '@angular/core';\nimport {tuiCreateToken, tuiProvide} from '@taiga-ui/cdk/utils/miscellaneous';\n\n/**\n * Bundled appearances for autocomplete purposes, not exported on purpose\n */\ntype Appearance =\n    | 'accent'\n    | 'destructive'\n    | 'error'\n    | 'flat'\n    | 'floating'\n    | 'glass'\n    | 'info'\n    | 'link'\n    | 'neutral'\n    | 'opposite'\n    | 'outline'\n    | 'primary'\n    | 'secondary'\n    | 'success'\n    | 'textfield'\n    | 'warning'\n    | 'whiteblock'\n    | (Record<never, never> & string);\n\nexport interface TuiAppearanceOptions {\n    readonly appearance: Appearance;\n}\n\nexport const TUI_APPEARANCE_DEFAULT_OPTIONS: TuiAppearanceOptions = {\n    appearance: '',\n};\n\nexport const TUI_APPEARANCE_OPTIONS = tuiCreateToken(TUI_APPEARANCE_DEFAULT_OPTIONS);\n\nexport function tuiAppearanceOptionsProvider(\n    token: ProviderToken<TuiAppearanceOptions>,\n): ExistingProvider {\n    return tuiProvide(TUI_APPEARANCE_OPTIONS, token);\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    computed,\n    Directive,\n    inject,\n    Input,\n    signal,\n    ViewEncapsulation,\n} from '@angular/core';\nimport {tuiIsString, tuiWithStyles} from '@taiga-ui/cdk/utils/miscellaneous';\nimport type {TuiInteractiveState} from '@taiga-ui/core/types';\n\nimport {TUI_APPEARANCE_OPTIONS, type TuiAppearanceOptions} from './appearance.options';\n\n@Component({\n    standalone: true,\n    template: '',\n    styles: ['@import \"@taiga-ui/core/styles/components/appearance.less\";'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        class: 'tui-appearance',\n    },\n})\nclass TuiAppearanceStyles {}\n\n@Directive({\n    standalone: true,\n    selector: '[tuiAppearance]',\n    host: {\n        tuiAppearance: '',\n        '[attr.data-appearance]': 'appearance()',\n        '[attr.data-state]': 'state()',\n        '[attr.data-focus]': 'focus()',\n        '[attr.data-mode]': 'modes()',\n    },\n})\nexport class TuiAppearance {\n    protected readonly nothing = tuiWithStyles(TuiAppearanceStyles);\n    protected readonly modes = computed((mode = this.mode()) =>\n        !mode || tuiIsString(mode) ? mode : mode.join(' '),\n    );\n\n    // TODO: refactor to signal inputs after Angular update\n    public readonly appearance = signal(inject(TUI_APPEARANCE_OPTIONS).appearance);\n    public readonly state = signal<TuiInteractiveState | null>(null);\n    public readonly focus = signal<boolean | null>(null);\n    public readonly mode = signal<string | readonly string[] | null>(null);\n\n    @Input()\n    public set tuiAppearance(appearance: TuiAppearanceOptions['appearance']) {\n        this.appearance.set(appearance);\n    }\n\n    @Input()\n    public set tuiAppearanceState(state: TuiInteractiveState | null) {\n        this.state.set(state);\n    }\n\n    @Input()\n    public set tuiAppearanceFocus(focus: boolean | null) {\n        this.focus.set(focus);\n    }\n\n    @Input()\n    public set tuiAppearanceMode(mode: string | readonly string[] | null) {\n        this.mode.set(mode);\n    }\n}\n","import type {Signal, WritableSignal} from '@angular/core';\nimport {tuiDirectiveBinding} from '@taiga-ui/cdk/utils/miscellaneous';\nimport type {TuiInteractiveState} from '@taiga-ui/core/types';\n\nimport {TuiAppearance} from './appearance.directive';\n\ntype A = string;\n\ntype S = TuiInteractiveState | null;\n\ntype F = boolean | null;\n\ntype M = string | readonly string[] | null;\n\nexport function tuiAppearance(value: A | WritableSignal<A>): WritableSignal<A>;\nexport function tuiAppearance(value: Signal<A>): Signal<A>;\nexport function tuiAppearance(value: A | Signal<A>): Signal<A> {\n    return tuiDirectiveBinding(TuiAppearance, 'appearance', value);\n}\n\nexport function tuiAppearanceState(value: S | WritableSignal<S>): WritableSignal<S>;\nexport function tuiAppearanceState(value: Signal<S>): Signal<S>;\nexport function tuiAppearanceState(value: S | Signal<S>): Signal<S> {\n    return tuiDirectiveBinding(TuiAppearance, 'state', value);\n}\n\nexport function tuiAppearanceFocus(value: F | WritableSignal<F>): WritableSignal<F>;\nexport function tuiAppearanceFocus(value: Signal<F>): Signal<F>;\nexport function tuiAppearanceFocus(value: F | Signal<F>): Signal<F> {\n    return tuiDirectiveBinding(TuiAppearance, 'focus', value);\n}\n\nexport function tuiAppearanceMode(value: M | WritableSignal<M>): WritableSignal<M>;\nexport function tuiAppearanceMode(value: Signal<M>): Signal<M>;\nexport function tuiAppearanceMode(value: M | Signal<M>): Signal<M> {\n    return tuiDirectiveBinding(TuiAppearance, 'mode', value);\n}\n","import {Directive} from '@angular/core';\n\nimport {TuiAppearance} from './appearance.directive';\n\n@Directive({\n    standalone: true,\n    hostDirectives: [\n        {\n            directive: TuiAppearance,\n            inputs: [\n                'tuiAppearance: appearance',\n                'tuiAppearanceState',\n                'tuiAppearanceFocus',\n                'tuiAppearanceMode',\n            ],\n        },\n    ],\n})\nexport class TuiWithAppearance {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1.TuiAppearance"],"mappings":"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"}