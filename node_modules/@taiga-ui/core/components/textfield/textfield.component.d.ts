import { ElementRef, ViewContainerRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import type { TuiContext, TuiStringHandler } from '@taiga-ui/cdk/types';
import type { TuiDataListHost } from '@taiga-ui/core/components/data-list';
import type { TuiSizeL, TuiSizeS } from '@taiga-ui/core/types';
import type { PolymorpheusContent } from '@taiga-ui/polymorpheus';
import { TuiTextfieldDirective } from './textfield.directive';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/cdk/directives/native-validator";
import * as i2 from "@taiga-ui/core/directives/dropdown";
import * as i3 from "./textfield-dropdown.directive";
import * as i4 from "@taiga-ui/core/directives/icons";
export declare class TuiTextfieldComponent<T> implements TuiDataListHost<T> {
    private readonly open;
    private readonly focusedIn;
    protected readonly directive?: TuiTextfieldDirective;
    protected readonly label?: ElementRef<HTMLElement>;
    protected readonly control?: NgControl;
    protected side: number;
    protected readonly options: import("./textfield.options").TuiTextfieldOptions;
    protected readonly icons: import("@taiga-ui/core/tokens").TuiCommonIcons;
    readonly vcr?: ViewContainerRef;
    readonly el?: ElementRef<HTMLInputElement>;
    filler: string;
    stringify: TuiStringHandler<T>;
    content: PolymorpheusContent<TuiContext<T>>;
    readonly focused: import("@angular/core").Signal<boolean>;
    get id(): string;
    get size(): TuiSizeL | TuiSizeS;
    handleOption(option: T): void;
    protected get computedFiller(): string;
    protected get showFiller(): boolean;
    protected get hasLabel(): boolean;
    protected onResize(entry: readonly ResizeObserverEntry[]): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiTextfieldComponent<any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiTextfieldComponent<any>, "tui-textfield", never, { "filler": { "alias": "filler"; "required": false; }; "stringify": { "alias": "stringify"; "required": false; }; "content": { "alias": "content"; "required": false; }; }, {}, ["directive", "label", "control", "el"], ["input", "select", "label", "*", "tui-icon"], true, [{ directive: typeof i1.TuiNativeValidator; inputs: {}; outputs: {}; }, { directive: typeof i2.TuiDropdownDirective; inputs: {}; outputs: {}; }, { directive: typeof i2.TuiWithDropdownOpen; inputs: {}; outputs: {}; }, { directive: typeof i3.TuiWithTextfieldDropdown; inputs: {}; outputs: {}; }, { directive: typeof i4.TuiWithIcons; inputs: {}; outputs: {}; }]>;
}
