{"version":3,"file":"taiga-ui-cdk-directives-focus-trap.mjs","sources":["../../../projects/cdk/directives/focus-trap/focus-trap.directive.ts","../../../projects/cdk/directives/focus-trap/taiga-ui-cdk-directives-focus-trap.ts"],"sourcesContent":["import {DOCUMENT} from '@angular/common';\nimport type {OnDestroy} from '@angular/core';\nimport {Directive, inject} from '@angular/core';\nimport {\n    tuiContainsOrAfter,\n    tuiInjectElement,\n    tuiIsHTMLElement,\n} from '@taiga-ui/cdk/utils/dom';\nimport {\n    tuiBlurNativeFocused,\n    tuiGetClosestFocusable,\n    tuiGetNativeFocused,\n} from '@taiga-ui/cdk/utils/focus';\n\n@Directive({\n    standalone: true,\n    selector: '[tuiFocusTrap]',\n    host: {\n        tabIndex: '0',\n        '(window:focusin.silent)': 'onFocusIn($event.target)',\n    },\n})\nexport class TuiFocusTrap implements OnDestroy {\n    private readonly doc = inject(DOCUMENT);\n    private readonly el = tuiInjectElement();\n    private readonly activeElement = tuiGetNativeFocused(this.doc);\n\n    constructor() {\n        /**\n         * This would cause currently focused element to lose focus,\n         * but it might cause ExpressionChanged error due to potential HostBinding.\n         * Microtask keeps it in the same frame but allows change detection to run\n         */\n        void Promise.resolve().then(() => this.el.focus());\n    }\n\n    public ngOnDestroy(): void {\n        tuiBlurNativeFocused(this.doc);\n\n        /**\n         * HostListeners are triggered even after ngOnDestroy\n         * {@link https://github.com/angular/angular/issues/38100}\n         * so we need to delay it but stay in the same sync cycle,\n         * therefore using Promise instead of setTimeout\n         */\n        // eslint-disable-next-line\n        Promise.resolve().then(() => {\n            if (tuiIsHTMLElement(this.activeElement)) {\n                this.activeElement.focus();\n            }\n        });\n    }\n\n    protected onFocusIn(node: Node): void {\n        if (!tuiContainsOrAfter(this.el, node)) {\n            tuiGetClosestFocusable({\n                initial: this.el,\n                root: this.el,\n            })?.focus();\n        }\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;AAcA,MAQa,YAAY,CAAA;AAKrB,IAAA,WAAA,GAAA;AAJiB,QAAA,IAAA,CAAA,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;QACvB,IAAE,CAAA,EAAA,GAAG,gBAAgB,EAAE,CAAC;AACxB,QAAA,IAAA,CAAA,aAAa,GAAG,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAG3D;;;;AAIG;AACH,QAAA,KAAK,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;KACtD;IAEM,WAAW,GAAA;AACd,QAAA,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAE/B;;;;;AAKG;;AAEH,QAAA,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,MAAK;AACxB,YAAA,IAAI,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;AACtC,gBAAA,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AAC9B,aAAA;AACL,SAAC,CAAC,CAAC;KACN;AAES,IAAA,SAAS,CAAC,IAAU,EAAA;QAC1B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE;AACpC,YAAA,sBAAsB,CAAC;gBACnB,OAAO,EAAE,IAAI,CAAC,EAAE;gBAChB,IAAI,EAAE,IAAI,CAAC,EAAE;aAChB,CAAC,EAAE,KAAK,EAAE,CAAC;AACf,SAAA;KACJ;+GAtCQ,YAAY,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;mGAAZ,YAAY,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,UAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,EAAA,uBAAA,EAAA,0BAAA,EAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA;;4FAAZ,YAAY,EAAA,UAAA,EAAA,CAAA;kBARxB,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,QAAQ,EAAE,gBAAgB;AAC1B,oBAAA,IAAI,EAAE;AACF,wBAAA,QAAQ,EAAE,GAAG;AACb,wBAAA,yBAAyB,EAAE,0BAA0B;AACxD,qBAAA;AACJ,iBAAA,CAAA;;;ACrBD;;AAEG;;;;"}