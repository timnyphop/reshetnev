{"version":3,"file":"taiga-ui-event-plugins.mjs","sources":["../../../projects/ng-event-plugins/src/plugins/abstract.plugin.ts","../../../projects/ng-event-plugins/src/plugins/global.plugin.ts","../../../projects/ng-event-plugins/src/plugins/options.plugin.ts","../../../projects/ng-event-plugins/src/plugins/prevent.plugin.ts","../../../projects/ng-event-plugins/src/plugins/resize.plugin.ts","../../../projects/ng-event-plugins/src/plugins/self.plugin.ts","../../../projects/ng-event-plugins/src/plugins/silent.plugin.ts","../../../projects/ng-event-plugins/src/plugins/stop.plugin.ts","../../../projects/ng-event-plugins/src/constants/plugins.ts","../../../projects/ng-event-plugins/src/decorators/should-call.ts","../../../projects/ng-event-plugins/src/utils/as-callable.ts","../../../projects/ng-event-plugins/src/taiga-ui-event-plugins.ts"],"sourcesContent":["import type {EventManager} from '@angular/platform-browser';\n\n// TODO: Type is exposed since Angular 17, remove when updated\ntype EventManagerArg = ConstructorParameters<typeof EventManager>[0][0];\n\ntype EventManagerPlugin = {\n    [K in keyof EventManagerArg]: EventManagerArg[K];\n};\n\nexport abstract class AbstractEventPlugin implements EventManagerPlugin {\n    protected abstract readonly modifier: string;\n\n    public manager!: EventManager;\n\n    public abstract addEventListener(\n        element: HTMLElement,\n        event: string,\n        handler: Function,\n    ): Function;\n\n    public supports(event: string): boolean {\n        return event.includes(this.modifier);\n    }\n\n    protected unwrap(event: string): string {\n        return event\n            .split('.')\n            .filter((v) => !this.modifier.includes(v))\n            .join('.');\n    }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {inject, Injectable, InjectionToken} from '@angular/core';\n\nimport {AbstractEventPlugin} from './abstract.plugin';\n\nexport const GLOBAL_HANDLER = new InjectionToken<(name: string) => EventTarget>(\n    '[GLOBAL_HANDLER]: Global event target handler',\n    {\n        factory: () => {\n            const document = inject(DOCUMENT);\n\n            return (name) =>\n                name === 'body'\n                    ? document.body\n                    : (document.defaultView as any)[name] ||\n                      document.createElement('div');\n        },\n    },\n);\n\n@Injectable()\nexport class GlobalEventPlugin extends AbstractEventPlugin {\n    private readonly handler: Function = inject(GLOBAL_HANDLER);\n    protected readonly modifier = '>';\n\n    public addEventListener(_: HTMLElement, event: string, handler: Function): Function {\n        return this.manager.addEventListener(\n            this.handler(event.split('>')[0]),\n            event.split('>')?.[1] ?? '',\n            handler,\n        );\n    }\n}\n","import {Injectable} from '@angular/core';\n\nimport {AbstractEventPlugin} from './abstract.plugin';\n\n@Injectable()\nexport class OptionsEventPlugin extends AbstractEventPlugin {\n    protected readonly modifier = 'capture.once.passive';\n\n    public override supports(event: string): boolean {\n        return event.includes('.') && !this.unwrap(event).includes('.');\n    }\n\n    public addEventListener(\n        element: HTMLElement,\n        event: string,\n        handler: EventListener,\n    ): Function {\n        element.addEventListener(this.unwrap(event), handler, {\n            once: event.includes('.once'),\n            passive: event.includes('.passive'),\n            capture: event.includes('.capture'),\n        });\n\n        return () =>\n            element.removeEventListener(\n                this.unwrap(event),\n                handler,\n                event.includes('.capture'),\n            );\n    }\n}\n","import {Injectable} from '@angular/core';\n\nimport {AbstractEventPlugin} from './abstract.plugin';\n\n@Injectable()\nexport class PreventEventPlugin extends AbstractEventPlugin {\n    protected readonly modifier = '.prevent';\n\n    public addEventListener(\n        element: HTMLElement,\n        event: string,\n        handler: Function,\n    ): Function {\n        return this.manager.addEventListener(\n            element,\n            this.unwrap(event),\n            (event: Event): void => {\n                event.preventDefault();\n                handler(event);\n            },\n        );\n    }\n}\n","import {Injectable} from '@angular/core';\n\nimport {AbstractEventPlugin} from './abstract.plugin';\n\n@Injectable()\nexport class ResizePlugin extends AbstractEventPlugin {\n    public readonly modifier = 'resize';\n\n    public override supports(event: string): boolean {\n        return event === 'resize';\n    }\n\n    public addEventListener(\n        element: HTMLElement,\n        _: string,\n        handler: Function,\n    ): Function {\n        if (typeof ResizeObserver === 'undefined' || !(element instanceof Element)) {\n            return () => {};\n        }\n\n        const observer = new ResizeObserver((e) =>\n            this.manager.getZone().run(() => handler(e)),\n        );\n\n        observer.observe(element);\n\n        return () => observer.disconnect();\n    }\n}\n","import {Injectable} from '@angular/core';\n\nimport {AbstractEventPlugin} from './abstract.plugin';\n\n@Injectable()\nexport class SelfEventPlugin extends AbstractEventPlugin {\n    protected readonly modifier = '.self';\n\n    public addEventListener(\n        element: HTMLElement,\n        event: string,\n        handler: Function,\n    ): Function {\n        return this.manager.addEventListener(\n            element,\n            this.unwrap(event),\n            (event: Event) => {\n                if (event.target === event.currentTarget) {\n                    handler(event);\n                }\n            },\n        );\n    }\n}\n","import type {NgZone} from '@angular/core';\nimport {Injectable} from '@angular/core';\n\nimport {AbstractEventPlugin} from './abstract.plugin';\n\n@Injectable()\nexport class SilentEventPlugin extends AbstractEventPlugin {\n    public static ngZone?: NgZone;\n\n    public readonly modifier = '.silent';\n\n    public addEventListener(\n        element: HTMLElement,\n        event: string,\n        handler: Function,\n    ): Function {\n        SilentEventPlugin.ngZone = this.manager.getZone();\n\n        return SilentEventPlugin.ngZone.runOutsideAngular(() =>\n            this.manager.addEventListener(element, this.unwrap(event), handler),\n        );\n    }\n}\n","import {Injectable} from '@angular/core';\n\nimport {AbstractEventPlugin} from './abstract.plugin';\n\n@Injectable()\nexport class StopEventPlugin extends AbstractEventPlugin {\n    protected readonly modifier = '.stop';\n\n    public addEventListener(\n        element: HTMLElement,\n        event: string,\n        handler: Function,\n    ): Function {\n        return this.manager.addEventListener(\n            element,\n            this.unwrap(event),\n            (event: Event): void => {\n                event.stopPropagation();\n                handler(event);\n            },\n        );\n    }\n}\n","import type {Provider} from '@angular/core';\nimport {EVENT_MANAGER_PLUGINS} from '@angular/platform-browser';\n\nimport {GlobalEventPlugin} from '../plugins/global.plugin';\nimport {OptionsEventPlugin} from '../plugins/options.plugin';\nimport {PreventEventPlugin} from '../plugins/prevent.plugin';\nimport {ResizePlugin} from '../plugins/resize.plugin';\nimport {SelfEventPlugin} from '../plugins/self.plugin';\nimport {SilentEventPlugin} from '../plugins/silent.plugin';\nimport {StopEventPlugin} from '../plugins/stop.plugin';\n\nconst PLUGINS = [\n    SilentEventPlugin,\n    GlobalEventPlugin,\n    OptionsEventPlugin,\n    PreventEventPlugin,\n    ResizePlugin,\n    SelfEventPlugin,\n    StopEventPlugin,\n];\n\nexport const NG_EVENT_PLUGINS: Provider[] = PLUGINS.map((useClass) => ({\n    provide: EVENT_MANAGER_PLUGINS,\n    multi: true,\n    useClass,\n}));\n","import {SilentEventPlugin} from '../plugins/silent.plugin';\n\nexport type Predicate<T> = (this: T, ...args: any[]) => boolean;\n\nexport function shouldCall<T>(predicate: Predicate<T>): MethodDecorator {\n    return (_target, _key, desc: PropertyDescriptor) => {\n        const {value} = desc;\n\n        desc.value = function (this: T, ...args: any[]) {\n            if (!predicate.apply(this, args)) {\n                return;\n            }\n\n            if (SilentEventPlugin.ngZone) {\n                SilentEventPlugin.ngZone.run(() => value.apply(this, args));\n            } else {\n                value.apply(this, args);\n            }\n        };\n    };\n}\n","export function asCallable<T>(a: T): Function & T {\n    return a as any;\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}