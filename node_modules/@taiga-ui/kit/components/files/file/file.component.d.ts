import { EventEmitter } from '@angular/core';
import type { SafeValue } from '@angular/platform-browser';
import type { TuiContext } from '@taiga-ui/cdk/types';
import type { TuiSizeL } from '@taiga-ui/core/types';
import type { PolymorpheusContent } from '@taiga-ui/polymorpheus';
import type { Observable } from 'rxjs';
import type { TuiFileLike, TuiFileState } from '../files.types';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/core/directives/appearance";
export declare class TuiFile {
    private readonly sanitizer;
    private readonly options;
    private readonly units$;
    private readonly win;
    protected readonly icons: import("@taiga-ui/core/tokens").TuiCommonIcons;
    protected readonly fileTexts$: Observable<{
        loadingError: string;
        preview: string;
        remove: string;
    }>;
    file: TuiFileLike;
    state: TuiFileState;
    size: TuiSizeL;
    showDelete: boolean | 'always';
    showSize: boolean;
    leftContent: PolymorpheusContent;
    readonly remove: EventEmitter<void>;
    protected get preview(): SafeValue;
    protected get isBig(): boolean;
    protected get isLoading(): boolean;
    protected get isError(): boolean;
    protected get isDeleted(): boolean;
    protected get allowDelete(): boolean;
    protected get icon(): PolymorpheusContent<TuiContext<TuiSizeL>>;
    protected get name(): string;
    protected get type(): string;
    protected get content$(): Observable<PolymorpheusContent>;
    protected get fileSize$(): Observable<string | null>;
    private calculateContent$;
    private calculateFileSize$;
    private createPreview;
    private getName;
    private getType;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiFile, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiFile, "tui-file,a[tuiFile],button[tuiFile]", never, { "file": { "alias": "file"; "required": false; }; "state": { "alias": "state"; "required": false; }; "size": { "alias": "size"; "required": false; }; "showDelete": { "alias": "showDelete"; "required": false; }; "showSize": { "alias": "showSize"; "required": false; }; "leftContent": { "alias": "leftContent"; "required": false; }; }, { "remove": "remove"; }, never, ["*"], true, [{ directive: typeof i1.TuiAppearance; inputs: {}; outputs: {}; }]>;
}
