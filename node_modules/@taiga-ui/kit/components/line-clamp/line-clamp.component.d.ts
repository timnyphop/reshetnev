import type { AfterViewInit, DoCheck } from '@angular/core';
import type { PolymorpheusContent } from '@taiga-ui/polymorpheus';
import type { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class TuiLineClamp implements DoCheck, AfterViewInit {
    private readonly outlet?;
    private readonly options;
    private readonly el;
    private readonly renderer;
    private readonly cd;
    private readonly zone;
    private readonly linesLimit$;
    private readonly isOverflown$;
    private initialized;
    protected lineClamp$: Observable<number>;
    lineHeight: number;
    content: PolymorpheusContent;
    readonly overflownChange: Observable<boolean>;
    constructor();
    set linesLimit(linesLimit: number);
    ngDoCheck(): void;
    ngAfterViewInit(): void;
    protected get overflown(): boolean;
    protected get computedContent(): PolymorpheusContent;
    protected updateView(): void;
    private skipInitialTransition;
    private update;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiLineClamp, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiLineClamp, "tui-line-clamp", never, { "lineHeight": { "alias": "lineHeight"; "required": false; }; "content": { "alias": "content"; "required": false; }; "linesLimit": { "alias": "linesLimit"; "required": false; }; }, { "overflownChange": "overflownChange"; }, never, never, true, never>;
}
