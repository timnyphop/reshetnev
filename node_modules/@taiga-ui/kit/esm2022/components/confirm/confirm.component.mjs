import { CommonModule } from '@angular/common';
import { ChangeDetectionStrategy, Component, inject } from '@angular/core';
import { TuiAutoFocus } from '@taiga-ui/cdk/directives/auto-focus';
import { TUI_IS_MOBILE } from '@taiga-ui/cdk/tokens';
import { TuiButton } from '@taiga-ui/core/components/button';
import { TUI_CONFIRM_WORDS } from '@taiga-ui/kit/tokens';
import { injectContext } from '@taiga-ui/polymorpheus';
import { PolymorpheusComponent, PolymorpheusOutlet, PolymorpheusTemplate, } from '@taiga-ui/polymorpheus';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
class TuiConfirm {
    constructor() {
        this.isMobile = inject(TUI_IS_MOBILE);
        this.words$ = inject(TUI_CONFIRM_WORDS);
        this.context = injectContext();
    }
    get appearance() {
        return this.isMobile ? 'secondary' : 'flat';
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiConfirm, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiConfirm, isStandalone: true, selector: "tui-confirm", ngImport: i0, template: "<div\n    *polymorpheusOutlet=\"context.data?.content as text\"\n    class=\"t-content\"\n    [innerHTML]=\"text\"\n></div>\n<div\n    *ngIf=\"words$ | async as words\"\n    class=\"t-buttons\"\n>\n    <button\n        size=\"m\"\n        tuiButton\n        type=\"button\"\n        class=\"t-button\"\n        [appearance]=\"appearance\"\n        (click)=\"context.completeWith(false)\"\n    >\n        {{ context.data?.no || words.no }}\n    </button>\n    <button\n        size=\"m\"\n        tuiAutoFocus\n        tuiButton\n        type=\"button\"\n        class=\"t-button\"\n        [appearance]=\"context.data?.appearance || 'primary'\"\n        (click)=\"context.completeWith(true)\"\n    >\n        {{ context.data?.yes || words.yes }}\n    </button>\n</div>\n", styles: [".t-content:not(:empty){margin-bottom:.875rem}.t-buttons{display:flex;justify-content:flex-end;flex-wrap:wrap-reverse;margin:.375rem -.375rem -.375rem}.t-button{margin:.375rem;white-space:nowrap}:host-context(tui-root._mobile) .t-button{flex:1;overflow:visible}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "pipe", type: i1.AsyncPipe, name: "async" }, { kind: "directive", type: PolymorpheusOutlet, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { kind: "directive", type: TuiAutoFocus, selector: "[tuiAutoFocus]", inputs: ["tuiAutoFocus"] }, { kind: "directive", type: TuiButton, selector: "a[tuiButton],button[tuiButton],a[tuiIconButton],button[tuiIconButton]", inputs: ["size"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { TuiConfirm };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiConfirm, decorators: [{
            type: Component,
            args: [{ standalone: true, selector: 'tui-confirm', imports: [
                        CommonModule,
                        PolymorpheusOutlet,
                        PolymorpheusTemplate,
                        TuiAutoFocus,
                        TuiButton,
                    ], changeDetection: ChangeDetectionStrategy.OnPush, template: "<div\n    *polymorpheusOutlet=\"context.data?.content as text\"\n    class=\"t-content\"\n    [innerHTML]=\"text\"\n></div>\n<div\n    *ngIf=\"words$ | async as words\"\n    class=\"t-buttons\"\n>\n    <button\n        size=\"m\"\n        tuiButton\n        type=\"button\"\n        class=\"t-button\"\n        [appearance]=\"appearance\"\n        (click)=\"context.completeWith(false)\"\n    >\n        {{ context.data?.no || words.no }}\n    </button>\n    <button\n        size=\"m\"\n        tuiAutoFocus\n        tuiButton\n        type=\"button\"\n        class=\"t-button\"\n        [appearance]=\"context.data?.appearance || 'primary'\"\n        (click)=\"context.completeWith(true)\"\n    >\n        {{ context.data?.yes || words.yes }}\n    </button>\n</div>\n", styles: [".t-content:not(:empty){margin-bottom:.875rem}.t-buttons{display:flex;justify-content:flex-end;flex-wrap:wrap-reverse;margin:.375rem -.375rem -.375rem}.t-button{margin:.375rem;white-space:nowrap}:host-context(tui-root._mobile) .t-button{flex:1;overflow:visible}\n"] }]
        }] });
export const TUI_CONFIRM = new PolymorpheusComponent(TuiConfirm);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlybS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9raXQvY29tcG9uZW50cy9jb25maXJtL2NvbmZpcm0uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMva2l0L2NvbXBvbmVudHMvY29uZmlybS9jb25maXJtLnRlbXBsYXRlLmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBQyx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3pFLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxxQ0FBcUMsQ0FBQztBQUNqRSxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sc0JBQXNCLENBQUM7QUFDbkQsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLGtDQUFrQyxDQUFDO0FBRTNELE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBQ3ZELE9BQU8sRUFBQyxhQUFhLEVBQTJCLE1BQU0sd0JBQXdCLENBQUM7QUFDL0UsT0FBTyxFQUNILHFCQUFxQixFQUNyQixrQkFBa0IsRUFDbEIsb0JBQW9CLEdBQ3ZCLE1BQU0sd0JBQXdCLENBQUM7OztBQVNoQyxNQWNhLFVBQVU7SUFkdkI7UUFlcUIsYUFBUSxHQUFHLE1BQU0sQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUMvQixXQUFNLEdBQUcsTUFBTSxDQUFDLGlCQUFpQixDQUFDLENBQUM7UUFFbkMsWUFBTyxHQUN0QixhQUFhLEVBQXlELENBQUM7S0FLOUU7SUFIRyxJQUFjLFVBQVU7UUFDcEIsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQztJQUNoRCxDQUFDOytHQVRRLFVBQVU7bUdBQVYsVUFBVSx1RUNuQ3ZCLG93QkErQkEsK1RETlEsWUFBWSx3TEFDWixrQkFBa0IsOEhBRWxCLFlBQVkscUZBQ1osU0FBUzs7U0FNSixVQUFVOzRGQUFWLFVBQVU7a0JBZHRCLFNBQVM7aUNBQ00sSUFBSSxZQUNOLGFBQWEsV0FDZDt3QkFDTCxZQUFZO3dCQUNaLGtCQUFrQjt3QkFDbEIsb0JBQW9CO3dCQUNwQixZQUFZO3dCQUNaLFNBQVM7cUJBQ1osbUJBR2dCLHVCQUF1QixDQUFDLE1BQU07O0FBY25ELE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxJQUFJLHFCQUFxQixDQUFDLFVBQVUsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21tb25Nb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQge0NoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIGluamVjdH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1R1aUF1dG9Gb2N1c30gZnJvbSAnQHRhaWdhLXVpL2Nkay9kaXJlY3RpdmVzL2F1dG8tZm9jdXMnO1xuaW1wb3J0IHtUVUlfSVNfTU9CSUxFfSBmcm9tICdAdGFpZ2EtdWkvY2RrL3Rva2Vucyc7XG5pbXBvcnQge1R1aUJ1dHRvbn0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvY29tcG9uZW50cy9idXR0b24nO1xuaW1wb3J0IHR5cGUge1R1aURpYWxvZ0NvbnRleHR9IGZyb20gJ0B0YWlnYS11aS9jb3JlL2NvbXBvbmVudHMvZGlhbG9nJztcbmltcG9ydCB7VFVJX0NPTkZJUk1fV09SRFN9IGZyb20gJ0B0YWlnYS11aS9raXQvdG9rZW5zJztcbmltcG9ydCB7aW5qZWN0Q29udGV4dCwgdHlwZSBQb2x5bW9ycGhldXNDb250ZW50fSBmcm9tICdAdGFpZ2EtdWkvcG9seW1vcnBoZXVzJztcbmltcG9ydCB7XG4gICAgUG9seW1vcnBoZXVzQ29tcG9uZW50LFxuICAgIFBvbHltb3JwaGV1c091dGxldCxcbiAgICBQb2x5bW9ycGhldXNUZW1wbGF0ZSxcbn0gZnJvbSAnQHRhaWdhLXVpL3BvbHltb3JwaGV1cyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVHVpQ29uZmlybURhdGEge1xuICAgIHJlYWRvbmx5IGNvbnRlbnQ/OiBQb2x5bW9ycGhldXNDb250ZW50O1xuICAgIHJlYWRvbmx5IG5vPzogc3RyaW5nO1xuICAgIHJlYWRvbmx5IHllcz86IHN0cmluZztcbiAgICByZWFkb25seSBhcHBlYXJhbmNlPzogc3RyaW5nO1xufVxuXG5AQ29tcG9uZW50KHtcbiAgICBzdGFuZGFsb25lOiB0cnVlLFxuICAgIHNlbGVjdG9yOiAndHVpLWNvbmZpcm0nLFxuICAgIGltcG9ydHM6IFtcbiAgICAgICAgQ29tbW9uTW9kdWxlLFxuICAgICAgICBQb2x5bW9ycGhldXNPdXRsZXQsXG4gICAgICAgIFBvbHltb3JwaGV1c1RlbXBsYXRlLFxuICAgICAgICBUdWlBdXRvRm9jdXMsXG4gICAgICAgIFR1aUJ1dHRvbixcbiAgICBdLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9jb25maXJtLnRlbXBsYXRlLmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL2NvbmZpcm0uc3R5bGUubGVzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlDb25maXJtIHtcbiAgICBwcml2YXRlIHJlYWRvbmx5IGlzTW9iaWxlID0gaW5qZWN0KFRVSV9JU19NT0JJTEUpO1xuICAgIHByb3RlY3RlZCByZWFkb25seSB3b3JkcyQgPSBpbmplY3QoVFVJX0NPTkZJUk1fV09SRFMpO1xuXG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IGNvbnRleHQgPVxuICAgICAgICBpbmplY3RDb250ZXh0PFR1aURpYWxvZ0NvbnRleHQ8Ym9vbGVhbiwgVHVpQ29uZmlybURhdGEgfCB1bmRlZmluZWQ+PigpO1xuXG4gICAgcHJvdGVjdGVkIGdldCBhcHBlYXJhbmNlKCk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiB0aGlzLmlzTW9iaWxlID8gJ3NlY29uZGFyeScgOiAnZmxhdCc7XG4gICAgfVxufVxuXG5leHBvcnQgY29uc3QgVFVJX0NPTkZJUk0gPSBuZXcgUG9seW1vcnBoZXVzQ29tcG9uZW50KFR1aUNvbmZpcm0pO1xuIiwiPGRpdlxuICAgICpwb2x5bW9ycGhldXNPdXRsZXQ9XCJjb250ZXh0LmRhdGE/LmNvbnRlbnQgYXMgdGV4dFwiXG4gICAgY2xhc3M9XCJ0LWNvbnRlbnRcIlxuICAgIFtpbm5lckhUTUxdPVwidGV4dFwiXG4+PC9kaXY+XG48ZGl2XG4gICAgKm5nSWY9XCJ3b3JkcyQgfCBhc3luYyBhcyB3b3Jkc1wiXG4gICAgY2xhc3M9XCJ0LWJ1dHRvbnNcIlxuPlxuICAgIDxidXR0b25cbiAgICAgICAgc2l6ZT1cIm1cIlxuICAgICAgICB0dWlCdXR0b25cbiAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgIGNsYXNzPVwidC1idXR0b25cIlxuICAgICAgICBbYXBwZWFyYW5jZV09XCJhcHBlYXJhbmNlXCJcbiAgICAgICAgKGNsaWNrKT1cImNvbnRleHQuY29tcGxldGVXaXRoKGZhbHNlKVwiXG4gICAgPlxuICAgICAgICB7eyBjb250ZXh0LmRhdGE/Lm5vIHx8IHdvcmRzLm5vIH19XG4gICAgPC9idXR0b24+XG4gICAgPGJ1dHRvblxuICAgICAgICBzaXplPVwibVwiXG4gICAgICAgIHR1aUF1dG9Gb2N1c1xuICAgICAgICB0dWlCdXR0b25cbiAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgIGNsYXNzPVwidC1idXR0b25cIlxuICAgICAgICBbYXBwZWFyYW5jZV09XCJjb250ZXh0LmRhdGE/LmFwcGVhcmFuY2UgfHwgJ3ByaW1hcnknXCJcbiAgICAgICAgKGNsaWNrKT1cImNvbnRleHQuY29tcGxldGVXaXRoKHRydWUpXCJcbiAgICA+XG4gICAgICAgIHt7IGNvbnRleHQuZGF0YT8ueWVzIHx8IHdvcmRzLnllcyB9fVxuICAgIDwvYnV0dG9uPlxuPC9kaXY+XG4iXX0=