{"version":3,"file":"taiga-ui-kit-components-calendar-month.mjs","sources":["../../../projects/kit/components/calendar-month/calendar-month.component.ts","../../../projects/kit/components/calendar-month/calendar-month.template.html","../../../projects/kit/components/calendar-month/taiga-ui-kit-components-calendar-month.ts"],"sourcesContent":["import {AsyncPipe, NgForOf, NgIf} from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    inject,\n    Input,\n    Output,\n} from '@angular/core';\nimport {TUI_FALSE_HANDLER} from '@taiga-ui/cdk/constants';\nimport {\n    TUI_FIRST_DAY,\n    TUI_LAST_DAY,\n    TuiDay,\n    TuiMonth,\n    TuiMonthRange,\n    TuiYear,\n} from '@taiga-ui/cdk/date-time';\nimport {TuiHovered} from '@taiga-ui/cdk/directives/hovered';\nimport {TuiLet} from '@taiga-ui/cdk/directives/let';\nimport type {TuiBooleanHandler} from '@taiga-ui/cdk/types';\nimport {tuiNullableSame, tuiPure} from '@taiga-ui/cdk/utils/miscellaneous';\nimport {TuiCalendarYear} from '@taiga-ui/core/components/calendar';\nimport {TuiLink} from '@taiga-ui/core/components/link';\nimport {TuiScrollbar} from '@taiga-ui/core/components/scrollbar';\nimport {TuiSpinButton} from '@taiga-ui/core/components/spin-button';\nimport type {TuiRangeState} from '@taiga-ui/core/types';\nimport {TUI_CALENDAR_MONTHS} from '@taiga-ui/kit/tokens';\n\nconst TODAY = TuiDay.currentLocal();\n\n@Component({\n    standalone: true,\n    selector: 'tui-calendar-month',\n    imports: [\n        AsyncPipe,\n        NgIf,\n        NgForOf,\n        TuiCalendarYear,\n        TuiSpinButton,\n        TuiScrollbar,\n        TuiLink,\n        TuiLet,\n        TuiHovered,\n    ],\n    templateUrl: './calendar-month.template.html',\n    styleUrls: ['./calendar-month.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[class._single]': 'isSingle',\n    },\n})\nexport class TuiCalendarMonth {\n    protected isYearPickerShown = false;\n    protected readonly months$ = inject(TUI_CALENDAR_MONTHS);\n\n    @Input()\n    public value: TuiMonth | TuiMonthRange | null = null;\n\n    @Input()\n    public year: TuiYear = TODAY;\n\n    @Input()\n    public disabledItemHandler: TuiBooleanHandler<TuiMonth> = TUI_FALSE_HANDLER;\n\n    @Input()\n    public minLength: number | null = null;\n\n    @Input()\n    public maxLength: number | null = null;\n\n    @Input()\n    public min: TuiMonth | null = TUI_FIRST_DAY;\n\n    @Input()\n    public max: TuiMonth | null = TUI_LAST_DAY;\n\n    @Output()\n    public readonly monthClick = new EventEmitter<TuiMonth>();\n\n    @Output()\n    public readonly hoveredItemChange = new EventEmitter<TuiMonth | null>();\n\n    @Output()\n    public readonly yearChange = new EventEmitter<TuiYear>();\n\n    public hoveredItem: TuiMonth | null = null;\n\n    public get isSingle(): boolean {\n        return (\n            this.value !== null &&\n            (this.value instanceof TuiMonth || this.value.isSingleMonth)\n        );\n    }\n\n    public onNextYear(): void {\n        this.updateActiveYear(this.year.append({year: 1}));\n    }\n\n    public onPreviousYear(): void {\n        this.updateActiveYear(this.year.append({year: -1}));\n    }\n\n    public isItemInsideRange(month: TuiMonth): boolean {\n        const {value, hoveredItem} = this;\n\n        if (value === null || value instanceof TuiMonth) {\n            return false;\n        }\n\n        if (!value.isSingleMonth) {\n            return value.from.monthSameOrBefore(month) && value.to.monthAfter(month);\n        }\n\n        if (hoveredItem === null) {\n            return false;\n        }\n\n        const range = TuiMonthRange.sort(value.from, hoveredItem);\n\n        return range.from.monthSameOrBefore(month) && range.to.monthAfter(month);\n    }\n\n    public getItemRange(item: TuiMonth): TuiRangeState | null {\n        const {value, hoveredItem} = this;\n\n        if (value === null) {\n            return null;\n        }\n\n        if (value instanceof TuiMonth) {\n            return value.monthSame(item) ? 'single' : null;\n        }\n\n        const theFirstOfRange = value.from.monthSame(item) && !value.isSingleMonth;\n        const hoveredItemAfterFrom =\n            hoveredItem?.monthAfter(value.from) &&\n            value.from.monthSame(item) &&\n            value.isSingleMonth;\n        const hoveredItemIsCandidateToBeFrom =\n            hoveredItem?.monthSame(item) &&\n            hoveredItem?.monthBefore(value.from) &&\n            value.isSingleMonth;\n\n        if (theFirstOfRange || hoveredItemAfterFrom || hoveredItemIsCandidateToBeFrom) {\n            return 'start';\n        }\n\n        const theLastOfRange = value.to.monthSame(item) && !value.isSingleMonth;\n        const hoveredItemBeforeTo =\n            value.to.monthSame(item) &&\n            hoveredItem?.monthBefore(value.to) &&\n            value.isSingleMonth;\n        const hoveredItemIsCandidateToBeTo =\n            hoveredItem?.monthSame(item) &&\n            hoveredItem?.monthAfter(value.from) &&\n            value.isSingleMonth;\n\n        if (theLastOfRange || hoveredItemBeforeTo || hoveredItemIsCandidateToBeTo) {\n            return 'end';\n        }\n\n        return value.isSingleMonth && value.from.monthSame(item) ? 'single' : null;\n    }\n\n    protected get computedMin(): TuiMonth {\n        return this.min ?? TUI_FIRST_DAY;\n    }\n\n    protected get computedMax(): TuiMonth {\n        return this.max ?? TUI_LAST_DAY;\n    }\n\n    protected get previousYearDisabled(): boolean {\n        return this.year.yearSameOrBefore(this.computedMin);\n    }\n\n    protected get nextYearDisabled(): boolean {\n        return this.year.yearSameOrAfter(this.computedMax);\n    }\n\n    protected get disabledItemHandlerWithMinMax(): TuiBooleanHandler<TuiMonth> {\n        return this.calculateDisabledItemHandlerWithMinMax(\n            this.disabledItemHandler,\n            this.value,\n            this.computedMin,\n            this.computedMax,\n            this.minLength,\n            this.maxLength,\n        );\n    }\n\n    protected getTuiMonth(monthNumber: number, yearNumber: number): TuiMonth {\n        return new TuiMonth(yearNumber, monthNumber);\n    }\n\n    protected isItemToday(item: TuiMonth): boolean {\n        return TODAY.monthSame(item);\n    }\n\n    protected onPickerYearClick(year: number): void {\n        this.isYearPickerShown = false;\n\n        if (this.year.year !== year) {\n            this.updateActiveYear(new TuiYear(year));\n        }\n    }\n\n    protected onItemClick(month: TuiMonth): void {\n        if (!this.disabledItemHandlerWithMinMax(month)) {\n            this.monthClick.emit(month);\n        }\n    }\n\n    protected onYearClick(): void {\n        this.isYearPickerShown = true;\n    }\n\n    protected onItemHovered(hovered: boolean, item: TuiMonth): void {\n        this.updateHoveredItem(hovered ? item : null);\n    }\n\n    @tuiPure\n    private calculateDisabledItemHandlerWithMinMax(\n        disabledItemHandler: TuiBooleanHandler<TuiMonth>,\n        value: TuiMonth | TuiMonthRange | null,\n        min: TuiMonth,\n        max: TuiMonth,\n        minLength: number | null,\n        maxLength: number | null,\n    ): TuiBooleanHandler<TuiMonth> {\n        return (item) => {\n            const delta =\n                value instanceof TuiMonthRange && value.isSingleMonth\n                    ? Math.abs(\n                          item.year * 12 +\n                              item.month -\n                              value.from.year * 12 -\n                              value.from.month,\n                      )\n                    : 0;\n\n            const tooLong = delta && maxLength && delta > maxLength;\n            const tooShort = delta && minLength && delta < minLength;\n\n            return (\n                tooLong ||\n                tooShort ||\n                item.monthBefore(min) ||\n                item.monthAfter(max) ||\n                disabledItemHandler(item)\n            );\n        };\n    }\n\n    private updateHoveredItem(month: TuiMonth | null): void {\n        if (tuiNullableSame(this.hoveredItem, month, (a, b) => a.monthSame(b))) {\n            return;\n        }\n\n        this.hoveredItem = month;\n        this.hoveredItemChange.emit(month);\n    }\n\n    private updateActiveYear(year: TuiYear): void {\n        this.year = year;\n        this.yearChange.emit(year);\n    }\n}\n","<tui-scrollbar\n    *ngIf=\"isYearPickerShown; else monthSelect\"\n    class=\"t-scrollbar\"\n>\n    <tui-calendar-year\n        [initialItem]=\"year.year\"\n        [max]=\"computedMax.year\"\n        [min]=\"computedMin.year\"\n        [value]=\"value\"\n        (yearClick)=\"onPickerYearClick($event)\"\n    />\n</tui-scrollbar>\n<ng-template #monthSelect>\n    <tui-spin-button\n        [focusable]=\"false\"\n        [leftDisabled]=\"previousYearDisabled\"\n        [rightDisabled]=\"nextYearDisabled\"\n        (leftClick)=\"onPreviousYear()\"\n        (rightClick)=\"onNextYear()\"\n    >\n        <button\n            automation-id=\"tui-calendar-month__active-year\"\n            tabIndex=\"-1\"\n            tuiLink\n            type=\"button\"\n            (click)=\"onYearClick()\"\n        >\n            {{ year.formattedYear }}\n        </button>\n    </tui-spin-button>\n    <div class=\"t-row\">\n        <ng-container *ngFor=\"let month of months$ | async; let index = index\">\n            <div\n                *tuiLet=\"getTuiMonth(index, year.year) as item\"\n                class=\"t-cell\"\n                [attr.data-range]=\"getItemRange(item)\"\n                [class.t-cell_disabled]=\"disabledItemHandlerWithMinMax(item)\"\n                [class.t-cell_interval]=\"isItemInsideRange(item)\"\n                [class.t-cell_today]=\"isItemToday(item)\"\n                (click)=\"onItemClick(item)\"\n                (tuiHoveredChange)=\"onItemHovered($event, item)\"\n            >\n                <div class=\"t-item\">{{ month }}</div>\n            </div>\n        </ng-container>\n    </div>\n</ng-template>\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}