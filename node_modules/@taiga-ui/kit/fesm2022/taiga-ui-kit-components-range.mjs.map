{"version":3,"file":"taiga-ui-kit-components-range.mjs","sources":["../../../projects/kit/components/range/range-change.directive.ts","../../../projects/kit/components/range/range.component.ts","../../../projects/kit/components/range/range.template.html","../../../projects/kit/components/range/taiga-ui-kit-components-range.ts"],"sourcesContent":["import {DOCUMENT} from '@angular/common';\nimport {Directive, EventEmitter, inject, Output} from '@angular/core';\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\nimport {tuiTypedFromEvent} from '@taiga-ui/cdk/observables';\nimport {tuiInjectElement} from '@taiga-ui/cdk/utils/dom';\nimport {tuiClamp, tuiRound} from '@taiga-ui/cdk/utils/math';\nimport {TUI_FLOATING_PRECISION} from '@taiga-ui/kit/components/slider';\nimport {filter, map, merge, repeat, startWith, switchMap, takeUntil, tap} from 'rxjs';\n\nimport {TuiRange} from './range.component';\n\n@Directive({\n    standalone: true,\n})\nexport class TuiRangeChange {\n    private readonly doc = inject(DOCUMENT);\n    private readonly el = tuiInjectElement();\n    private readonly range = inject(TuiRange);\n\n    /**\n     * TODO replace with pointer events (when all supported browsers can handle them).\n     * Don't forget to use setPointerCapture instead of listening all doc events\n     */\n    private readonly pointerDown$ = tuiTypedFromEvent(this.el, 'pointerdown', {\n        passive: true,\n        capture: true,\n    });\n\n    private readonly pointerMove$ = merge(\n        tuiTypedFromEvent(this.doc, 'touchmove').pipe(\n            filter(({touches}) => touches.length === 1),\n            map(({touches}) => touches[0]),\n            filter((event): event is Touch => !!event),\n        ),\n        tuiTypedFromEvent(this.doc, 'mousemove'),\n    );\n\n    private readonly pointerUp$ = merge(\n        tuiTypedFromEvent(this.doc, 'touchend', {passive: true}),\n        tuiTypedFromEvent(this.doc, 'mouseup', {passive: true}),\n    );\n\n    @Output()\n    public readonly activeThumbChange = new EventEmitter<'left' | 'right'>();\n\n    constructor() {\n        let activeThumb: 'left' | 'right';\n\n        this.pointerDown$\n            .pipe(\n                tap(({clientX, target}) => {\n                    activeThumb = this.detectActiveThumb(clientX, target);\n                    this.activeThumbChange.emit(activeThumb);\n\n                    if (this.range.focusable) {\n                        this.el.focus();\n                    }\n                }),\n                switchMap((event) => this.pointerMove$.pipe(startWith(event))),\n                map(({clientX}) => this.getFractionFromEvents(clientX ?? 0)),\n                takeUntil(this.pointerUp$),\n                repeat(),\n                takeUntilDestroyed(),\n            )\n            .subscribe((fraction) => {\n                const value = this.range.toValue(fraction);\n\n                this.range.processValue(value, activeThumb === 'right');\n            });\n    }\n\n    private getFractionFromEvents(clickClientX: number): number {\n        const hostRect = this.el.getBoundingClientRect();\n        const value = clickClientX - hostRect.left;\n        const total = hostRect.width;\n\n        return tuiClamp(tuiRound(value / total, TUI_FLOATING_PRECISION), 0, 1);\n    }\n\n    private detectActiveThumb(\n        clientX: number,\n        target: EventTarget | null,\n    ): 'left' | 'right' {\n        const [leftSliderRef, rightSliderRef] = this.range.slidersRefs;\n\n        switch (target) {\n            case leftSliderRef?.nativeElement:\n                return 'left';\n            case rightSliderRef?.nativeElement:\n                return 'right';\n            default:\n                return this.findNearestActiveThumb(clientX);\n        }\n    }\n\n    private findNearestActiveThumb(clientX: number): 'left' | 'right' {\n        const fraction = this.getFractionFromEvents(clientX);\n        const deltaLeft = fraction * 100 - this.range.left();\n        const deltaRight = fraction * 100 - 100 + this.range.right();\n\n        return Math.abs(deltaLeft) > Math.abs(deltaRight) ||\n            deltaRight > 0 ||\n            (this.range.left() === 0 && this.range.right() === 100)\n            ? 'right'\n            : 'left';\n    }\n}\n","import type {OnChanges, QueryList} from '@angular/core';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    computed,\n    ElementRef,\n    inject,\n    Input,\n    signal,\n    ViewChildren,\n} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {TuiControl} from '@taiga-ui/cdk/classes';\nimport {EMPTY_QUERY} from '@taiga-ui/cdk/constants';\nimport {tuiFallbackValueProvider} from '@taiga-ui/cdk/tokens';\nimport {tuiInjectElement} from '@taiga-ui/cdk/utils/dom';\nimport {tuiClamp, tuiQuantize} from '@taiga-ui/cdk/utils/math';\nimport {tuiPure} from '@taiga-ui/cdk/utils/miscellaneous';\nimport type {TuiSizeS} from '@taiga-ui/core/types';\nimport type {TuiKeySteps} from '@taiga-ui/kit/components/slider';\nimport {\n    TUI_SLIDER_OPTIONS,\n    tuiKeyStepValueToPercentage,\n    tuiPercentageToKeyStepValue,\n    TuiSlider,\n    TuiSliderComponent,\n} from '@taiga-ui/kit/components/slider';\n\nimport {TuiRangeChange} from './range-change.directive';\n\n@Component({\n    standalone: true,\n    selector: 'tui-range',\n    imports: [FormsModule, TuiSlider],\n    templateUrl: './range.template.html',\n    styleUrls: ['./range.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [tuiFallbackValueProvider([0, 0])],\n    hostDirectives: [\n        {\n            directive: TuiRangeChange,\n            outputs: ['activeThumbChange'],\n        },\n    ],\n    host: {\n        '[attr.data-size]': 'size',\n        '[attr.tabindex]': '-1',\n        '[attr.aria-disabled]': 'disabled()',\n        '[style.--left.%]': 'left()',\n        '[style.--right.%]': 'right()',\n        '[style.background]': 'options.trackColor',\n        '[class._disabled]': 'disabled()',\n        '(focusout)': 'onTouched()',\n        '(keydown.arrowUp.prevent)': 'changeByStep(1, $event.target)',\n        '(keydown.arrowRight.prevent)': 'changeByStep(1, $event.target)',\n        '(keydown.arrowLeft.prevent)': 'changeByStep(-1, $event.target)',\n        '(keydown.arrowDown.prevent)': 'changeByStep(-1, $event.target)',\n    },\n})\nexport class TuiRange extends TuiControl<[number, number]> implements OnChanges {\n    // TODO: refactor to signal inputs after Angular update\n    private readonly changes = signal(1);\n    private readonly el = tuiInjectElement();\n\n    protected readonly options = inject(TUI_SLIDER_OPTIONS);\n    protected lastActiveThumb: 'left' | 'right' = 'right';\n\n    @Input()\n    public min = 0;\n\n    @Input()\n    public max = 100;\n\n    @Input()\n    public step = 1;\n\n    @Input()\n    public size: TuiSizeS = this.options.size;\n\n    @Input()\n    public segments = 1;\n\n    @Input()\n    public keySteps: TuiKeySteps | null = null;\n\n    @Input()\n    public focusable = true;\n\n    @Input()\n    public margin = 0;\n\n    @Input()\n    public limit = Infinity;\n\n    @ViewChildren(TuiSliderComponent, {read: ElementRef})\n    public readonly slidersRefs: QueryList<ElementRef<HTMLInputElement>> = EMPTY_QUERY;\n\n    public readonly left = computed(() => this.toPercent(this.value()[0]));\n    public readonly right = computed(() => 100 - this.toPercent(this.value()[1]));\n\n    public ngOnChanges(): void {\n        this.changes.set(this.changes() + 1);\n    }\n\n    public processValue(value: number, right: boolean): void {\n        if (right) {\n            this.updateEnd(value);\n        } else {\n            this.updateStart(value);\n        }\n\n        this.lastActiveThumb = right ? 'right' : 'left';\n    }\n\n    public toValue(fraction: number): number {\n        return tuiPercentageToKeyStepValue(\n            tuiClamp(tuiQuantize(fraction, this.fractionStep), 0, 1) * 100,\n            this.computedKeySteps,\n        );\n    }\n\n    protected get fractionStep(): number {\n        return this.step / (this.max - this.min);\n    }\n\n    protected get computedKeySteps(): TuiKeySteps {\n        return this.computePureKeySteps(this.keySteps, this.min, this.max);\n    }\n\n    protected get segmentWidthRatio(): number {\n        return 1 / this.segments;\n    }\n\n    protected changeByStep(coefficient: number, target: HTMLElement): void {\n        const [sliderLeftRef, sliderRightRef] = this.slidersRefs;\n        const leftThumbElement = sliderLeftRef?.nativeElement;\n        const rightThumbElement = sliderRightRef?.nativeElement;\n\n        const isRightThumb =\n            target === this.el\n                ? this.lastActiveThumb === 'right'\n                : target === rightThumbElement;\n        const activeThumbElement = isRightThumb ? rightThumbElement : leftThumbElement;\n        const previousValue = isRightThumb ? this.value()[1] : this.value()[0];\n        /** @bad TODO think about a solution without twice conversion */\n        const previousFraction = this.toPercent(previousValue) / 100;\n        const newFractionValue = previousFraction + coefficient * this.fractionStep;\n\n        this.processValue(this.toValue(newFractionValue), isRightThumb);\n        activeThumbElement?.focus();\n    }\n\n    protected toPercent(value: number): number {\n        return (\n            this.changes() && tuiKeyStepValueToPercentage(value, this.computedKeySteps)\n        );\n    }\n\n    @tuiPure\n    private computePureKeySteps(\n        keySteps: TuiKeySteps | null,\n        min: number,\n        max: number,\n    ): TuiKeySteps {\n        return (\n            keySteps || [\n                [0, min],\n                [100, max],\n            ]\n        );\n    }\n\n    private updateStart(value: number): void {\n        const newValue = Math.min(value, this.value()[1]);\n        const distance = this.value()[1] - newValue;\n\n        if (!this.checkDistance(distance)) {\n            return;\n        }\n\n        this.onChange([newValue, this.value()[1]]);\n    }\n\n    private updateEnd(value: number): void {\n        const newValue = Math.max(value, this.value()[0]);\n        const distance = newValue - this.value()[0];\n\n        if (!this.checkDistance(distance)) {\n            return;\n        }\n\n        this.onChange([this.value()[0], newValue]);\n    }\n\n    private checkDistance(distance: number): boolean {\n        return tuiClamp(distance, this.margin, this.limit) === distance;\n    }\n}\n","<div\n    class=\"t-track\"\n    [style.--bg-size-ratio]=\"1 - segmentWidthRatio\"\n    [style.--segment-width.%]=\"segmentWidthRatio * 100\"\n>\n    <input\n        automation-id=\"tui-range__left\"\n        readonly\n        step=\"any\"\n        tuiSlider\n        type=\"range\"\n        class=\"t-thumb\"\n        [disabled]=\"disabled()\"\n        [keySteps]=\"computedKeySteps\"\n        [max]=\"max\"\n        [min]=\"min\"\n        [ngModel]=\"value()[0]\"\n        [ngModelOptions]=\"{standalone: true}\"\n        [size]=\"size\"\n        [tabIndex]=\"focusable ? 0 : -1\"\n    />\n    <input\n        automation-id=\"tui-range__right\"\n        readonly\n        step=\"any\"\n        tuiSlider\n        type=\"range\"\n        class=\"t-thumb\"\n        [disabled]=\"disabled()\"\n        [keySteps]=\"computedKeySteps\"\n        [max]=\"max\"\n        [min]=\"min\"\n        [ngModel]=\"value()[1]\"\n        [ngModelOptions]=\"{standalone: true}\"\n        [size]=\"size\"\n        [tabIndex]=\"focusable ? 0 : -1\"\n    />\n</div>\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1.TuiRangeChange"],"mappings":"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"}