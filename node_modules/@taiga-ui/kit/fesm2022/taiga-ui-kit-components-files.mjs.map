{"version":3,"file":"taiga-ui-kit-components-files.mjs","sources":["../../../projects/kit/components/files/files.validators.ts","../../../projects/kit/components/files/files.utils.ts","../../../projects/kit/components/files/file/file.options.ts","../../../projects/kit/components/files/file/file.component.ts","../../../projects/kit/components/files/file/file.template.html","../../../projects/kit/components/files/files/files.component.ts","../../../projects/kit/components/files/files/files.template.html","../../../projects/kit/components/files/input-files/input-files.content.ts","../../../projects/kit/components/files/input-files/input-files.options.ts","../../../projects/kit/components/files/input-files/input-files-validator.directive.ts","../../../projects/kit/components/files/input-files/input-files.directive.ts","../../../projects/kit/components/files/input-files/input-files.component.ts","../../../projects/kit/components/files/pipes/file-rejected.pipe.ts","../../../projects/kit/components/files/files.ts","../../../projects/kit/components/files/taiga-ui-kit-components-files.ts"],"sourcesContent":["import {coerceArray} from '@angular/cdk/coercion';\nimport type {ValidatorFn} from '@angular/forms';\nimport type {TuiContext} from '@taiga-ui/cdk/types';\n\nexport const TUI_SIZE_ERROR = 'tuiSize';\nexport const TUI_FORMAT_ERROR = 'tuiFormat';\n\ninterface FileFormatError {\n    [TUI_FORMAT_ERROR]: TuiContext<File[]>;\n}\n\ninterface FileSizeError {\n    [TUI_SIZE_ERROR]: TuiContext<File[]> & {size: number};\n}\n\nexport function tuiCreateFileSizeValidator(size: number): ValidatorFn {\n    return ({value}: {value: File | readonly File[] | null}): FileSizeError | null => {\n        const files = value && coerceArray(value);\n        const $implicit = value && files?.filter((file) => file.size > size);\n\n        return $implicit?.length ? {[TUI_SIZE_ERROR]: {$implicit, size}} : null;\n    };\n}\n\nexport function tuiCreateFileFormatValidator(accept: string): ValidatorFn {\n    return ({value}: {value: File | readonly File[] | null}): FileFormatError | null => {\n        const files = value && coerceArray(value);\n        const formats = toArray(accept);\n        const $implicit = value && files?.filter((file) => !checkFormat(file, formats));\n\n        return $implicit?.length && accept ? {[TUI_FORMAT_ERROR]: {$implicit}} : null;\n    };\n}\n\nfunction checkFormat({name, type}: File, formats: readonly string[]): boolean {\n    const extension = `.${(name.split('.').pop() || '').toLowerCase()}`;\n\n    return formats.some(\n        (format) =>\n            format === extension ||\n            format === type ||\n            (format.split('/')[1] === '*' && type.split('/')[0] === format.split('/')[0]),\n    );\n}\n\nfunction toArray(accept: string): readonly string[] {\n    return accept\n        .toLowerCase()\n        .split(',')\n        .map((format) => format.trim().toLowerCase());\n}\n","import {coerceArray} from '@angular/cdk/coercion';\nimport type {AbstractControl} from '@angular/forms';\nimport {tuiRound} from '@taiga-ui/cdk/utils/math';\n\nimport {TUI_FORMAT_ERROR, TUI_SIZE_ERROR} from './files.validators';\n\nconst BYTES_PER_KIB = 1024;\nconst BYTES_PER_MIB = 1024 * BYTES_PER_KIB;\n\nexport function tuiFilesRejected(control?: AbstractControl | null): File[] {\n    const format: File[] = control?.getError(TUI_FORMAT_ERROR)?.$implicit || [];\n    const size: File[] = control?.getError(TUI_SIZE_ERROR)?.$implicit || [];\n\n    return Array.from(new Set([...format, ...size]));\n}\n\nexport function tuiFilesAccepted(control?: AbstractControl | null): File[] {\n    const value = control?.value || [];\n    const files: File[] = coerceArray(value);\n    const size: File[] = control?.getError(TUI_SIZE_ERROR)?.$implicit || [];\n    const format: File[] = control?.getError(TUI_FORMAT_ERROR)?.$implicit || [];\n\n    return files.filter((file) => !size.includes(file) && !format.includes(file));\n}\n\nexport function tuiFormatSize(\n    units: readonly [string, string, string],\n    size?: number,\n): string | null {\n    if (size === undefined) {\n        return null;\n    }\n\n    if (size < BYTES_PER_KIB) {\n        return `${size} ${units[0]}`;\n    }\n\n    if (size < BYTES_PER_MIB) {\n        return `${(size / BYTES_PER_KIB).toFixed(0)} ${units[1]}`;\n    }\n\n    return `${tuiRound(size / BYTES_PER_MIB, 2).toLocaleString('ru-RU')} ${units[2]}`;\n}\n","import type {TuiContext} from '@taiga-ui/cdk/types';\nimport {tuiCreateToken} from '@taiga-ui/cdk/utils/miscellaneous';\nimport type {TuiAppearanceOptions} from '@taiga-ui/core/directives/appearance';\nimport type {TuiSizeL} from '@taiga-ui/core/types';\nimport type {PolymorpheusContent} from '@taiga-ui/polymorpheus';\n\nimport type {TuiFileState} from '../files.types';\nimport {tuiFormatSize} from '../files.utils';\n\nexport interface TuiFileOptions extends TuiAppearanceOptions {\n    readonly formatSize: (\n        units: readonly [string, string, string],\n        size?: number,\n    ) => string | null;\n    readonly icons: Record<\n        Exclude<TuiFileState, 'loading'>,\n        PolymorpheusContent<TuiContext<TuiSizeL>>\n    >;\n}\n\nexport const TUI_FILE_DEFAULT_OPTIONS: TuiFileOptions = {\n    appearance: 'outline',\n    formatSize: tuiFormatSize,\n    icons: {\n        normal: ({$implicit}) => ($implicit === 'l' ? '@tui.file' : '@tui.circle-check'),\n        error: '@tui.circle-alert',\n        deleted: '@tui.trash',\n    },\n};\n\n/**\n * Default parameters for file component\n */\nexport const TUI_FILE_OPTIONS = tuiCreateToken(TUI_FILE_DEFAULT_OPTIONS);\n","import {CommonModule} from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    inject,\n    Input,\n    Output,\n} from '@angular/core';\nimport type {SafeValue} from '@angular/platform-browser';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {WA_WINDOW} from '@ng-web-apis/common';\nimport type {TuiContext} from '@taiga-ui/cdk/types';\nimport {tuiPure} from '@taiga-ui/cdk/utils/miscellaneous';\nimport {TuiButton} from '@taiga-ui/core/components/button';\nimport {TuiIcon} from '@taiga-ui/core/components/icon';\nimport {TuiLoader} from '@taiga-ui/core/components/loader';\nimport {\n    TuiAppearance,\n    tuiAppearanceOptionsProvider,\n} from '@taiga-ui/core/directives/appearance';\nimport {TUI_COMMON_ICONS} from '@taiga-ui/core/tokens';\nimport type {TuiSizeL} from '@taiga-ui/core/types';\nimport type {TuiLanguage} from '@taiga-ui/i18n/types';\nimport {TUI_DIGITAL_INFORMATION_UNITS, TUI_FILE_TEXTS} from '@taiga-ui/kit/tokens';\nimport type {PolymorpheusContent} from '@taiga-ui/polymorpheus';\nimport {PolymorpheusOutlet, PolymorpheusTemplate} from '@taiga-ui/polymorpheus';\nimport type {Observable} from 'rxjs';\nimport {map, of} from 'rxjs';\n\nimport type {TuiFileLike, TuiFileState} from '../files.types';\nimport {TUI_FILE_OPTIONS} from './file.options';\n\n@Component({\n    standalone: true,\n    selector: 'tui-file,a[tuiFile],button[tuiFile]',\n    imports: [\n        CommonModule,\n        PolymorpheusOutlet,\n        PolymorpheusTemplate,\n        TuiButton,\n        TuiIcon,\n        TuiLoader,\n    ],\n    templateUrl: './file.template.html',\n    styleUrls: ['./file.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [tuiAppearanceOptionsProvider(TUI_FILE_OPTIONS)],\n    hostDirectives: [TuiAppearance],\n    host: {\n        '[attr.data-delete]': 'showDelete',\n    },\n})\nexport class TuiFile {\n    private readonly sanitizer = inject(DomSanitizer);\n    private readonly options = inject(TUI_FILE_OPTIONS);\n    private readonly units$ = inject(TUI_DIGITAL_INFORMATION_UNITS);\n    private readonly win = inject(WA_WINDOW) as Window & {File: typeof File};\n\n    protected readonly icons = inject(TUI_COMMON_ICONS);\n    protected readonly fileTexts$ = inject(TUI_FILE_TEXTS);\n\n    @Input()\n    public file: TuiFileLike = {name: ''};\n\n    @Input()\n    public state: TuiFileState = 'normal';\n\n    @Input()\n    public size: TuiSizeL = 'm';\n\n    @Input()\n    public showDelete: boolean | 'always' = true;\n\n    @Input()\n    public showSize = true;\n\n    @Input()\n    public leftContent: PolymorpheusContent;\n\n    @Output()\n    public readonly remove = new EventEmitter<void>();\n\n    protected get preview(): SafeValue {\n        return this.isBig ? this.createPreview(this.file) : '';\n    }\n\n    protected get isBig(): boolean {\n        return this.size === 'l';\n    }\n\n    protected get isLoading(): boolean {\n        return this.state === 'loading';\n    }\n\n    protected get isError(): boolean {\n        return this.state === 'error';\n    }\n\n    protected get isDeleted(): boolean {\n        return this.state === 'deleted';\n    }\n\n    protected get allowDelete(): boolean {\n        return this.showDelete && this.remove.observed;\n    }\n\n    protected get icon(): PolymorpheusContent<TuiContext<TuiSizeL>> {\n        return this.state === 'loading' ? '' : this.options.icons[this.state];\n    }\n\n    protected get name(): string {\n        return this.getName(this.file);\n    }\n\n    protected get type(): string {\n        return this.getType(this.file);\n    }\n\n    protected get content$(): Observable<PolymorpheusContent> {\n        return this.calculateContent$(this.state, this.file, this.fileTexts$);\n    }\n\n    protected get fileSize$(): Observable<string | null> {\n        return this.calculateFileSize$(this.file, this.units$);\n    }\n\n    @tuiPure\n    private calculateContent$(\n        state: TuiFileState,\n        file: TuiFileLike,\n        fileTexts$: Observable<Record<keyof TuiLanguage['fileTexts'], string>>,\n    ): Observable<PolymorpheusContent> {\n        return state === 'error' && !file.content\n            ? fileTexts$.pipe(map((texts) => texts.loadingError))\n            : of(this.file.content || '');\n    }\n\n    @tuiPure\n    private calculateFileSize$(\n        file: TuiFileLike,\n        units$: Observable<readonly [string, string, string]>,\n    ): Observable<string | null> {\n        return units$.pipe(map((units) => this.options.formatSize(units, file.size)));\n    }\n\n    @tuiPure\n    private createPreview(file: TuiFileLike): SafeValue {\n        if (file.src) {\n            return file.src;\n        }\n\n        if (\n            this.win.File &&\n            file instanceof this.win.File &&\n            file.type?.startsWith('image/')\n        ) {\n            return this.sanitizer.bypassSecurityTrustUrl(URL.createObjectURL(file));\n        }\n\n        return '';\n    }\n\n    @tuiPure\n    private getName(file: TuiFileLike): string {\n        return file.name.split('.').slice(0, -1).join('.');\n    }\n\n    @tuiPure\n    private getType(file: TuiFileLike): string {\n        return `.${file.name.split('.').pop()}` || '';\n    }\n}\n","<div\n    class=\"t-preview\"\n    [class.t-preview_big]=\"isBig\"\n>\n    <ng-container *polymorpheusOutlet=\"leftContent || defaultLeftContent as text\">\n        {{ text }}\n    </ng-container>\n</div>\n<div class=\"t-wrapper\">\n    <div class=\"t-text\">\n        <div class=\"t-name\">{{ name }}</div>\n        <div class=\"t-type\">{{ type }}</div>\n        <div\n            *ngIf=\"showSize && (fileSize$ | async) as fileSize\"\n            class=\"t-size\"\n        >\n            {{ fileSize }}\n        </div>\n    </div>\n    <div\n        *ngIf=\"content$ | async as content\"\n        class=\"t-content\"\n    >\n        <ng-container *polymorpheusOutlet=\"content as text\">\n            {{ text }}\n        </ng-container>\n    </div>\n    <ng-content />\n</div>\n<ng-container *ngIf=\"allowDelete\">\n    <button\n        *ngIf=\"fileTexts$ | async as texts\"\n        appearance=\"icon\"\n        size=\"xs\"\n        tuiIconButton\n        type=\"button\"\n        class=\"t-remove\"\n        [iconStart]=\"icons.close\"\n        (click.prevent)=\"remove.emit()\"\n        (mousedown.prevent.silent)=\"(0)\"\n    >\n        {{ texts.remove }}\n    </button>\n</ng-container>\n\n<ng-template #defaultLeftContent>\n    <img\n        *ngIf=\"preview; else loader\"\n        alt=\"file preview\"\n        class=\"t-image\"\n        [src]=\"preview\"\n    />\n    <ng-template #loader>\n        <tui-loader\n            *ngIf=\"isLoading; else svg\"\n            class=\"t-loader\"\n            [inheritColor]=\"isBig\"\n        />\n    </ng-template>\n    <ng-template #svg>\n        <tui-icon\n            *polymorpheusOutlet=\"icon as src; context: {$implicit: size}\"\n            class=\"t-icon\"\n            [class.t-icon_blank]=\"isBig || isDeleted\"\n            [class.t-icon_error]=\"isError\"\n            [icon]=\"src.toString()\"\n        />\n    </ng-template>\n</ng-template>\n","import {CommonModule} from '@angular/common';\nimport type {QueryList} from '@angular/core';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    EventEmitter,\n    inject,\n    Input,\n    Output,\n    TemplateRef,\n    ViewEncapsulation,\n} from '@angular/core';\nimport {EMPTY_QUERY} from '@taiga-ui/cdk/constants';\nimport {TuiItem} from '@taiga-ui/cdk/directives/item';\nimport {TuiButton} from '@taiga-ui/core/components/button';\nimport {TuiExpandComponent} from '@taiga-ui/core/components/expand';\nimport {TuiGroup, tuiGroupOptionsProvider} from '@taiga-ui/core/directives/group';\nimport {TUI_HIDE_TEXT, TUI_SHOW_ALL_TEXT} from '@taiga-ui/kit/tokens';\n\n@Component({\n    standalone: true,\n    selector: 'tui-files',\n    imports: [CommonModule, TuiButton, TuiExpandComponent],\n    templateUrl: './files.template.html',\n    styleUrls: ['./files.styles.less'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        tuiGroupOptionsProvider({size: 'm', collapsed: true, orientation: 'vertical'}),\n    ],\n    hostDirectives: [TuiGroup],\n})\nexport class TuiFilesComponent {\n    @ContentChildren(TuiItem, {read: TemplateRef})\n    protected readonly items: QueryList<TemplateRef<Record<string, unknown>>> =\n        EMPTY_QUERY;\n\n    protected readonly hideText$ = inject(TUI_HIDE_TEXT);\n    protected readonly showAllText$ = inject(TUI_SHOW_ALL_TEXT);\n\n    @Input()\n    public max = 0;\n\n    @Input()\n    public expanded = false;\n\n    @Output()\n    public readonly expandedChange = new EventEmitter<boolean>();\n\n    protected get hasExtraItems(): boolean {\n        return !!this.max && this.items.length > this.max;\n    }\n\n    protected toggle(): void {\n        this.expanded = !this.expanded;\n        this.expandedChange.emit(this.expanded);\n    }\n}\n","<ng-container *ngIf=\"items?.changes | async\" />\n<ng-content />\n<ng-container *ngFor=\"let item of items; let index = index\">\n    <ng-container\n        *ngIf=\"!max || index < max\"\n        [ngTemplateOutlet]=\"item\"\n    />\n</ng-container>\n<tui-expand\n    *ngIf=\"hasExtraItems\"\n    [expanded]=\"expanded\"\n>\n    <div class=\"t-extra-items\">\n        <ng-container *ngFor=\"let item of items; let index = index\">\n            <ng-container\n                *ngIf=\"max && index >= max\"\n                [ngTemplateOutlet]=\"item\"\n            />\n        </ng-container>\n    </div>\n</tui-expand>\n<div\n    *ngIf=\"hasExtraItems\"\n    class=\"t-bottom\"\n    [class.t-bottom_collapsed]=\"!expanded\"\n>\n    <button\n        appearance=\"outline\"\n        size=\"m\"\n        tuiButton\n        type=\"button\"\n        class=\"t-button\"\n        (click)=\"toggle()\"\n    >\n        {{ (expanded ? hideText$ : showAllText$) | async }}\n    </button>\n</div>\n","import {AsyncPipe} from '@angular/common';\nimport {ChangeDetectionStrategy, Component, inject} from '@angular/core';\nimport type {TuiContext} from '@taiga-ui/cdk/types';\nimport {tuiPure} from '@taiga-ui/cdk/utils/miscellaneous';\nimport {TuiLink} from '@taiga-ui/core/components/link';\nimport {TuiBreakpointService} from '@taiga-ui/core/services';\nimport {TUI_INPUT_FILE_TEXTS} from '@taiga-ui/kit/tokens';\nimport {injectContext} from '@taiga-ui/polymorpheus';\nimport type {Observable} from 'rxjs';\nimport {combineLatest, map, of} from 'rxjs';\n\nimport {TuiInputFiles} from './input-files.component';\n\n@Component({\n    standalone: true,\n    imports: [AsyncPipe, TuiLink],\n    template: `\n        <a tuiLink>{{ link$ | async }}</a>\n        {{ label$ | async }}\n    `,\n    // eslint-disable-next-line @angular-eslint/prefer-on-push-component-change-detection\n    changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class TuiInputFilesContent {\n    private readonly breakpoint$ = inject(TuiBreakpointService);\n    private readonly text$ = inject(TUI_INPUT_FILE_TEXTS);\n    private readonly context = injectContext<TuiContext<boolean>>();\n    private readonly component = inject(TuiInputFiles);\n\n    protected get link$(): Observable<string> {\n        return this.computeLink$(\n            this.context.$implicit,\n            !!this.component.input?.input.multiple,\n        );\n    }\n\n    protected get label$(): Observable<string> {\n        return this.computeLabel$(\n            this.context.$implicit,\n            !!this.component.input?.input.multiple,\n        );\n    }\n\n    @tuiPure\n    private computeLink$(fileDragged: boolean, multiple: boolean): Observable<string> {\n        return fileDragged\n            ? of('')\n            : this.text$.pipe(\n                  map((t) => (multiple ? t.defaultLinkMultiple : t.defaultLinkSingle)),\n              );\n    }\n\n    @tuiPure\n    private computeLabel$(fileDragged: boolean, multiple: boolean): Observable<string> {\n        return fileDragged\n            ? combineLatest([this.breakpoint$, this.text$]).pipe(\n                  map(([breakpoint, text]) => {\n                      if (breakpoint === 'mobile') {\n                          return '';\n                      }\n\n                      return multiple ? text.dropMultiple : text.drop;\n                  }),\n              )\n            : combineLatest([this.breakpoint$, this.text$]).pipe(\n                  map(([breakpoint, text]) => {\n                      if (breakpoint === 'mobile') {\n                          return '';\n                      }\n\n                      return multiple\n                          ? text.defaultLabelMultiple\n                          : text.defaultLabelSingle;\n                  }),\n              );\n    }\n}\n","import type {Provider} from '@angular/core';\nimport {tuiCreateToken, tuiProvideOptions} from '@taiga-ui/cdk/utils/miscellaneous';\nimport type {TuiSizeL} from '@taiga-ui/core/types';\n\nexport interface TuiInputFilesOptions {\n    accept: string;\n    maxFileSize: number;\n    multiple: boolean;\n    size: TuiSizeL;\n}\n\nexport const TUI_INPUT_FILES_DEFAULT_OPTIONS: TuiInputFilesOptions = {\n    accept: '',\n    multiple: false,\n    size: 'm',\n    maxFileSize: 30 * 1024 * 1024, // 30 MiB\n};\n\n/**\n * Default parameters for input files component\n */\nexport const TUI_INPUT_FILES_OPTIONS = tuiCreateToken(TUI_INPUT_FILES_DEFAULT_OPTIONS);\n\nexport function tuiInputFilesOptionsProvider(\n    options: Partial<TuiInputFilesOptions>,\n): Provider {\n    return tuiProvideOptions(\n        TUI_INPUT_FILES_OPTIONS,\n        options,\n        TUI_INPUT_FILES_DEFAULT_OPTIONS,\n    );\n}\n","import type {OnChanges, OnInit} from '@angular/core';\nimport {Directive, inject, Input} from '@angular/core';\nimport {Validators} from '@angular/forms';\nimport {TuiValidator} from '@taiga-ui/cdk/directives/validator';\n\nimport {\n    tuiCreateFileFormatValidator,\n    tuiCreateFileSizeValidator,\n} from '../files.validators';\nimport {TUI_INPUT_FILES_OPTIONS} from './input-files.options';\n\n@Directive({\n    standalone: true,\n    exportAs: 'tuiInputFilesValidator',\n    hostDirectives: [TuiValidator],\n    host: {\n        '[accept]': 'accept',\n    },\n})\nexport class TuiInputFilesValidator implements OnChanges, OnInit {\n    private readonly options = inject(TUI_INPUT_FILES_OPTIONS);\n    private readonly validator = inject(TuiValidator);\n\n    @Input()\n    public accept = this.options.accept;\n\n    @Input()\n    public maxFileSize = this.options.maxFileSize;\n\n    public ngOnChanges(): void {\n        this.validate();\n    }\n\n    public ngOnInit(): void {\n        this.validate();\n    }\n\n    private validate(): void {\n        this.validator.tuiValidator =\n            Validators.compose([\n                tuiCreateFileFormatValidator(this.accept),\n                tuiCreateFileSizeValidator(this.maxFileSize),\n            ]) || Validators.nullValidator;\n        this.validator.ngOnChanges();\n    }\n}\n","import {coerceArray} from '@angular/cdk/coercion';\nimport {Directive, forwardRef, inject, Output} from '@angular/core';\nimport {tuiAsControl, TuiControl} from '@taiga-ui/cdk/classes';\nimport {EMPTY_ARRAY} from '@taiga-ui/cdk/constants';\nimport {TuiNativeValidator} from '@taiga-ui/cdk/directives/native-validator';\nimport {tuiControlValue} from '@taiga-ui/cdk/observables';\nimport {tuiInjectElement} from '@taiga-ui/cdk/utils/dom';\nimport type {TuiAppearanceOptions} from '@taiga-ui/core/directives/appearance';\nimport {\n    tuiAppearanceOptionsProvider,\n    TuiWithAppearance,\n} from '@taiga-ui/core/directives/appearance';\nimport {filter, map, switchMap, timer} from 'rxjs';\n\nimport type {TuiFileLike} from '../files.types';\nimport {tuiFilesRejected} from '../files.utils';\nimport {TuiInputFiles} from './input-files.component';\nimport {TuiInputFilesValidator} from './input-files-validator.directive';\n\n@Directive({\n    standalone: true,\n    selector: 'input[tuiInputFiles]',\n    providers: [\n        tuiAsControl(TuiInputFilesDirective),\n        tuiAppearanceOptionsProvider(TuiInputFilesDirective),\n    ],\n    hostDirectives: [\n        TuiNativeValidator,\n        TuiWithAppearance,\n        {\n            directive: TuiInputFilesValidator,\n            inputs: ['accept', 'maxFileSize'],\n        },\n    ],\n    host: {\n        type: 'file',\n        '[disabled]': 'disabled()',\n        '(blur)': 'onTouched()',\n        '(click)': 'onClick($event)',\n    },\n})\nexport class TuiInputFilesDirective\n    extends TuiControl<TuiFileLike | readonly TuiFileLike[]>\n    implements TuiAppearanceOptions\n{\n    protected readonly host = inject(forwardRef(() => TuiInputFiles));\n\n    @Output()\n    public readonly reject = timer(0).pipe(\n        switchMap(() => tuiControlValue(this.control.control)),\n        map(() => tuiFilesRejected(this.control.control)),\n        filter(({length}) => !!length),\n    );\n\n    public readonly appearance = 'file';\n    public readonly input = tuiInjectElement<HTMLInputElement>();\n\n    public process(files: FileList): void {\n        const fileOrFiles = this.input.multiple\n            ? [...toArray(this.value()), ...Array.from(files)]\n            : files[0];\n\n        if (fileOrFiles) {\n            this.onChange(fileOrFiles);\n        }\n    }\n\n    protected onClick(event: MouseEvent): void {\n        if (this.input.readOnly) {\n            event.preventDefault();\n        }\n    }\n}\n\nfunction toArray(\n    value: TuiFileLike | readonly TuiFileLike[] | null,\n): readonly TuiFileLike[] {\n    return value ? coerceArray(value) : EMPTY_ARRAY;\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    TemplateRef,\n    ViewEncapsulation,\n} from '@angular/core';\nimport type {TuiContext} from '@taiga-ui/cdk/types';\nimport {\n    PolymorpheusComponent,\n    PolymorpheusOutlet,\n    PolymorpheusTemplate,\n} from '@taiga-ui/polymorpheus';\n\nimport {TuiInputFilesContent} from './input-files.content';\nimport {TuiInputFilesDirective} from './input-files.directive';\n\n@Component({\n    standalone: true,\n    selector: 'label[tuiInputFiles]',\n    imports: [PolymorpheusOutlet, PolymorpheusTemplate],\n    template: `\n        <ng-content></ng-content>\n        <span\n            *polymorpheusOutlet=\"\n                template || content as text;\n                context: {$implicit: fileDragged}\n            \"\n        >\n            {{ text }}\n        </span>\n    `,\n    styleUrls: ['./input-files.style.less'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '(dragover.prevent.silent)': '0',\n        '(drop.prevent)': 'onDropped($event)',\n        '(dragenter)': 'onDrag($event.dataTransfer)',\n        '(dragleave)': 'onDrag(null)',\n        '[class._dragged]': 'fileDragged',\n        '(change)': 'onFilesSelected($event.target)',\n    },\n})\nexport class TuiInputFiles {\n    @ContentChild(TemplateRef)\n    protected readonly template?: TemplateRef<TuiContext<boolean>>;\n\n    protected files?: FileList | null;\n    protected readonly content = new PolymorpheusComponent(TuiInputFilesContent);\n\n    @ContentChild(TuiInputFilesDirective)\n    public readonly input?: TuiInputFilesDirective;\n\n    protected get fileDragged(): boolean {\n        return !!this.files && !this.input?.disabled();\n    }\n\n    protected onFilesSelected(input: HTMLInputElement): void {\n        if (!input?.files) {\n            return;\n        }\n\n        this.input?.process(input.files);\n        input.value = '';\n    }\n\n    protected onDropped({dataTransfer}: DragEvent): void {\n        this.files = null;\n\n        if (dataTransfer?.files && !this.input?.disabled()) {\n            this.input?.process(dataTransfer.files);\n        }\n    }\n\n    protected onDrag(dataTransfer: DataTransfer | null): void {\n        this.files = dataTransfer?.files;\n    }\n}\n","import type {PipeTransform} from '@angular/core';\nimport {inject, Pipe} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {CHAR_NO_BREAK_SPACE} from '@taiga-ui/cdk/constants';\nimport {TUI_DIGITAL_INFORMATION_UNITS, TUI_INPUT_FILE_TEXTS} from '@taiga-ui/kit/tokens';\nimport type {Observable} from 'rxjs';\nimport {combineLatest, map} from 'rxjs';\n\nimport {TUI_FILE_OPTIONS} from '../file/file.options';\nimport type {TuiFileLike} from '../files.types';\nimport {\n    tuiCreateFileFormatValidator,\n    tuiCreateFileSizeValidator,\n} from '../files.validators';\nimport {TUI_INPUT_FILES_OPTIONS} from '../input-files/input-files.options';\n\n@Pipe({\n    standalone: true,\n    name: 'tuiFileRejected',\n})\nexport class TuiFileRejectedPipe implements PipeTransform {\n    private readonly options = inject(TUI_INPUT_FILES_OPTIONS);\n    private readonly formatSize = inject(TUI_FILE_OPTIONS).formatSize;\n    private readonly text$ = inject(TUI_INPUT_FILE_TEXTS);\n    private readonly unit$ = inject(TUI_DIGITAL_INFORMATION_UNITS);\n\n    public transform(\n        file: TuiFileLike | null,\n        {\n            accept = this.options.accept,\n            maxFileSize = this.options.maxFileSize,\n        }: {accept?: string; maxFileSize?: number} = this.options,\n    ): Observable<TuiFileLike | null> {\n        const sizeValidator = tuiCreateFileSizeValidator(maxFileSize);\n        const formatValidator = tuiCreateFileFormatValidator(accept);\n        const control = new FormControl(file);\n\n        return combineLatest([this.text$, this.unit$]).pipe(\n            map(([{maxSizeRejectionReason, formatRejectionReason}, units]) => {\n                if (file && formatValidator(control)) {\n                    return {\n                        name: file.name,\n                        size: file.size,\n                        content: formatRejectionReason,\n                    };\n                }\n\n                if (file && sizeValidator(control)) {\n                    return {\n                        name: file.name,\n                        size: file.size,\n                        content: `${maxSizeRejectionReason}${CHAR_NO_BREAK_SPACE}${this.formatSize(units, maxFileSize)}`,\n                    };\n                }\n\n                return null;\n            }),\n        );\n    }\n}\n","import {TuiItem} from '@taiga-ui/cdk/directives/item';\n\nimport {TuiFile} from './file/file.component';\nimport {TuiFilesComponent} from './files/files.component';\nimport {TuiInputFiles} from './input-files/input-files.component';\nimport {TuiInputFilesDirective} from './input-files/input-files.directive';\nimport {TuiFileRejectedPipe} from './pipes/file-rejected.pipe';\n\nexport const TuiFiles = [\n    TuiItem,\n    TuiFile,\n    TuiInputFiles,\n    TuiFilesComponent,\n    TuiFileRejectedPipe,\n    TuiInputFilesDirective,\n] as const;\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["toArray","i1","i2","i3.TuiInputFilesValidator"],"mappings":"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"}