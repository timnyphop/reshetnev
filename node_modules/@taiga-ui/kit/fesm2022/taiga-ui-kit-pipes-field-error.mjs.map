{"version":3,"file":"taiga-ui-kit-pipes-field-error.mjs","sources":["../../../projects/kit/pipes/field-error/field-error-pipe.ts","../../../projects/kit/pipes/field-error/field-error-content-pipe.ts","../../../projects/kit/pipes/field-error/taiga-ui-kit-pipes-field-error.ts"],"sourcesContent":["import type {PipeTransform} from '@angular/core';\nimport {inject, Pipe} from '@angular/core';\nimport type {AbstractControl, ControlValueAccessor} from '@angular/forms';\nimport {ControlContainer, NgControl} from '@angular/forms';\nimport {TuiValidationError} from '@taiga-ui/cdk/classes';\nimport {tuiIsString, tuiPure} from '@taiga-ui/cdk/utils/miscellaneous';\nimport {TUI_VALIDATION_ERRORS} from '@taiga-ui/kit/tokens';\nimport type {PolymorpheusContent} from '@taiga-ui/polymorpheus';\nimport {map, Observable, of} from 'rxjs';\n\nconst EMPTY_RECORD = {};\n\nfunction unwrapObservable(\n    content: Observable<PolymorpheusContent>,\n    context: any,\n): Observable<TuiValidationError> {\n    return content.pipe(map((error) => new TuiValidationError(error || '', context)));\n}\n\nfunction defaultError(\n    content: PolymorpheusContent,\n    context: any,\n): Observable<TuiValidationError> {\n    return of(new TuiValidationError(content || '', context));\n}\n\n@Pipe({\n    standalone: true,\n    name: 'tuiFieldError',\n    pure: false,\n})\nexport class TuiFieldErrorPipe implements PipeTransform, ControlValueAccessor {\n    private order: readonly string[] = [];\n    private readonly parent = inject(NgControl, {skipSelf: true, optional: true});\n    private readonly self = inject(NgControl, {self: true, optional: true});\n    private readonly container = inject(ControlContainer, {optional: true});\n    private readonly validationErrors = inject(TUI_VALIDATION_ERRORS);\n\n    constructor() {\n        if (this.self && !this.self.valueAccessor) {\n            this.self.valueAccessor = this;\n        }\n    }\n\n    public transform(order: readonly string[]): Observable<TuiValidationError | null> {\n        this.order = order;\n\n        return this.computedError;\n    }\n\n    public registerOnChange(): void {}\n\n    public registerOnTouched(): void {}\n\n    public setDisabledState(): void {}\n\n    public writeValue(): void {}\n\n    protected get computedError(): Observable<TuiValidationError | null> {\n        return (this.invalid && this.touched && this.error) || of(null);\n    }\n\n    private get error(): Observable<TuiValidationError> | null {\n        const {errorId} = this;\n\n        if (!errorId) {\n            return null;\n        }\n\n        const firstError = this.controlErrors[errorId];\n        const errorContent = this.validationErrors[errorId];\n\n        return this.getError(firstError, errorContent);\n    }\n\n    private get invalid(): boolean {\n        return !!this.control?.invalid;\n    }\n\n    private get touched(): boolean {\n        return !!this.control?.touched;\n    }\n\n    private get control(): AbstractControl | null | undefined {\n        return this.self?.control || this.parent?.control || this.container?.control;\n    }\n\n    private get errorId(): string {\n        return this.getErrorId(this.order, this.controlErrors);\n    }\n\n    private get controlErrors(): Record<string, unknown> {\n        return this.control?.errors || EMPTY_RECORD;\n    }\n\n    @tuiPure\n    private getError(\n        context: any,\n        content?: Observable<PolymorpheusContent> | PolymorpheusContent,\n    ): Observable<TuiValidationError> {\n        if (context instanceof TuiValidationError) {\n            return of(context);\n        }\n\n        if (content === undefined && tuiIsString(context)) {\n            return of(new TuiValidationError(context));\n        }\n\n        if (content instanceof Observable) {\n            return unwrapObservable(content, context);\n        }\n\n        if (content instanceof Function) {\n            const message = content(context) as\n                | Observable<PolymorpheusContent>\n                | PolymorpheusContent;\n\n            return message instanceof Observable\n                ? unwrapObservable(message, context)\n                : defaultError(message, context);\n        }\n\n        return defaultError(content, context);\n    }\n\n    @tuiPure\n    private getErrorId(\n        order: readonly string[],\n        controlErrors: Record<string, unknown>,\n    ): string {\n        const id = order?.find((errorId) => controlErrors[errorId]);\n        const fallback = Object.keys(controlErrors)[0];\n\n        return id || fallback || '';\n    }\n}\n","import {AsyncPipe} from '@angular/common';\nimport type {OnDestroy, PipeTransform} from '@angular/core';\nimport {inject, INJECTOR, Injector, Pipe} from '@angular/core';\nimport type {PolymorpheusContent} from '@taiga-ui/polymorpheus';\n\nimport {TuiFieldErrorPipe} from './field-error-pipe';\n\n@Pipe({\n    standalone: true,\n    name: 'tuiFieldErrorContent',\n    pure: false,\n})\nexport class TuiFieldErrorContentPipe implements PipeTransform, OnDestroy {\n    private readonly injector = inject(INJECTOR);\n    private readonly localInjector = Injector.create({\n        providers: [{provide: AsyncPipe}, {provide: TuiFieldErrorPipe}],\n        parent: this.injector,\n    });\n\n    private readonly asyncPipe = this.localInjector.get(AsyncPipe);\n    private readonly fieldErrorPipe = this.localInjector.get(TuiFieldErrorPipe);\n\n    public transform(order: readonly string[]): PolymorpheusContent {\n        return this.getErrorContent(order);\n    }\n\n    public ngOnDestroy(): void {\n        this.asyncPipe.ngOnDestroy();\n    }\n\n    private getErrorContent(order: readonly string[]): PolymorpheusContent {\n        const error = this.asyncPipe.transform(this.fieldErrorPipe.transform(order));\n\n        if (!error) {\n            return '';\n        }\n\n        return typeof error.message === 'function'\n            ? error.message(error.context)\n            : error.message;\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}