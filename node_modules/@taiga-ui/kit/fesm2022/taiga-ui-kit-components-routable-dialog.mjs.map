{"version":3,"file":"taiga-ui-kit-components-routable-dialog.mjs","sources":["../../../projects/kit/components/routable-dialog/generate-dialogable-route.ts","../../../projects/kit/components/routable-dialog/routable-dialog.component.ts","../../../projects/kit/components/routable-dialog/taiga-ui-kit-components-routable-dialog.ts"],"sourcesContent":["import type {Type} from '@angular/core';\nimport type {DefaultExport, Route} from '@angular/router';\nimport type {TuiDialogOptions} from '@taiga-ui/core/components/dialog';\n\nexport function tuiGenerateDialogableRoute<I>(\n    component: Type<any> | (() => Promise<DefaultExport<Type<any>> | Type<any>>),\n    {\n        path = '',\n        outlet = '',\n        ...dialogOptions\n    }: Partial<TuiDialogOptions<I>> & {path?: string; outlet?: string} = {},\n): Route {\n    return {\n        path,\n        outlet,\n        loadComponent: async () => import('./routable-dialog.component'),\n        data: {\n            dialog: component,\n            backUrl: path\n                .split('/')\n                .map(() => '..')\n                .join('/'),\n            isLazy: path === '',\n            dialogOptions,\n        },\n    };\n}\n","import type {Type} from '@angular/core';\nimport {ChangeDetectionStrategy, Component, inject, INJECTOR} from '@angular/core';\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {TuiDialogService} from '@taiga-ui/core/components/dialog';\nimport {PolymorpheusComponent} from '@taiga-ui/polymorpheus';\nimport {from, of, switchMap} from 'rxjs';\n\n@Component({\n    standalone: true,\n    selector: 'tui-routable-dialog',\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport default class TuiRoutableDialog {\n    private readonly route = inject(ActivatedRoute);\n    private readonly router = inject(Router);\n    private readonly injector = inject(INJECTOR);\n    private readonly initialUrl = this.router.url;\n    private readonly dialog = inject(TuiDialogService);\n\n    constructor() {\n        const dialog = this.route.snapshot.data['dialog'];\n\n        from(isClass(dialog) ? of(dialog) : dialog().then((m: any) => m.default ?? m))\n            .pipe(\n                switchMap((dialog: any) =>\n                    this.dialog.open(\n                        new PolymorpheusComponent<Type<any>>(dialog, this.injector),\n                        this.route.snapshot.data['dialogOptions'],\n                    ),\n                ),\n                takeUntilDestroyed(),\n            )\n            .subscribe({complete: () => this.onDialogClosing()});\n    }\n\n    private get lazyLoadedBackUrl(): string {\n        return (this.route.parent?.snapshot.url || []).map(() => '..').join('/');\n    }\n\n    private onDialogClosing(): void {\n        if (this.initialUrl === this.router.url) {\n            this.navigateToParent();\n        }\n    }\n\n    private navigateToParent(): void {\n        const backUrl = this.route.snapshot.data['isLazy']\n            ? this.lazyLoadedBackUrl\n            : this.route.snapshot.data['backUrl'];\n\n        void this.router.navigate([backUrl], {\n            relativeTo: this.route,\n        });\n    }\n}\n\nfunction isClass(fn: Type<any> | unknown): boolean {\n    return (\n        typeof fn === 'function' &&\n        Object.getOwnPropertyDescriptor(fn, 'prototype')?.writable === false\n    );\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}