import { TemplateRef } from '@angular/core';
import type { TuiBooleanHandler } from '@taiga-ui/cdk/types';
import type { TuiTextfieldHost } from '@taiga-ui/legacy/tokens';
import { AbstractTuiControl } from './control';
import * as i0 from "@angular/core";
/**
 * @deprecated: drop in v5.0
 */
export declare abstract class AbstractTuiNativeSelect<H = TuiTextfieldHost, T = string> {
    protected readonly datalist: TemplateRef<any> | null;
    protected readonly autoId: string;
    protected readonly el: HTMLSelectElement;
    protected readonly host: H;
    protected readonly control: AbstractTuiControl<any>;
    protected readonly itemsHandlers: import("@taiga-ui/kit/tokens").TuiItemsHandlers<unknown>;
    disabledItemHandler: TuiBooleanHandler<T> | null;
    placeholder: string;
    protected get id(): string;
    protected get emptyOption(): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<AbstractTuiNativeSelect<any, any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<AbstractTuiNativeSelect<any, any>, never, never, { "disabledItemHandler": { "alias": "disabledItemHandler"; "required": false; }; "placeholder": { "alias": "placeholder"; "required": false; }; }, {}, never, never, false, never>;
}
