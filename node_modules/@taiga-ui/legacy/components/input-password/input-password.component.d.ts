import type { TuiContext } from '@taiga-ui/cdk/types';
import { TuiHintOptionsDirective } from '@taiga-ui/core/directives/hint';
import type { TuiSizeL, TuiSizeS } from '@taiga-ui/core/types';
import { AbstractTuiControl } from '@taiga-ui/legacy/classes';
import type { TuiFocusableElementAccessor, TuiNativeFocusableElement } from '@taiga-ui/legacy/tokens';
import type { PolymorpheusContent } from '@taiga-ui/polymorpheus';
import type { Observable } from 'rxjs';
import * as i0 from "@angular/core";
/**
 * @deprecated use {@link TuiPassword} with {@link TuiTextfield}
 */
export declare class TuiInputPasswordComponent extends AbstractTuiControl<string> implements TuiFocusableElementAccessor {
    private readonly textfield?;
    private readonly textfieldSize;
    protected readonly hintOptions: TuiHintOptionsDirective | null;
    protected readonly directive$: Observable<any>;
    protected isPasswordHidden: boolean;
    protected readonly computedAppearance$: Observable<string>;
    protected readonly passwordTexts$: Observable<readonly [show_password: string, hide_password: string]>;
    protected readonly options: import("./input-password.options").TuiInputPasswordOptions;
    protected readonly type: TuiContext<TuiSizeL | TuiSizeS>;
    get nativeFocusableElement(): TuiNativeFocusableElement | null;
    get focused(): boolean;
    get inputType(): string;
    onValueChange(textValue: string): void;
    protected get size(): TuiSizeL | TuiSizeS;
    protected get icon(): PolymorpheusContent<TuiContext<TuiSizeL | TuiSizeS>>;
    protected onFocused(focused: boolean): void;
    protected togglePasswordVisibility(): void;
    protected getFallbackValue(): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiInputPasswordComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiInputPasswordComponent, "tui-input-password", never, {}, {}, never, ["*", "input"], false, never>;
}
