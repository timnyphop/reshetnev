import { EventEmitter } from '@angular/core';
import type { SafeStyle } from '@angular/platform-browser';
import type { TuiPoint } from '@taiga-ui/core/types';
import * as i0 from "@angular/core";
export declare class TuiColorPickerComponent {
    private readonly sanitizer;
    protected point: TuiPoint;
    protected hue: number;
    protected opacity: number;
    readonly colorChange: EventEmitter<[h: number, s: number, v: number, opacity: number]>;
    set color(color: [h: number, s: number, v: number, opacity: number]);
    get currentColor(): [h: number, s: number, v: number];
    get base(): string;
    get gradient(): SafeStyle;
    onPointChange(point: TuiPoint): void;
    onHueChange(hue: number): void;
    onOpacityChange(opacity: number): void;
    private getCurrentColor;
    private updateColor;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiColorPickerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiColorPickerComponent, "tui-color-picker", never, { "color": { "alias": "color"; "required": false; }; }, { "colorChange": "colorChange"; }, never, never, false, never>;
}
