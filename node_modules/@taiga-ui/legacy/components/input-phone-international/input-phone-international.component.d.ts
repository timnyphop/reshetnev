import { EventEmitter } from '@angular/core';
import type { TuiContext } from '@taiga-ui/cdk/types';
import type { TuiSizeL, TuiSizeM, TuiSizeS } from '@taiga-ui/core/types';
import type { TuiCountryIsoCode } from '@taiga-ui/i18n/types';
import { AbstractTuiControl } from '@taiga-ui/legacy/classes';
import type { TuiFocusableElementAccessor } from '@taiga-ui/legacy/tokens';
import type { PolymorpheusContent } from '@taiga-ui/polymorpheus';
import * as i0 from "@angular/core";
/**
 * @deprecated: drop in v5.0 use {@link TuiInputPhoneInternational}
 * https://taiga-ui.dev/components/input-phone-international
 */
export declare class TuiInputPhoneInternationalComponent extends AbstractTuiControl<string> implements TuiFocusableElementAccessor {
    private readonly inputPhoneComponent?;
    private readonly primitiveTextfield?;
    private readonly options;
    private readonly extractCountryCodePipe;
    private readonly textfieldSize;
    protected open: boolean;
    protected readonly countriesNames$: import("rxjs").Observable<Record<TuiCountryIsoCode, string>>;
    protected readonly countriesMasks: Record<TuiCountryIsoCode, string>;
    protected readonly arrow: PolymorpheusContent<TuiContext<TuiSizeL | TuiSizeM | TuiSizeS>>;
    countries: readonly TuiCountryIsoCode[];
    readonly countryIsoCodeChange: EventEmitter<TuiCountryIsoCode>;
    countryIsoCode: TuiCountryIsoCode;
    set isoCode(code: TuiCountryIsoCode);
    get nativeFocusableElement(): HTMLElement | null;
    get focused(): boolean;
    get inputPhoneCountryCode(): string;
    get phoneMaskAfterCountryCode(): string;
    onPaste(event: ClipboardEvent | DragEvent): void;
    onItemClick(isoCode: TuiCountryIsoCode): void;
    setDisabledState(): void;
    protected get size(): TuiSizeL | TuiSizeS;
    protected onActiveZone(active: boolean): void;
    protected getFallbackValue(): string;
    private calculateMaskAfterCountryCode;
    private close;
    private updateCountryIsoCode;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiInputPhoneInternationalComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiInputPhoneInternationalComponent, "tui-input-phone-international", never, { "countries": { "alias": "countries"; "required": false; }; "isoCode": { "alias": "countryIsoCode"; "required": false; }; }, { "countryIsoCodeChange": "countryIsoCodeChange"; }, never, ["*"], true, never>;
}
