import type { DoCheck, OnInit, TemplateRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import type { TuiContext, TuiIdentityMatcher } from '@taiga-ui/cdk/types';
import { TuiDataListComponent, TuiOption } from '@taiga-ui/core/components/data-list';
import { AbstractTuiControl } from '@taiga-ui/legacy/classes';
import { PolymorpheusComponent } from '@taiga-ui/polymorpheus';
import * as i0 from "@angular/core";
export declare class TuiSelectOptionComponent<T> implements OnInit, DoCheck {
    private readonly host;
    private readonly el;
    private readonly changeDetection$;
    protected readonly abstractControl: AbstractTuiControl<any> | null;
    protected readonly control: NgControl;
    protected readonly option: TuiOption<any>;
    protected readonly dataList: TuiDataListComponent<any> | null;
    protected readonly icons: import("@taiga-ui/core/tokens").TuiCommonIcons;
    protected readonly context: TuiContext<TemplateRef<Record<string, unknown>>>;
    protected readonly selected$: import("rxjs").Observable<boolean>;
    ngOnInit(): void;
    ngDoCheck(): void;
    protected get value(): T | null;
    protected get matcher(): TuiIdentityMatcher<T>;
    protected get selected(): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiSelectOptionComponent<any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiSelectOptionComponent<any>, "tui-select-option", never, {}, {}, never, never, false, never>;
}
export declare const TUI_SELECT_OPTION: PolymorpheusComponent<TuiSelectOptionComponent<unknown>>;
