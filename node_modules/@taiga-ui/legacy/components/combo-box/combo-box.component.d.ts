import { EventEmitter } from '@angular/core';
import type { TuiActiveZone } from '@taiga-ui/cdk/directives/active-zone';
import type { TuiContext, TuiStringMatcher } from '@taiga-ui/cdk/types';
import type { TuiDataListHost } from '@taiga-ui/core/components/data-list';
import type { TuiSizeL, TuiSizeM, TuiSizeS, TuiValueContentContext } from '@taiga-ui/core/types';
import type { TuiItemsHandlers } from '@taiga-ui/kit/tokens';
import { AbstractTuiNullableControl } from '@taiga-ui/legacy/classes';
import type { TuiFocusableElementAccessor } from '@taiga-ui/legacy/tokens';
import type { PolymorpheusContent } from '@taiga-ui/polymorpheus';
import * as i0 from "@angular/core";
export declare class TuiComboBoxComponent<T> extends AbstractTuiNullableControl<T> implements TuiFocusableElementAccessor, TuiDataListHost<T> {
    private readonly accessor?;
    private readonly dropdown?;
    private readonly textfield?;
    private readonly arrowMode;
    private readonly itemsHandlers;
    private readonly textfieldSize;
    protected readonly datalist: PolymorpheusContent<TuiContext<TuiActiveZone>>;
    stringify: TuiItemsHandlers<T>['stringify'];
    strictMatcher: TuiStringMatcher<T> | null;
    identityMatcher: TuiItemsHandlers<T>['identityMatcher'];
    valueContent: PolymorpheusContent<TuiValueContentContext<T>>;
    strict: boolean;
    search: string | null;
    readonly searchChange: EventEmitter<string | null>;
    open: boolean;
    get size(): TuiSizeL | TuiSizeS;
    get nativeFocusableElement(): HTMLInputElement | null;
    get focused(): boolean;
    get nativeValue(): string;
    checkOption(option: T): void;
    handleOption(item: T): void;
    onValueChange(value: string): void;
    toggle(): void;
    protected get arrow(): PolymorpheusContent<TuiContext<TuiSizeL | TuiSizeM | TuiSizeS>>;
    protected get showValueTemplate(): boolean;
    protected get computedContent(): PolymorpheusContent<TuiValueContentContext<T>>;
    protected onActiveZone(active: boolean): void;
    protected onFieldKeyDownEnter(event: Event): void;
    private isStrictMatch;
    private close;
    private updateSearch;
    private setNativeValue;
    private focusInput;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiComboBoxComponent<any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiComboBoxComponent<any>, "tui-combo-box", never, { "stringify": { "alias": "stringify"; "required": false; }; "strictMatcher": { "alias": "strictMatcher"; "required": false; }; "identityMatcher": { "alias": "identityMatcher"; "required": false; }; "valueContent": { "alias": "valueContent"; "required": false; }; "strict": { "alias": "strict"; "required": false; }; "search": { "alias": "search"; "required": false; }; }, { "searchChange": "searchChange"; }, ["accessor", "datalist"], ["*", "input"], false, never>;
}
