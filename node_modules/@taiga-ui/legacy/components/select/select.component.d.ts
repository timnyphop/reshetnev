import type { TuiActiveZone } from '@taiga-ui/cdk/directives/active-zone';
import type { TuiContext } from '@taiga-ui/cdk/types';
import type { TuiDataListHost } from '@taiga-ui/core/components/data-list';
import type { TuiSizeL, TuiSizeM, TuiSizeS, TuiValueContentContext } from '@taiga-ui/core/types';
import type { TuiItemsHandlers } from '@taiga-ui/kit/tokens';
import { AbstractTuiNullableControl } from '@taiga-ui/legacy/classes';
import type { TuiFocusableElementAccessor } from '@taiga-ui/legacy/tokens';
import type { PolymorpheusContent } from '@taiga-ui/polymorpheus';
import type { TuiSelectOptions } from './select.options';
import * as i0 from "@angular/core";
export declare class TuiSelectComponent<T> extends AbstractTuiNullableControl<T> implements TuiFocusableElementAccessor, TuiDataListHost<T> {
    private readonly textfield?;
    private readonly dropdown?;
    private readonly nativeSelect?;
    private readonly itemsHandlers;
    private readonly textfieldCleaner;
    private readonly textfieldSize;
    private readonly arrowMode;
    private readonly options;
    protected readonly datalist: PolymorpheusContent<TuiContext<TuiActiveZone>>;
    protected readonly isMobile: boolean;
    protected open: boolean;
    stringify: TuiItemsHandlers<T>['stringify'];
    identityMatcher: TuiItemsHandlers<T>['identityMatcher'];
    valueContent: TuiSelectOptions<T>['valueContent'];
    get size(): TuiSizeL | TuiSizeS;
    get nativeFocusableElement(): HTMLInputElement | null;
    get focused(): boolean;
    get computedValue(): string;
    onValueChange(value: T): void;
    handleOption(option: T): void;
    protected get arrow(): PolymorpheusContent<TuiContext<TuiSizeL | TuiSizeM | TuiSizeS>>;
    protected get nativeDropdownMode(): boolean;
    protected get computedContent(): PolymorpheusContent<TuiValueContentContext<T>>;
    protected onActiveZone(active: boolean): void;
    protected onKeyDownDelete(): void;
    private focusInput;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiSelectComponent<any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiSelectComponent<any>, "tui-select", never, { "stringify": { "alias": "stringify"; "required": false; }; "identityMatcher": { "alias": "identityMatcher"; "required": false; }; "valueContent": { "alias": "valueContent"; "required": false; }; }, {}, ["nativeSelect", "datalist"], ["*", "input", "select"], false, never>;
}
