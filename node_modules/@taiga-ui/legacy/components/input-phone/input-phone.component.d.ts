import { EventEmitter, TemplateRef } from '@angular/core';
import type { MaskitoOptions } from '@maskito/core';
import type { TuiActiveZone } from '@taiga-ui/cdk/directives/active-zone';
import type { TuiContext } from '@taiga-ui/cdk/types';
import type { TuiDataListHost } from '@taiga-ui/core/components/data-list';
import type { TuiSizeL, TuiSizeS } from '@taiga-ui/core/types';
import { AbstractTuiControl } from '@taiga-ui/legacy/classes';
import type { TuiFocusableElementAccessor } from '@taiga-ui/legacy/tokens';
import * as i0 from "@angular/core";
export declare class TuiInputPhoneComponent extends AbstractTuiControl<string> implements TuiFocusableElementAccessor, TuiDataListHost<string> {
    private readonly dropdown?;
    private readonly textfield?;
    private readonly textfieldCleaner;
    private readonly options;
    private readonly textfieldSize;
    protected readonly datalist?: TemplateRef<TuiContext<TuiActiveZone>>;
    protected open: boolean;
    phoneMaskAfterCountryCode: string;
    allowText: boolean;
    search: string;
    readonly searchChange: EventEmitter<string>;
    countryCode: string;
    set countryCodeSetter(newCountryCode: string);
    get size(): TuiSizeL | TuiSizeS;
    get nativeFocusableElement(): HTMLInputElement | null;
    get focused(): boolean;
    get nativeValue(): string;
    set nativeValue(value: string);
    get inputMode(): string;
    onValueChange(value: string): void;
    handleOption(item: string): void;
    setDisabledState(): void;
    writeValue(value: string | null): void;
    protected get canOpen(): boolean;
    protected get canClean(): boolean;
    protected get maskOptions(): MaskitoOptions;
    protected onActiveZone(active: boolean): void;
    protected getFallbackValue(): string;
    private get nonRemovablePrefix();
    private get maxPhoneLength();
    private get isTextValue();
    private calculateMask;
    private focusInput;
    private updateSearch;
    private updateValueWithNewCountryCode;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiInputPhoneComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiInputPhoneComponent, "tui-input-phone", never, { "phoneMaskAfterCountryCode": { "alias": "phoneMaskAfterCountryCode"; "required": false; }; "allowText": { "alias": "allowText"; "required": false; }; "search": { "alias": "search"; "required": false; }; "countryCodeSetter": { "alias": "countryCode"; "required": false; }; }, { "searchChange": "searchChange"; }, ["datalist"], ["*", "input"], false, never>;
}
