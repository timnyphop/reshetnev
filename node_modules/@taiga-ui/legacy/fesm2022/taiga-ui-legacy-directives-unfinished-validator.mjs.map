{"version":3,"file":"taiga-ui-legacy-directives-unfinished-validator.mjs","sources":["../../../projects/legacy/directives/unfinished-validator/unfinished.validator.ts","../../../projects/legacy/directives/unfinished-validator/unfinished-validator.directive.ts","../../../projects/legacy/directives/unfinished-validator/taiga-ui-legacy-directives-unfinished-validator.ts"],"sourcesContent":["import type {AbstractControl, ValidatorFn} from '@angular/forms';\nimport {TuiValidationError} from '@taiga-ui/cdk/classes';\nimport {tuiIsHTMLElement, tuiIsInput} from '@taiga-ui/cdk/utils/dom';\nimport type {TuiFocusableElementAccessor} from '@taiga-ui/legacy/tokens';\nimport type {PolymorpheusContent} from '@taiga-ui/polymorpheus';\n\nexport function tuiCreateUnfinishedValidator(\n    nativeInputGetter: () => TuiFocusableElementAccessor,\n    message: PolymorpheusContent,\n): ValidatorFn {\n    return ({\n        value,\n    }: AbstractControl): {unfinished: TuiValidationError | string} | null => {\n        const nativeInput = nativeInputGetter();\n\n        return value === null &&\n            nativeInput &&\n            tuiIsHTMLElement(nativeInput.nativeFocusableElement) &&\n            tuiIsInput(nativeInput.nativeFocusableElement) &&\n            nativeInput.nativeFocusableElement.value !== ''\n            ? {unfinished: new TuiValidationError(message)}\n            : null;\n    };\n}\n","import {Directive, inject, INJECTOR} from '@angular/core';\nimport type {Validator} from '@angular/forms';\nimport {NG_VALIDATORS} from '@angular/forms';\nimport {tuiInjectElement} from '@taiga-ui/cdk/utils/dom';\nimport {tuiProvide} from '@taiga-ui/cdk/utils/miscellaneous';\nimport {TUI_FOCUSABLE_ITEM_ACCESSOR} from '@taiga-ui/legacy/tokens';\n\nimport {tuiCreateUnfinishedValidator} from './unfinished.validator';\n\n@Directive({\n    standalone: true,\n    selector: '[tuiUnfinishedValidator]',\n    providers: [tuiProvide(NG_VALIDATORS, TuiUnfinishedValidator, true)],\n})\nexport class TuiUnfinishedValidator implements Validator {\n    private readonly injector = inject(INJECTOR);\n\n    public readonly validate = tuiCreateUnfinishedValidator(\n        () => this.injector.get(TUI_FOCUSABLE_ITEM_ACCESSOR),\n        tuiInjectElement().getAttribute('tuiUnfinishedValidator') || '',\n    );\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;;AAMgB,SAAA,4BAA4B,CACxC,iBAAoD,EACpD,OAA4B,EAAA;AAE5B,IAAA,OAAO,CAAC,EACJ,KAAK,GACS,KAAsD;AACpE,QAAA,MAAM,WAAW,GAAG,iBAAiB,EAAE,CAAC;QAExC,OAAO,KAAK,KAAK,IAAI;YACjB,WAAW;AACX,YAAA,gBAAgB,CAAC,WAAW,CAAC,sBAAsB,CAAC;AACpD,YAAA,UAAU,CAAC,WAAW,CAAC,sBAAsB,CAAC;AAC9C,YAAA,WAAW,CAAC,sBAAsB,CAAC,KAAK,KAAK,EAAE;cAC7C,EAAC,UAAU,EAAE,IAAI,kBAAkB,CAAC,OAAO,CAAC,EAAC;cAC7C,IAAI,CAAC;AACf,KAAC,CAAC;AACN;;ACdA,MAKa,sBAAsB,CAAA;AALnC,IAAA,WAAA,GAAA;AAMqB,QAAA,IAAA,CAAA,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;QAE7B,IAAQ,CAAA,QAAA,GAAG,4BAA4B,CACnD,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,2BAA2B,CAAC,EACpD,gBAAgB,EAAE,CAAC,YAAY,CAAC,wBAAwB,CAAC,IAAI,EAAE,CAClE,CAAC;AACL,KAAA;+GAPY,sBAAsB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;mGAAtB,sBAAsB,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,SAAA,EAFpB,CAAC,UAAU,CAAC,aAAa,EAAE,sBAAsB,EAAE,IAAI,CAAC,CAAC,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA;;4FAE3D,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBALlC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,QAAQ,EAAE,0BAA0B;oBACpC,SAAS,EAAE,CAAC,UAAU,CAAC,aAAa,EAA0B,sBAAA,EAAA,IAAI,CAAC,CAAC;AACvE,iBAAA,CAAA;;;ACbD;;AAEG;;;;"}