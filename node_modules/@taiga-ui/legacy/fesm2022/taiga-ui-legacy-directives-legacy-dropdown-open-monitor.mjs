import * as i0 from '@angular/core';
import { inject, Directive } from '@angular/core';
import { takeUntilDestroyed } from '@angular/core/rxjs-interop';
import { tuiInjectElement } from '@taiga-ui/cdk/utils/dom';
import { tuiGetClosestFocusable } from '@taiga-ui/cdk/utils/focus';
import { TuiDropdownOpen, TuiDropdownOpenLegacy } from '@taiga-ui/core/directives/dropdown';
import { distinctUntilChanged } from 'rxjs';

class TuiLegacyDropdownOpenMonitorDirective {
    constructor() {
        this.el = tuiInjectElement();
        this.host = inject(TuiDropdownOpen, { self: true });
        this.external = inject(TuiDropdownOpenLegacy, {
            optional: true,
        });
        this.host.driver
            .pipe(distinctUntilChanged(), takeUntilDestroyed())
            .subscribe((open) => this.external?.tuiDropdownOpenChange.next(open));
        this.external?.tuiDropdownOpenChange
            .pipe(distinctUntilChanged(), takeUntilDestroyed())
            .subscribe((open) => {
            if (open) {
                tuiGetClosestFocusable({
                    initial: this.el,
                    root: this.el,
                })?.focus();
            }
            this.host.toggle(open);
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiLegacyDropdownOpenMonitorDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: TuiLegacyDropdownOpenMonitorDirective, isStandalone: true, selector: "[tuiDropdownOpenMonitor]", ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiLegacyDropdownOpenMonitorDirective, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                    selector: '[tuiDropdownOpenMonitor]',
                }]
        }], ctorParameters: function () { return []; } });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiLegacyDropdownOpenMonitorDirective };
//# sourceMappingURL=taiga-ui-legacy-directives-legacy-dropdown-open-monitor.mjs.map
