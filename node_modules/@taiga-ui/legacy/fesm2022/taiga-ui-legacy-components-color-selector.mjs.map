{"version":3,"file":"taiga-ui-legacy-components-color-selector.mjs","sources":["../../../projects/legacy/components/color-selector/color-edit/color-edit.component.ts","../../../projects/legacy/components/color-selector/color-edit/color-edit.template.html","../../../projects/legacy/components/color-selector/color-edit/color-edit.module.ts","../../../projects/legacy/components/color-selector/services/picker.service.ts","../../../projects/legacy/components/color-selector/flat-picker/flat-picker.component.ts","../../../projects/legacy/components/color-selector/flat-picker/flat-picker.template.html","../../../projects/legacy/components/color-selector/linear-picker/linear-picker.component.ts","../../../projects/legacy/components/color-selector/linear-picker/linear-picker.template.html","../../../projects/legacy/components/color-selector/color-picker/color-picker.component.ts","../../../projects/legacy/components/color-selector/color-picker/color-picker.template.html","../../../projects/legacy/components/color-selector/flat-picker/flat-picker.module.ts","../../../projects/legacy/components/color-selector/linear-picker/linear-picker.module.ts","../../../projects/legacy/components/color-selector/color-picker/color-picker.module.ts","../../../projects/legacy/components/color-selector/color-selector.options.ts","../../../projects/legacy/components/color-selector/linear-multi-picker/linear-multi-picker.component.ts","../../../projects/legacy/components/color-selector/linear-multi-picker/linear-multi-picker.template.html","../../../projects/legacy/components/color-selector/palette/palette.component.ts","../../../projects/legacy/components/color-selector/palette/palette.template.html","../../../projects/legacy/components/color-selector/color-selector.component.ts","../../../projects/legacy/components/color-selector/color-selector.template.html","../../../projects/legacy/components/color-selector/linear-multi-picker/linear-multi-picker.module.ts","../../../projects/legacy/components/color-selector/palette/palette.module.ts","../../../projects/legacy/components/color-selector/color-selector.module.ts","../../../projects/legacy/components/color-selector/taiga-ui-legacy-components-color-selector.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\nimport type {MaskitoOptions} from '@maskito/core';\nimport {tuiHexToRgb, tuiRgbToHex} from '@taiga-ui/cdk/utils/color';\n\nconst HEX_MODE_LENGTH = 6;\n\n@Component({\n    selector: 'tui-color-edit',\n    templateUrl: './color-edit.template.html',\n    styleUrls: ['./color-edit.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TuiColorEditComponent {\n    @Input()\n    public color: [number, number, number, number] = [0, 0, 0, 1];\n\n    @Output()\n    public readonly colorChange = new EventEmitter<[number, number, number, number]>();\n\n    public readonly hexMask: MaskitoOptions = {\n        mask: new RegExp(`^[A-F\\\\d]{0,${HEX_MODE_LENGTH}}$`, 'gi'),\n    };\n\n    public readonly modes = ['HEX', 'RGB'];\n\n    public mode = this.modes[0];\n\n    public get isHex(): boolean {\n        return this.mode === this.modes[0];\n    }\n\n    public get hex(): string {\n        return tuiRgbToHex(this.color[0], this.color[1], this.color[2]).replace('#', '');\n    }\n\n    public get opacity(): number {\n        return Math.round(this.color[3] * 100);\n    }\n\n    public onHexChange(hex: string): void {\n        if (hex.length !== HEX_MODE_LENGTH) {\n            return;\n        }\n\n        const rgb = tuiHexToRgb(hex);\n\n        this.updateColor([rgb[0], rgb[1], rgb[2], this.color[3]]);\n    }\n\n    public onRgbChange(...rgba: [number, number, number, number]): void {\n        this.updateColor(rgba);\n    }\n\n    private updateColor(color: [number, number, number, number]): void {\n        this.color = color;\n        this.colorChange.emit(color);\n    }\n}\n","<tui-select\n    tuiDropdownAlign=\"left\"\n    tuiDropdownLimitWidth=\"min\"\n    tuiTextfieldSize=\"m\"\n    class=\"t-select\"\n    [ngModelOptions]=\"{standalone: true}\"\n    [style.flex]=\"'0 0 auto'\"\n    [tuiTextfieldLabelOutside]=\"true\"\n    [(ngModel)]=\"mode\"\n>\n    <tui-data-list\n        *tuiDataList\n        size=\"s\"\n    >\n        <button\n            *ngFor=\"let item of modes\"\n            tuiOption\n            [value]=\"item\"\n        >\n            {{ item }}\n        </button>\n    </tui-data-list>\n</tui-select>\n<tui-primitive-textfield\n    *ngIf=\"isHex; else rgb\"\n    tuiTextfieldSize=\"m\"\n    [maskito]=\"hexMask\"\n    [tuiTextfieldLabelOutside]=\"true\"\n    [value]=\"hex\"\n    (valueChange)=\"onHexChange($event)\"\n/>\n<ng-template #rgb>\n    <tui-input-number\n        tuiTextfieldSize=\"m\"\n        class=\"t-rgb\"\n        [max]=\"255\"\n        [min]=\"0\"\n        [ngModel]=\"color[0]\"\n        [ngModelOptions]=\"{standalone: true}\"\n        [tuiTextfieldLabelOutside]=\"true\"\n        (ngModelChange)=\"onRgbChange($event, color[1], color[2], color[3])\"\n    />\n    <tui-input-number\n        tuiTextfieldSize=\"m\"\n        class=\"t-rgb\"\n        [max]=\"255\"\n        [min]=\"0\"\n        [ngModel]=\"color[1]\"\n        [ngModelOptions]=\"{standalone: true}\"\n        [tuiTextfieldLabelOutside]=\"true\"\n        (ngModelChange)=\"onRgbChange(color[0], $event, color[2], color[3])\"\n    />\n    <tui-input-number\n        tuiTextfieldSize=\"m\"\n        class=\"t-rgb\"\n        [max]=\"255\"\n        [min]=\"0\"\n        [ngModel]=\"color[2]\"\n        [ngModelOptions]=\"{standalone: true}\"\n        [tuiTextfieldLabelOutside]=\"true\"\n        (ngModelChange)=\"onRgbChange(color[0], color[1], $event, color[3])\"\n    />\n</ng-template>\n<tui-input-number\n    tuiTextfieldPostfix=\"%\"\n    tuiTextfieldSize=\"m\"\n    class=\"t-opacity\"\n    [max]=\"100\"\n    [min]=\"0\"\n    [ngModel]=\"opacity\"\n    [ngModelOptions]=\"{standalone: true}\"\n    [style.flex]=\"'0 0 auto'\"\n    [tuiTextfieldLabelOutside]=\"true\"\n    (ngModelChange)=\"onRgbChange(color[0], color[1], color[2], $event / 100)\"\n/>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {MaskitoDirective} from '@maskito/angular';\nimport {TuiButton} from '@taiga-ui/core/components/button';\nimport {TuiDataList} from '@taiga-ui/core/components/data-list';\nimport {TuiDropdown} from '@taiga-ui/core/directives/dropdown';\nimport {TuiInputNumberModule} from '@taiga-ui/legacy/components/input-number';\nimport {TuiPrimitiveTextfieldModule} from '@taiga-ui/legacy/components/primitive-textfield';\nimport {TuiSelectModule} from '@taiga-ui/legacy/components/select';\nimport {TuiTextfieldControllerModule} from '@taiga-ui/legacy/directives/textfield-controller';\n\nimport {TuiColorEditComponent} from './color-edit.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        MaskitoDirective,\n        TuiPrimitiveTextfieldModule,\n        TuiTextfieldControllerModule,\n        TuiInputNumberModule,\n        TuiSelectModule,\n        ...TuiDropdown,\n        ...TuiDataList,\n        TuiButton,\n    ],\n    declarations: [TuiColorEditComponent],\n    exports: [TuiColorEditComponent, ...TuiDropdown, ...TuiDataList],\n})\nexport class TuiColorEditModule {}\n","import {DOCUMENT} from '@angular/common';\nimport {inject, Injectable} from '@angular/core';\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\nimport {tuiPreventDefault, tuiTypedFromEvent} from '@taiga-ui/cdk/observables';\nimport {tuiGetElementPoint, tuiInjectElement} from '@taiga-ui/cdk/utils/dom';\nimport type {TuiPoint} from '@taiga-ui/core/types';\nimport {map, Observable, startWith, switchMap, takeUntil} from 'rxjs';\n\n@Injectable()\nexport class TuiPickerService extends Observable<TuiPoint> {\n    constructor() {\n        const nativeElement = tuiInjectElement();\n        const doc = inject(DOCUMENT);\n\n        const point$ = tuiTypedFromEvent(nativeElement, 'mousedown').pipe(\n            tuiPreventDefault(),\n            switchMap((event) => {\n                const mouseMove$ = tuiTypedFromEvent(doc, 'mousemove').pipe(\n                    map(({clientX, clientY}) =>\n                        tuiGetElementPoint(clientX, clientY, nativeElement),\n                    ),\n                    takeUntil(tuiTypedFromEvent(doc, 'mouseup')),\n                );\n\n                return event.target === nativeElement\n                    ? mouseMove$.pipe(\n                          startWith(\n                              tuiGetElementPoint(\n                                  event.clientX,\n                                  event.clientY,\n                                  nativeElement,\n                              ),\n                          ),\n                      )\n                    : mouseMove$;\n            }),\n            takeUntilDestroyed(),\n        );\n\n        super((subscriber) => point$.subscribe(subscriber));\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    inject,\n    Input,\n    Output,\n} from '@angular/core';\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\nimport type {TuiPoint} from '@taiga-ui/core/types';\n\nimport {TuiPickerService} from '../services/picker.service';\n\n@Component({\n    selector: 'tui-flat-picker',\n    templateUrl: './flat-picker.template.html',\n    styleUrls: ['./flat-picker.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [TuiPickerService],\n})\nexport class TuiFlatPickerComponent {\n    @Input()\n    public value: TuiPoint = [0, 0];\n\n    @Output()\n    public readonly valueChange = new EventEmitter<[number, number]>();\n\n    constructor() {\n        inject(TuiPickerService)\n            .pipe(takeUntilDestroyed())\n            .subscribe((point) => {\n                this.value = point;\n                this.valueChange.emit([point[0], point[1]]);\n            });\n    }\n\n    public get left(): number {\n        return this.value[0] * 100;\n    }\n\n    public get top(): number {\n        return this.value[1] * 100;\n    }\n}\n","<div\n    class=\"t-circle\"\n    [style.left.%]=\"left\"\n    [style.top.%]=\"top\"\n></div>\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    inject,\n    Input,\n    Output,\n} from '@angular/core';\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\n\nimport {TuiPickerService} from '../services/picker.service';\n\n@Component({\n    selector: 'tui-linear-picker',\n    templateUrl: './linear-picker.template.html',\n    styleUrls: ['./linear-picker.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [TuiPickerService],\n})\nexport class TuiLinearPickerComponent {\n    @Input()\n    public value = 0;\n\n    @Output()\n    public readonly valueChange = new EventEmitter<number>();\n\n    constructor() {\n        inject(TuiPickerService)\n            .pipe(takeUntilDestroyed())\n            .subscribe(([x]) => {\n                this.value = x;\n                this.valueChange.emit(x);\n            });\n    }\n\n    public get left(): number {\n        return this.value * 100;\n    }\n}\n","<div\n    class=\"t-circle\"\n    [style.left.%]=\"left\"\n></div>\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    inject,\n    Input,\n    Output,\n} from '@angular/core';\nimport type {SafeStyle} from '@angular/platform-browser';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {tuiHsvToRgb, tuiRgbToHsv} from '@taiga-ui/cdk/utils/color';\nimport {tuiRound} from '@taiga-ui/cdk/utils/math';\nimport {tuiPure} from '@taiga-ui/cdk/utils/miscellaneous';\nimport type {TuiPoint} from '@taiga-ui/core/types';\n\n@Component({\n    selector: 'tui-color-picker',\n    templateUrl: './color-picker.template.html',\n    styleUrls: ['./color-picker.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TuiColorPickerComponent {\n    private readonly sanitizer = inject(DomSanitizer);\n\n    protected point: TuiPoint = [0, 1];\n    protected hue = 0;\n    protected opacity = 1;\n\n    @Output()\n    public readonly colorChange = new EventEmitter<\n        [h: number, s: number, v: number, opacity: number]\n    >();\n\n    @Input()\n    public set color(color: [h: number, s: number, v: number, opacity: number]) {\n        if (\n            this.currentColor.every((item, index) => item === color[index]) &&\n            color[3] === this.opacity\n        ) {\n            return;\n        }\n\n        const [h, s, v] = tuiRgbToHsv(color[0], color[1], color[2]);\n\n        this.opacity = color[3];\n        this.hue = h / 360;\n        this.point = [s, 1 - v / 255];\n    }\n\n    public get currentColor(): [h: number, s: number, v: number] {\n        return this.getCurrentColor(this.hue, this.point);\n    }\n\n    public get base(): string {\n        return `rgb(${tuiHsvToRgb(this.hue * 360, 1, 255)})`;\n    }\n\n    public get gradient(): SafeStyle {\n        return this.sanitizer.bypassSecurityTrustStyle(\n            `linear-gradient(to right, rgba(${this.currentColor.join(\n                ',',\n            )}, 0), rgb(${this.currentColor.join(',')}))`,\n        );\n    }\n\n    public onPointChange(point: TuiPoint): void {\n        this.point = point;\n        this.updateColor();\n    }\n\n    public onHueChange(hue: number): void {\n        this.hue = hue;\n        this.updateColor();\n    }\n\n    public onOpacityChange(opacity: number): void {\n        this.opacity = tuiRound(opacity, 2);\n        this.updateColor();\n    }\n\n    @tuiPure\n    private getCurrentColor(\n        hue: number,\n        point: TuiPoint,\n    ): [h: number, s: number, v: number] {\n        return tuiHsvToRgb(hue * 360, point[0], (1 - point[1]) * 255);\n    }\n\n    private updateColor(): void {\n        this.colorChange.emit([...this.currentColor, this.opacity]);\n    }\n}\n","<tui-flat-picker\n    class=\"t-flat\"\n    [style.backgroundColor]=\"base\"\n    [value]=\"point\"\n    (valueChange)=\"onPointChange($event)\"\n/>\n<div class=\"t-wrapper t-wrapper_hue\">\n    <tui-linear-picker\n        class=\"t-hue\"\n        [value]=\"hue\"\n        (valueChange)=\"onHueChange($event)\"\n    />\n</div>\n<div\n    class=\"t-wrapper t-wrapper_opacity\"\n    [style.background]=\"gradient\"\n>\n    <tui-linear-picker\n        class=\"t-opacity\"\n        [value]=\"opacity\"\n        (valueChange)=\"onOpacityChange($event)\"\n    />\n</div>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {TuiFlatPickerComponent} from './flat-picker.component';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [TuiFlatPickerComponent],\n    exports: [TuiFlatPickerComponent],\n})\nexport class TuiFlatPickerModule {}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {TuiLinearPickerComponent} from './linear-picker.component';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [TuiLinearPickerComponent],\n    exports: [TuiLinearPickerComponent],\n})\nexport class TuiLinearPickerModule {}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {TuiFlatPickerModule} from '../flat-picker/flat-picker.module';\nimport {TuiLinearPickerModule} from '../linear-picker/linear-picker.module';\nimport {TuiColorPickerComponent} from './color-picker.component';\n\n@NgModule({\n    imports: [CommonModule, TuiFlatPickerModule, TuiLinearPickerModule],\n    declarations: [TuiColorPickerComponent],\n    exports: [TuiColorPickerComponent],\n})\nexport class TuiColorPickerModule {}\n","import type {Provider} from '@angular/core';\nimport {InjectionToken} from '@angular/core';\nimport type {TuiGradientDirection} from '@taiga-ui/cdk/utils/color';\nimport {tuiCreateToken, tuiProvideOptions} from '@taiga-ui/cdk/utils/miscellaneous';\n\nexport const TUI_COLOR_SELECTOR_MODE_NAMES = new InjectionToken<[string, string]>(\n    '[TUI_COLOR_SELECTOR_MODE_NAMES]',\n    {\n        factory: () => ['Solid color', 'Gradient'],\n    },\n);\n\nexport const TUI_DEFAULT_INPUT_COLORS = new Map([\n    ['color-black-100', '#909090'],\n    ['color-black-200', '#666666'],\n    ['color-black-300', '#333333'],\n    ['color-blue-100', '#1771e6'],\n    ['color-blue-200', '#1464cc'],\n    ['color-blue-300', '#0953b3'],\n    ['color-gray-100', '#f5f5f6'],\n    ['color-gray-200', '#e7e8ea'],\n    ['color-gray-300', '#cbcfd3'],\n    ['color-gray-400', '#959ba4'],\n    ['color-gray-500', '#79818c'],\n    ['color-gray-600', '#616871'],\n    ['color-green-100', '#39b54a'],\n    ['color-green-200', '#2ca53a'],\n    ['color-green-300', '#168a21'],\n    ['color-light-blue-100', '#ecf1f7'],\n    ['color-light-blue-200', '#e4ebf3'],\n    ['color-light-blue-300', '#dde4ed'],\n    ['color-red-100', '#e01f19'],\n    ['color-red-200', '#d3120e'],\n    ['color-red-300', '#c40b08'],\n    ['color-yellow-100', '#FFDD2C'],\n    ['color-yellow-200', '#FCC521'],\n    ['color-yellow-300', '#FAB618'],\n    ['transparent', 'transparent'],\n]);\n\nexport const TuiColorSelectorMode = {\n    SolidColor: 0,\n    Gradient: 1,\n} as const;\n\nexport interface TuiColorSelectorOptions {\n    readonly mode: (typeof TuiColorSelectorMode)[keyof typeof TuiColorSelectorMode];\n    readonly selectorMode: boolean;\n    readonly color: [number, number, number, number];\n    readonly colors: ReadonlyMap<string, string>;\n    readonly gradient: {\n        readonly icons: Record<TuiGradientDirection, string>;\n        readonly steps: ReadonlyArray<[number, [number, number, number, number]]>;\n        readonly stop: number;\n        readonly direction: TuiGradientDirection;\n        readonly emptyStop: [number, number, number, number];\n        readonly buttons: readonly TuiGradientDirection[];\n    };\n}\n\nexport const TUI_COLOR_SELECTOR_DEFAULT_OPTIONS: TuiColorSelectorOptions = {\n    selectorMode: true,\n    mode: TuiColorSelectorMode.SolidColor,\n    color: [0, 0, 0, 1],\n    colors: new Map<string, string>(),\n    gradient: {\n        icons: {\n            'to top right': '@tui.move-up-right',\n            'to right': '@tui.move-right',\n            'to bottom right': '@tui.move-down-right',\n            'to bottom': '@tui.move-down',\n            'to bottom left': '@tui.move-down-left',\n            'to left': '@tui.move-left',\n            'to top left': '@tui.move-up-left',\n            'to top': '@tui.move-up',\n        },\n        steps: [\n            [0, [0, 0, 0, 1]],\n            [1, [255, 255, 255, 1]],\n        ],\n        stop: 0,\n        direction: 'to bottom',\n        emptyStop: [0, 0, 0, 0],\n        buttons: [\n            'to top right',\n            'to right',\n            'to bottom right',\n            'to bottom',\n            'to bottom left',\n            'to left',\n            'to top left',\n            'to top',\n        ],\n    },\n};\n\nexport const TUI_COLOR_SELECTOR_OPTIONS = tuiCreateToken(\n    TUI_COLOR_SELECTOR_DEFAULT_OPTIONS,\n);\n\nexport function tuiColorSelectorOptionsProvider(\n    options: Partial<TuiColorSelectorOptions>,\n): Provider {\n    return tuiProvideOptions(\n        TUI_COLOR_SELECTOR_OPTIONS,\n        options,\n        TUI_COLOR_SELECTOR_DEFAULT_OPTIONS,\n    );\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    inject,\n    Input,\n    Output,\n} from '@angular/core';\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\n\nimport {TuiPickerService} from '../services/picker.service';\n\n@Component({\n    selector: 'tui-linear-multi-picker',\n    templateUrl: './linear-multi-picker.template.html',\n    styleUrls: ['./linear-multi-picker.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [TuiPickerService],\n    host: {\n        '(document:mouseup)': 'onMouseUp()',\n    },\n})\nexport class TuiLinearMultiPickerComponent {\n    @Input()\n    public value = [0, 1];\n\n    @Output()\n    public readonly valueChange = new EventEmitter<number[]>();\n\n    @Output()\n    public readonly indexChange = new EventEmitter<number>();\n\n    public index = NaN;\n\n    constructor() {\n        inject(TuiPickerService)\n            .pipe(takeUntilDestroyed())\n            .subscribe(([x]) => this.onPicker(x));\n    }\n\n    public onMouseUp(): void {\n        this.index = NaN;\n    }\n\n    public onMouseDown(index: number): void {\n        this.updateIndex(index);\n    }\n\n    public onClick(index: number): void {\n        if (this.value.length > 2) {\n            this.updateValue(this.value.filter((_, i) => i !== index));\n        }\n    }\n\n    private onPicker(x: number): void {\n        if (Number.isNaN(this.index)) {\n            this.updateIndex(this.value.length);\n            this.value = [...this.value, 0];\n        }\n\n        if (this.value.some((item, index) => item === x && index !== this.index)) {\n            return;\n        }\n\n        this.updateValue(\n            this.value.map((item, index) => (index === this.index ? x : item)),\n        );\n    }\n\n    private updateIndex(index: number): void {\n        this.index = index;\n        this.indexChange.emit(index);\n    }\n\n    private updateValue(value: number[]): void {\n        this.value = value;\n        this.valueChange.emit(value);\n    }\n}\n","<div\n    *ngFor=\"let item of value; let index = index\"\n    class=\"t-circle\"\n    [style.left.%]=\"item * 100\"\n    (dblclick)=\"onClick(index)\"\n    (mousedown)=\"onMouseDown(index)\"\n></div>\n","import type {KeyValue} from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\n@Component({\n    selector: 'tui-palette',\n    templateUrl: './palette.template.html',\n    styleUrls: ['./palette.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TuiPaletteComponent {\n    @Input()\n    public colors: ReadonlyMap<string, string> = new Map<string, string>();\n\n    @Output()\n    public readonly selectedColor = new EventEmitter<string>();\n\n    public originalOrder = (\n        _a: KeyValue<string, string>,\n        _b: KeyValue<string, string>,\n    ): number => 0;\n}\n","<button\n    *ngFor=\"let color of colors | keyvalue: originalOrder\"\n    type=\"button\"\n    class=\"t-button\"\n    [id]=\"color.key\"\n    [style.background]=\"color.value\"\n    [tuiHint]=\"color.key\"\n    [tuiHintDescribe]=\"color.key\"\n    (click)=\"selectedColor.emit(color.value)\"\n></button>\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    inject,\n    Input,\n    Output,\n} from '@angular/core';\nimport type {SafeStyle} from '@angular/platform-browser';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport type {TuiGradientDirection} from '@taiga-ui/cdk/utils/color';\nimport {\n    tuiGetGradientData,\n    tuiParseColor,\n    tuiParseGradient,\n} from '@taiga-ui/cdk/utils/color';\nimport {tuiDefaultSort, tuiPure} from '@taiga-ui/cdk/utils/miscellaneous';\n\nimport {\n    TUI_COLOR_SELECTOR_MODE_NAMES,\n    TUI_COLOR_SELECTOR_OPTIONS,\n    TuiColorSelectorMode,\n} from './color-selector.options';\n\n@Component({\n    selector: 'tui-color-selector',\n    templateUrl: './color-selector.template.html',\n    styleUrls: ['./color-selector.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TuiColorSelectorComponent {\n    private readonly selectorOptions = inject(TUI_COLOR_SELECTOR_OPTIONS);\n    private stops = new Map(this.selectorOptions.gradient.steps);\n    private currentStop = this.selectorOptions.gradient.stop;\n    private direction = this.selectorOptions.gradient.direction;\n\n    private readonly sanitizer = inject(DomSanitizer);\n    protected open = false;\n\n    @Input()\n    public colors = this.selectorOptions.colors;\n\n    @Output()\n    public readonly colorChange = new EventEmitter<string>();\n\n    public color = this.selectorOptions.color;\n\n    public readonly modes = inject(TUI_COLOR_SELECTOR_MODE_NAMES);\n\n    public currentMode = this.modes[this.selectorOptions.mode];\n\n    public readonly buttons = this.selectorOptions.gradient.buttons;\n\n    @Input('color')\n    public set colorSetter(color: string) {\n        if (color.startsWith('linear-gradient')) {\n            this.parseGradient(color);\n        } else {\n            this.parseColor(color);\n        }\n    }\n\n    public get selectorMode(): boolean {\n        return this.selectorOptions.selectorMode;\n    }\n\n    public get palette(): Map<string, string> {\n        return this.filterPalette(this.colors, this.isGradient);\n    }\n\n    public get stopsKeys(): number[] {\n        return this.getStopsKeys(this.stops);\n    }\n\n    public get currentColor(): [number, number, number, number] {\n        return this.isGradient ? this.getStop(this.currentStop) : this.color;\n    }\n\n    public get gradient(): SafeStyle {\n        return this.sanitizer.bypassSecurityTrustStyle(this.getGradient('to right'));\n    }\n\n    public get isGradient(): boolean {\n        return this.currentMode === this.modes[TuiColorSelectorMode.Gradient];\n    }\n\n    public getIcon(direction: TuiGradientDirection): string {\n        return this.selectorOptions.gradient.icons[direction];\n    }\n\n    public isModeActive(mode: string): boolean {\n        return this.currentMode === mode;\n    }\n\n    public isDirectionActive(direction: TuiGradientDirection): boolean {\n        return this.direction === direction;\n    }\n\n    public onPalettePick(color: string): void {\n        this.updateColor(color);\n    }\n\n    public onDirectionChange(direction: TuiGradientDirection): void {\n        this.direction = direction;\n        this.updateColor(this.getGradient(direction));\n    }\n\n    public onModeSelect(mode: string): void {\n        this.currentMode = mode;\n        this.open = false;\n\n        this.updateColor(\n            mode === this.modes[TuiColorSelectorMode.SolidColor]\n                ? `rgba(${this.color.join(', ')})`\n                : this.getGradient(this.direction),\n        );\n    }\n\n    public onIndexChange(index: number): void {\n        this.currentStop = this.stopsKeys[index] ?? 0;\n    }\n\n    public onColorChange(color: [number, number, number, number]): void {\n        if (!this.isGradient) {\n            this.updateColor(`rgba(${color.join(', ')})`);\n\n            return;\n        }\n\n        this.stops.set(this.currentStop, color);\n        this.updateColor(this.getGradient(this.direction));\n    }\n\n    public onStopsChange(stopsKeys: readonly number[]): void {\n        const removed = this.stopsKeys.find((item) => !stopsKeys.includes(item));\n        const added = stopsKeys.find((item) => !this.stopsKeys.includes(item));\n\n        if (removed === undefined && added !== undefined) {\n            this.addStop(added);\n        }\n\n        if (removed !== undefined && added === undefined) {\n            this.removeStop(removed);\n        }\n\n        if (removed !== undefined && added !== undefined) {\n            this.replaceStop(removed, added);\n        }\n\n        this.updateColor(this.getGradient(this.direction));\n    }\n\n    @tuiPure\n    private getStopsKeys(stops: Map<number, unknown>): number[] {\n        return Array.from(stops.keys());\n    }\n\n    @tuiPure\n    private filterPalette(\n        colors: ReadonlyMap<string, string>,\n        isGradient: boolean,\n    ): Map<string, string> {\n        const map = new Map(colors);\n\n        map.forEach((value, key) => {\n            if (\n                (value.startsWith('linear-gradient') && !isGradient) ||\n                (!value.startsWith('linear-gradient') && isGradient)\n            ) {\n                map.delete(key);\n            }\n        });\n\n        return map;\n    }\n\n    private updateColor(color: string): void {\n        this.colorChange.emit(color);\n    }\n\n    private getGradient(direction: TuiGradientDirection): string {\n        return `linear-gradient(${direction}, ${[...this.stopsKeys]\n            .sort(tuiDefaultSort)\n            .map((key) => `rgba(${this.getStop(key).join(', ')}) ${key * 100}%`)\n            .join(', ')})`;\n    }\n\n    private getStop(stop: number): [number, number, number, number] {\n        return this.stops.get(stop) || this.selectorOptions.gradient.emptyStop;\n    }\n\n    private addStop(stop: number): void {\n        const closest = this.stopsKeys.reduce(\n            (prev, curr) => (Math.abs(curr - stop) < Math.abs(prev - stop) ? curr : prev),\n            this.stopsKeys[0] ?? 0,\n        );\n\n        this.stops.set(stop, this.getStop(closest));\n        this.stops = new Map(this.stops);\n        this.currentStop = stop;\n    }\n\n    private removeStop(stop: number): void {\n        this.stops.delete(stop);\n        this.stops = new Map(this.stops);\n        this.currentStop = this.stopsKeys[0] ?? 0;\n    }\n\n    private replaceStop(removed: number, added: number): void {\n        const value = this.getStop(removed);\n\n        this.currentStop = added;\n        this.stops = new Map(\n            this.stopsKeys.map<[number, [number, number, number, number]]>((key) =>\n                key === removed ? [added, value] : [key, this.getStop(key)],\n            ),\n        );\n    }\n\n    private parseGradient(color: string): void {\n        if (color === this.getGradient(this.direction)) {\n            return;\n        }\n\n        const gradient = tuiParseGradient(tuiGetGradientData(color));\n\n        this.direction = gradient.side;\n        this.currentStop = this.selectorOptions.gradient.stop;\n        this.stops = new Map(\n            gradient.stops.length\n                ? gradient.stops.map<[number, [number, number, number, number]]>(\n                      ({color, position}) => [\n                          parseFloat(position) / 100,\n                          tuiParseColor(color),\n                      ],\n                  )\n                : this.selectorOptions.gradient.steps,\n        );\n    }\n\n    private parseColor(color: string): void {\n        this.currentStop = this.selectorOptions.gradient.stop;\n        this.color = tuiParseColor(color);\n    }\n}\n","<ng-container *ngIf=\"selectorMode\">\n    <div\n        class=\"t-select\"\n        [tuiDropdown]=\"menu\"\n        [(tuiDropdownOpen)]=\"open\"\n    >\n        <button\n            appearance=\"\"\n            size=\"s\"\n            tuiButton\n            tuiChevron\n            type=\"button\"\n        >\n            {{ currentMode }}\n        </button>\n\n        <ng-template #menu>\n            <tui-data-list\n                role=\"menu\"\n                size=\"s\"\n                class=\"t-menu\"\n            >\n                <button\n                    *ngFor=\"let mode of modes\"\n                    role=\"menuitemradio\"\n                    tuiOption\n                    [attr.aria-checked]=\"isModeActive(mode)\"\n                    (click)=\"onModeSelect(mode)\"\n                    (keydown.enter.prevent)=\"onModeSelect(mode)\"\n                    (keydown.space.prevent)=\"onModeSelect(mode)\"\n                >\n                    {{ mode }}\n                    <tui-icon\n                        *ngIf=\"isModeActive(mode)\"\n                        icon=\"@tui.check\"\n                        class=\"t-checkmark\"\n                    />\n                </button>\n            </tui-data-list>\n        </ng-template>\n    </div>\n    <hr class=\"t-hr\" />\n</ng-container>\n\n<ng-container *ngIf=\"isGradient\">\n    <div\n        class=\"t-wrapper\"\n        [style.background]=\"gradient\"\n    >\n        <tui-linear-multi-picker\n            class=\"t-gradient\"\n            [value]=\"stopsKeys\"\n            (indexChange)=\"onIndexChange($event)\"\n            (valueChange)=\"onStopsChange($event)\"\n        />\n    </div>\n    <div class=\"t-buttons\">\n        <!-- TODO: Change to `tuiHintDescribe` when figure tuiDriver order issue -->\n        <button\n            *ngFor=\"let button of buttons\"\n            appearance=\"\"\n            size=\"xs\"\n            tuiHintDescribe\n            tuiIconButton\n            type=\"button\"\n            class=\"t-direction\"\n            [class.t-direction_active]=\"isDirectionActive(button)\"\n            [iconStart]=\"getIcon(button)\"\n            [tuiHint]=\"button\"\n            (click)=\"onDirectionChange(button)\"\n        ></button>\n    </div>\n</ng-container>\n<tui-color-picker\n    [color]=\"currentColor\"\n    (colorChange)=\"onColorChange($event)\"\n/>\n<tui-color-edit\n    *ngIf=\"!isGradient\"\n    tuiGroup\n    class=\"t-edit\"\n    [color]=\"color\"\n    (colorChange)=\"onColorChange($event)\"\n/>\n<tui-palette\n    *ngIf=\"palette.size\"\n    class=\"t-palette\"\n    [colors]=\"palette\"\n    (selectedColor)=\"onPalettePick($event)\"\n/>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {TuiLinearMultiPickerComponent} from './linear-multi-picker.component';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [TuiLinearMultiPickerComponent],\n    exports: [TuiLinearMultiPickerComponent],\n})\nexport class TuiLinearMultiPickerModule {}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TuiHint} from '@taiga-ui/core/directives/hint';\n\nimport {TuiPaletteComponent} from './palette.component';\n\n@NgModule({\n    imports: [CommonModule, ...TuiHint],\n    declarations: [TuiPaletteComponent],\n    exports: [TuiPaletteComponent, ...TuiHint],\n})\nexport class TuiPaletteModule {}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TuiActiveZone} from '@taiga-ui/cdk/directives/active-zone';\nimport {TuiButton} from '@taiga-ui/core/components/button';\nimport {TuiDataList} from '@taiga-ui/core/components/data-list';\nimport {TuiIcon} from '@taiga-ui/core/components/icon';\nimport {TuiGroup} from '@taiga-ui/core/directives/group';\nimport {TuiHint} from '@taiga-ui/core/directives/hint';\nimport {TuiChevron} from '@taiga-ui/kit/directives/chevron';\nimport {TuiSvgComponent} from '@taiga-ui/legacy/components/svg';\n\nimport {TuiColorEditModule} from './color-edit/color-edit.module';\nimport {TuiColorPickerModule} from './color-picker/color-picker.module';\nimport {TuiColorSelectorComponent} from './color-selector.component';\nimport {TuiLinearMultiPickerModule} from './linear-multi-picker/linear-multi-picker.module';\nimport {TuiPaletteModule} from './palette/palette.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        TuiButton,\n        TuiSvgComponent,\n        TuiColorPickerModule,\n        TuiLinearMultiPickerModule,\n        TuiActiveZone,\n        TuiColorEditModule,\n        TuiGroup,\n        TuiPaletteModule,\n        TuiChevron,\n        TuiIcon,\n        ...TuiHint,\n        ...TuiDataList,\n    ],\n    declarations: [TuiColorSelectorComponent],\n    exports: [TuiColorSelectorComponent, ...TuiHint, ...TuiDataList],\n})\nexport class TuiColorSelectorModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i8","i9","i1","i2","i1.TuiFlatPickerComponent","i2.TuiLinearPickerComponent","i3.TuiColorPickerComponent","i4.TuiLinearMultiPickerComponent","i5.TuiColorEditComponent","i6","i7","i9.TuiPaletteComponent","i10"],"mappings":"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"}