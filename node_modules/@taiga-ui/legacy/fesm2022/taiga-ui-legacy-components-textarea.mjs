import * as i0 from '@angular/core';
import { inject, ElementRef, Component, ChangeDetectionStrategy, ViewChild, ContentChild, Input, Directive, NgModule } from '@angular/core';
import { TUI_IS_IOS } from '@taiga-ui/cdk/tokens';
import { tuiIsNativeFocused } from '@taiga-ui/cdk/utils/focus';
import { TUI_TEXTFIELD_OPTIONS } from '@taiga-ui/core/components/textfield';
import { TuiHintOptionsDirective } from '@taiga-ui/core/directives/hint';
import { AbstractTuiControl, tuiAsControl, AbstractTuiTextfieldHost } from '@taiga-ui/legacy/classes';
import { TUI_ICON_START_PADDINGS, TuiTextfieldComponent, TuiPrimitiveTextfieldModule } from '@taiga-ui/legacy/components/primitive-textfield';
import * as i5 from '@taiga-ui/legacy/directives';
import { TUI_TEXTFIELD_WATCHED_CONTROLLER, TEXTFIELD_CONTROLLER_PROVIDER, TuiWrapperModule } from '@taiga-ui/legacy/directives';
import { tuiAsFocusableItemAccessor, tuiAsTextfieldHost } from '@taiga-ui/legacy/tokens';
import { tuiGetBorder } from '@taiga-ui/legacy/utils';
import * as i1 from '@angular/common';
import { CommonModule } from '@angular/common';
import * as i2 from '@angular/forms';
import { FormsModule } from '@angular/forms';
import * as i3 from '@taiga-ui/core/components/scrollbar';
import { TuiScrollbar } from '@taiga-ui/core/components/scrollbar';
import * as i4 from '@taiga-ui/legacy/components/tooltip';
import { TuiTooltipModule } from '@taiga-ui/legacy/components/tooltip';
import * as i6 from '@taiga-ui/polymorpheus';
import { PolymorpheusOutlet, PolymorpheusTemplate } from '@taiga-ui/polymorpheus';
import * as i7 from '@taiga-ui/core/components/icon';
import { TuiIcon } from '@taiga-ui/core/components/icon';
import * as i8 from '@taiga-ui/core/directives/appearance';
import { TuiAppearance } from '@taiga-ui/core/directives/appearance';

const DEFAULT_ROWS = 20;
const LINE_HEIGHT_M = 20;
const LINE_HEIGHT_L = 24;
class TuiTextareaComponent extends AbstractTuiControl {
    constructor() {
        super(...arguments);
        this.options = inject(TUI_TEXTFIELD_OPTIONS);
        this.isIOS = inject(TUI_IS_IOS);
        this.controller = inject(TUI_TEXTFIELD_WATCHED_CONTROLLER);
        this.hintOptions = inject(TuiHintOptionsDirective, { optional: true });
        this.rows = DEFAULT_ROWS;
        this.maxLength = null;
        this.expandable = false;
    }
    get nativeFocusableElement() {
        if (this.computedDisabled) {
            return null;
        }
        return (this.textfield?.nativeElement || this.focusableElement?.nativeElement || null);
    }
    get focused() {
        return tuiIsNativeFocused(this.nativeFocusableElement);
    }
    get computeMaxHeight() {
        return this.expandable ? this.rows * this.lineHeight : null;
    }
    onValueChange(value) {
        this.value = value;
    }
    get labelOutside() {
        return this.options.appearance() === 'table' || this.controller.labelOutside;
    }
    get size() {
        return this.controller.size;
    }
    get borderStart() {
        return this.iconLeftContent ? TUI_ICON_START_PADDINGS[this.size] : 0;
    }
    get borderEnd() {
        return tuiGetBorder(!!this.iconContent, this.hasCleaner, this.hasTooltip, this.hasCustomContent, this.size);
    }
    get hasTooltip() {
        return (!!this.hintOptions?.content &&
            (this.controller.options.hintOnDisabled || !this.computedDisabled));
    }
    get hasValue() {
        return this.value !== '';
    }
    get hasCounter() {
        return !!this.maxLength && this.interactive;
    }
    get appearance() {
        return this.options.appearance() === 'table'
            ? 'table'
            : this.controller.appearance;
    }
    get hasCleaner() {
        return this.controller.cleaner && this.hasValue && this.interactive;
    }
    get hasPlaceholder() {
        return this.placeholderRaisable || (!this.hasValue && !this.hasExampleText);
    }
    get hasCustomContent() {
        return !!this.controller.customContent;
    }
    get iconLeftContent() {
        return this.controller.iconStart;
    }
    get iconContent() {
        return this.controller.icon;
    }
    get iconCleaner() {
        return this.controller.options.iconCleaner;
    }
    get hasExampleText() {
        return (!!this.textfield?.nativeElement.placeholder &&
            this.focused &&
            !this.hasValue &&
            !this.readOnly);
    }
    get placeholderRaised() {
        return (this.placeholderRaisable &&
            ((this.computedFocused && !this.readOnly) || this.hasValue));
    }
    get fittedContent() {
        return this.value.slice(0, this.maxLength || Infinity);
    }
    get extraContent() {
        return this.value.slice(this.maxLength || Infinity);
    }
    onFocused(focused) {
        this.updateFocused(focused);
    }
    onMouseDown(event) {
        if (event.target === this.nativeFocusableElement) {
            return;
        }
        event.preventDefault();
        if (this.nativeFocusableElement) {
            this.nativeFocusableElement.focus();
        }
    }
    getFallbackValue() {
        return '';
    }
    get lineHeight() {
        return this.controller.size === 'm' ? LINE_HEIGHT_M : LINE_HEIGHT_L;
    }
    get placeholderRaisable() {
        return this.size !== 's' && !this.controller.labelOutside;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiTextareaComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiTextareaComponent, selector: "tui-textarea", inputs: { rows: "rows", maxLength: "maxLength", expandable: "expandable" }, host: { listeners: { "focusin": "onFocused(true)", "focusout": "onFocused(false)" }, properties: { "attr.data-size": "size", "class._ios": "isIOS", "class._expandable": "expandable", "class._has-counter": "hasCounter", "class._label-outside": "labelOutside", "class._has-tooltip": "hasTooltip", "class._has-value": "hasValue", "style.--border-end.rem": "borderEnd", "style.--border-start.rem": "borderStart" } }, providers: [
            tuiAsFocusableItemAccessor(TuiTextareaComponent),
            tuiAsControl(TuiTextareaComponent),
            TEXTFIELD_CONTROLLER_PROVIDER,
        ], queries: [{ propertyName: "textfield", first: true, predicate: TuiTextfieldComponent, descendants: true, read: ElementRef }], viewQueries: [{ propertyName: "focusableElement", first: true, predicate: ["focusableElement"], descendants: true }], usesInheritance: true, ngImport: i0, template: "<ng-container *ngIf=\"hintOptions?.change$ | async\" />\n<div\n    automation-id=\"tui-text-area__wrapper\"\n    tuiWrapper\n    class=\"t-outline\"\n    [appearance]=\"appearance\"\n    [disabled]=\"disabled\"\n    [focus]=\"computedFocused\"\n    [hover]=\"pseudoHover\"\n    [invalid]=\"computedInvalid\"\n    [readOnly]=\"readOnly\"\n>\n    <div\n        *ngIf=\"hasCounter\"\n        automation-id=\"tui-text-area__counter\"\n        class=\"t-counter\"\n    >\n        {{ value.length }}/{{ maxLength }}\n    </div>\n\n    <label\n        class=\"t-content\"\n        (mousedown)=\"onMouseDown($event)\"\n    >\n        <div class=\"t-wrapper\">\n            <div\n                *ngIf=\"hasPlaceholder\"\n                automation-id=\"tui-text-area__placeholder\"\n                class=\"t-placeholder\"\n                [class.t-placeholder_raised]=\"placeholderRaised\"\n            >\n                <ng-content />\n            </div>\n            <tui-scrollbar\n                automation-id=\"tui-text-area__scrollbar\"\n                class=\"t-box\"\n                [style.maxHeight.px]=\"computeMaxHeight\"\n            >\n                <div class=\"t-input-wrapper\">\n                    <div class=\"t-relative\">\n                        <div\n                            aria-hidden=\"true\"\n                            class=\"t-pseudo-content\"\n                        >\n                            <span [textContent]=\"fittedContent || nativeFocusableElement?.placeholder\"></span>\n                            <span\n                                class=\"t-pseudo-content__extra\"\n                                [textContent]=\"extraContent\"\n                            ></span>\n                            <span class=\"t-caret\"></span>\n                        </div>\n                        <textarea\n                            #focusableElement\n                            automation-id=\"tui-text-area__native\"\n                            class=\"t-input\"\n                            [disabled]=\"computedDisabled\"\n                            [id]=\"id\"\n                            [ngModelOptions]=\"{standalone: true}\"\n                            [readOnly]=\"readOnly\"\n                            [tabIndex]=\"computedFocusable ? 0 : -1\"\n                            [(ngModel)]=\"value\"\n                        ></textarea>\n                        <ng-content select=\"textarea\" />\n                    </div>\n                </div>\n            </tui-scrollbar>\n        </div>\n        <div class=\"t-icons\">\n            <div\n                *ngIf=\"iconLeftContent\"\n                class=\"t-icon t-icon_left t-textfield-icon\"\n            >\n                <tui-icon\n                    *polymorpheusOutlet=\"iconLeftContent as src; context: {$implicit: size}\"\n                    tuiAppearance=\"icon\"\n                    [icon]=\"src.toString()\"\n                />\n            </div>\n            <ng-container *ngIf=\"hasCustomContent\">\n                <tui-icon\n                    *polymorpheusOutlet=\"controller.customContent as src\"\n                    [icon]=\"src\"\n                />\n            </ng-container>\n            <ng-container *ngIf=\"hasCleaner\">\n                <tui-icon\n                    *polymorpheusOutlet=\"iconCleaner as src; context: {$implicit: size}\"\n                    tuiAppearance=\"icon\"\n                    class=\"t-cleaner\"\n                    [icon]=\"src.toString()\"\n                    (click.stop)=\"onValueChange('')\"\n                />\n            </ng-container>\n            <tui-tooltip\n                *ngIf=\"hasTooltip\"\n                automation-id=\"tui-text-area__tooltip\"\n                [content]=\"hintOptions?.content\"\n                [describeId]=\"id\"\n            />\n            <div\n                *ngIf=\"iconContent\"\n                class=\"t-icon t-textfield-icon\"\n            >\n                <tui-icon\n                    *polymorpheusOutlet=\"iconContent as src; context: {$implicit: size}\"\n                    tuiAppearance=\"icon\"\n                    [icon]=\"src.toString()\"\n                />\n            </div>\n        </div>\n    </label>\n</div>\n", styles: [":host{position:relative;z-index:0;display:flex;flex-direction:column;min-block-size:var(--tui-textarea-height);border-radius:var(--tui-radius-m);color:var(--tui-text-primary)}:host[data-size=s]{--tui-height: var(--tui-height-s);--tui-textarea-height: 4.5625rem;font:var(--tui-font-text-s)}:host[data-size=m]{--tui-height: var(--tui-height-m);--tui-textarea-height: 5.5rem;font:var(--tui-font-text-s)}:host[data-size=l]{--tui-height: var(--tui-height-l);--tui-textarea-height: 6.75rem;font:var(--tui-font-text-m)}:host[data-size=m]._has-counter{--tui-textarea-height: 6.625rem}:host[data-size=l]._has-counter{--tui-textarea-height: 7.875rem}@supports (-webkit-hyphens: none){:host .t-pseudo-content,:host .t-input{text-wrap:balance}}.t-outline{min-block-size:inherit}.t-content{display:block;margin-top:0;margin-bottom:0;min-block-size:inherit;box-sizing:border-box;overflow:hidden;cursor:text}:host._disabled .t-content{cursor:auto;opacity:var(--tui-disabled-opacity)}:host:not(._expandable) .t-content{position:absolute;top:0;left:0;bottom:1px;right:0;min-block-size:auto}:host._has-counter:not(._expandable) .t-content{bottom:1.6875rem}:host._label-outside._has-counter:not(._expandable) .t-content{bottom:1rem}.t-wrapper{position:relative;inline-size:100%;block-size:100%;min-block-size:inherit;box-sizing:border-box;padding:calc((var(--tui-height) - 1.25rem) / 2) 0}:host[data-size=l]._label-outside .t-wrapper{padding:calc((var(--tui-height) - 1.5rem) / 2) 0}:host[data-size=m]:not(._label-outside) .t-wrapper{padding:calc((var(--tui-height) - 2.25rem) / 2) 0}:host[data-size=l]:not(._label-outside) .t-wrapper{padding:calc((var(--tui-height) - 2.625rem) / 2) 0}:host-context(table)[data-size=m]._label-outside .t-wrapper{padding-bottom:.75rem}:host-context(table)[data-size=l]._label-outside .t-wrapper{padding-bottom:1rem}.t-input-wrapper{min-block-size:inherit;inline-size:100%;flex:1}.t-relative{position:relative;min-block-size:inherit}.t-box{display:flex;min-block-size:calc(100% - 1rem);inline-size:100%}:host:not(._expandable) .t-box{block-size:calc(100% - 1rem)}:host:not(._expandable)._label-outside .t-box{block-size:100%}:host._has-counter._expandable .t-box{margin-bottom:1.25rem}:host[data-size=m]:not(._label-outside) .t-box{border-block-start:1rem solid transparent}:host[data-size=l]:not(._label-outside) .t-box{border-block-start:1.25rem solid transparent}.t-pseudo-content{white-space:pre-wrap;word-wrap:break-word;word-break:keep-all;pointer-events:none;color:transparent;overflow:hidden;border:0 solid transparent;border-inline-start-width:var(--border-start, 0);border-inline-end-width:var(--border-end, 0)}:host[data-size=s] .t-pseudo-content,:host[data-size=m] .t-pseudo-content{padding:0 .75rem}:host[data-size=l] .t-pseudo-content{padding:0 1rem}.t-pseudo-content__extra{background-color:var(--tui-status-negative-pale)}.t-input{padding:0;margin:0;border-width:0;border-radius:inherit;background:none;font-size:inherit;line-height:inherit;font-weight:inherit;color:inherit;caret-color:currentColor;-webkit-appearance:none;appearance:none;word-break:keep-all;-webkit-text-fill-color:currentColor;position:absolute;top:0;left:0;inline-size:100%;block-size:100%;box-sizing:border-box;resize:none;overflow:hidden;outline:none;border-style:solid;border-color:transparent;border-inline-start-width:var(--border-start, 0);border-inline-end-width:var(--border-end, 0)}.t-input:-webkit-autofill,.t-input:-webkit-autofill:hover,.t-input:-webkit-autofill:focus{-webkit-text-fill-color:var(--tui-text-primary)!important;border-color:var(--tui-service-autofill-background);box-shadow:0 0 0 100rem var(--tui-service-autofill-background) inset!important}.t-input:not(:last-of-type){display:none}.t-input::placeholder{color:var(--tui-text-tertiary);opacity:0}:host._focused .t-input:not(:read-only)::placeholder{opacity:1}:host[data-size=s] .t-input,:host[data-size=m] .t-input{padding:0 .75rem;font:var(--tui-font-text-s)}:host[data-size=l] .t-input{padding:0 1rem;font:var(--tui-font-text-m)}@supports (-webkit-marquee-repetition: infinite) and (object-fit: fill){:host._ios .t-input{padding-left:.8125rem}}.t-placeholder{transition-property:transform,font-size,color,letter-spacing;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;inline-size:100%;-webkit-user-select:none;user-select:none;font:var(--tui-font-text-s);color:var(--tui-text-secondary);pointer-events:none;will-change:transform;transform:translateY(0);position:absolute;top:calc(var(--tui-height) / 2 - .625rem);left:0;max-inline-size:100%;border:0 solid transparent;border-inline-start-width:var(--border-start, 0);border-inline-end-width:var(--border-end, 0);box-sizing:border-box}@supports (-webkit-hyphens: none){.t-placeholder{will-change:unset;transition-property:transform,color,letter-spacing}}.t-placeholder_raised{transform:translateY(-.625rem)}:host[data-size=m] .t-placeholder_raised{font:var(--tui-font-text-xs);line-height:1.25rem;transform:translateY(-.5rem);letter-spacing:.025rem}:host._invalid:not(._focused) .t-placeholder_raised,:host._invalid:not(._focused):hover .t-placeholder_raised{color:var(--tui-text-negative)}:host._focused .t-placeholder,:host[data-size=m]._focused._label-outside .t-placeholder,:host[data-size=l]._focused._label-outside .t-placeholder{color:var(--tui-text-tertiary)}:host[data-size=l] .t-placeholder{font:var(--tui-font-text-m);line-height:1.25rem}:host[data-size=l] .t-placeholder_raised{font-size:.8156rem}:host[data-size=m]._focused:not(._label-outside) .t-placeholder,:host[data-size=l]._focused:not(._label-outside) .t-placeholder{color:var(--tui-text-primary)}:host[data-size=s] .t-placeholder{padding:0 .75rem}:host[data-size=m] .t-placeholder{padding:0 .75rem}:host[data-size=l] .t-placeholder{padding:0 1rem}:host._label-outside .t-placeholder{overflow:initial;block-size:auto;white-space:initial}.t-icons{position:absolute;top:0;left:0;bottom:0;right:0;display:flex;justify-content:flex-end;pointer-events:none;padding:calc((var(--tui-height) - 1.5rem) / 2) 1rem}:host[data-size=m] .t-icons{padding:calc((var(--tui-height) - 1.5rem) / 2) .625rem}.t-icons>:not(:first-child){margin-inline-start:.25rem}.t-icon{position:relative;display:flex;inline-size:1.5rem;block-size:1.5rem;align-items:center;justify-content:center;box-sizing:border-box;cursor:pointer;pointer-events:none}.t-icon_left{margin-inline-end:auto}.t-cleaner{position:relative;display:flex;inline-size:1.5rem;block-size:1.5rem;align-items:center;justify-content:center;box-sizing:border-box;cursor:pointer;pointer-events:none;pointer-events:auto;border:.25rem solid transparent}:host._readonly .t-cleaner,:host._disabled .t-cleaner{pointer-events:none}.t-caret{display:inline-block;block-size:1rem;inline-size:0}.t-counter{position:absolute;right:.75rem;bottom:.5rem;font:var(--tui-font-text-s);pointer-events:none;margin-top:auto;text-align:end;color:var(--tui-text-tertiary)}\n"], dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: i3.TuiScrollbar, selector: "tui-scrollbar", inputs: ["hidden"] }, { kind: "component", type: i4.TuiTooltipComponent, selector: "tui-tooltip", inputs: ["content", "direction", "appearance", "showDelay", "hideDelay", "describeId", "context"] }, { kind: "directive", type: i5.TuiWrapperDirective, selector: "[tuiWrapper]", inputs: ["disabled", "readOnly", "hover", "active", "focus", "invalid", "appearance"] }, { kind: "directive", type: i6.PolymorpheusOutlet, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { kind: "component", type: i7.TuiIcon, selector: "tui-icon", inputs: ["icon", "background"] }, { kind: "directive", type: i8.TuiAppearance, selector: "[tuiAppearance]", inputs: ["tuiAppearance", "tuiAppearanceState", "tuiAppearanceFocus"] }, { kind: "pipe", type: i1.AsyncPipe, name: "async" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiTextareaComponent, decorators: [{
            type: Component,
            args: [{ selector: 'tui-textarea', changeDetection: ChangeDetectionStrategy.OnPush, providers: [
                        tuiAsFocusableItemAccessor(TuiTextareaComponent),
                        tuiAsControl(TuiTextareaComponent),
                        TEXTFIELD_CONTROLLER_PROVIDER,
                    ], host: {
                        '[attr.data-size]': 'size',
                        '[class._ios]': 'isIOS',
                        '[class._expandable]': 'expandable',
                        '[class._has-counter]': 'hasCounter',
                        '[class._label-outside]': 'labelOutside',
                        '[class._has-tooltip]': 'hasTooltip',
                        '[class._has-value]': 'hasValue',
                        '[style.--border-end.rem]': 'borderEnd',
                        '[style.--border-start.rem]': 'borderStart',
                        '(focusin)': 'onFocused(true)',
                        '(focusout)': 'onFocused(false)',
                    }, template: "<ng-container *ngIf=\"hintOptions?.change$ | async\" />\n<div\n    automation-id=\"tui-text-area__wrapper\"\n    tuiWrapper\n    class=\"t-outline\"\n    [appearance]=\"appearance\"\n    [disabled]=\"disabled\"\n    [focus]=\"computedFocused\"\n    [hover]=\"pseudoHover\"\n    [invalid]=\"computedInvalid\"\n    [readOnly]=\"readOnly\"\n>\n    <div\n        *ngIf=\"hasCounter\"\n        automation-id=\"tui-text-area__counter\"\n        class=\"t-counter\"\n    >\n        {{ value.length }}/{{ maxLength }}\n    </div>\n\n    <label\n        class=\"t-content\"\n        (mousedown)=\"onMouseDown($event)\"\n    >\n        <div class=\"t-wrapper\">\n            <div\n                *ngIf=\"hasPlaceholder\"\n                automation-id=\"tui-text-area__placeholder\"\n                class=\"t-placeholder\"\n                [class.t-placeholder_raised]=\"placeholderRaised\"\n            >\n                <ng-content />\n            </div>\n            <tui-scrollbar\n                automation-id=\"tui-text-area__scrollbar\"\n                class=\"t-box\"\n                [style.maxHeight.px]=\"computeMaxHeight\"\n            >\n                <div class=\"t-input-wrapper\">\n                    <div class=\"t-relative\">\n                        <div\n                            aria-hidden=\"true\"\n                            class=\"t-pseudo-content\"\n                        >\n                            <span [textContent]=\"fittedContent || nativeFocusableElement?.placeholder\"></span>\n                            <span\n                                class=\"t-pseudo-content__extra\"\n                                [textContent]=\"extraContent\"\n                            ></span>\n                            <span class=\"t-caret\"></span>\n                        </div>\n                        <textarea\n                            #focusableElement\n                            automation-id=\"tui-text-area__native\"\n                            class=\"t-input\"\n                            [disabled]=\"computedDisabled\"\n                            [id]=\"id\"\n                            [ngModelOptions]=\"{standalone: true}\"\n                            [readOnly]=\"readOnly\"\n                            [tabIndex]=\"computedFocusable ? 0 : -1\"\n                            [(ngModel)]=\"value\"\n                        ></textarea>\n                        <ng-content select=\"textarea\" />\n                    </div>\n                </div>\n            </tui-scrollbar>\n        </div>\n        <div class=\"t-icons\">\n            <div\n                *ngIf=\"iconLeftContent\"\n                class=\"t-icon t-icon_left t-textfield-icon\"\n            >\n                <tui-icon\n                    *polymorpheusOutlet=\"iconLeftContent as src; context: {$implicit: size}\"\n                    tuiAppearance=\"icon\"\n                    [icon]=\"src.toString()\"\n                />\n            </div>\n            <ng-container *ngIf=\"hasCustomContent\">\n                <tui-icon\n                    *polymorpheusOutlet=\"controller.customContent as src\"\n                    [icon]=\"src\"\n                />\n            </ng-container>\n            <ng-container *ngIf=\"hasCleaner\">\n                <tui-icon\n                    *polymorpheusOutlet=\"iconCleaner as src; context: {$implicit: size}\"\n                    tuiAppearance=\"icon\"\n                    class=\"t-cleaner\"\n                    [icon]=\"src.toString()\"\n                    (click.stop)=\"onValueChange('')\"\n                />\n            </ng-container>\n            <tui-tooltip\n                *ngIf=\"hasTooltip\"\n                automation-id=\"tui-text-area__tooltip\"\n                [content]=\"hintOptions?.content\"\n                [describeId]=\"id\"\n            />\n            <div\n                *ngIf=\"iconContent\"\n                class=\"t-icon t-textfield-icon\"\n            >\n                <tui-icon\n                    *polymorpheusOutlet=\"iconContent as src; context: {$implicit: size}\"\n                    tuiAppearance=\"icon\"\n                    [icon]=\"src.toString()\"\n                />\n            </div>\n        </div>\n    </label>\n</div>\n", styles: [":host{position:relative;z-index:0;display:flex;flex-direction:column;min-block-size:var(--tui-textarea-height);border-radius:var(--tui-radius-m);color:var(--tui-text-primary)}:host[data-size=s]{--tui-height: var(--tui-height-s);--tui-textarea-height: 4.5625rem;font:var(--tui-font-text-s)}:host[data-size=m]{--tui-height: var(--tui-height-m);--tui-textarea-height: 5.5rem;font:var(--tui-font-text-s)}:host[data-size=l]{--tui-height: var(--tui-height-l);--tui-textarea-height: 6.75rem;font:var(--tui-font-text-m)}:host[data-size=m]._has-counter{--tui-textarea-height: 6.625rem}:host[data-size=l]._has-counter{--tui-textarea-height: 7.875rem}@supports (-webkit-hyphens: none){:host .t-pseudo-content,:host .t-input{text-wrap:balance}}.t-outline{min-block-size:inherit}.t-content{display:block;margin-top:0;margin-bottom:0;min-block-size:inherit;box-sizing:border-box;overflow:hidden;cursor:text}:host._disabled .t-content{cursor:auto;opacity:var(--tui-disabled-opacity)}:host:not(._expandable) .t-content{position:absolute;top:0;left:0;bottom:1px;right:0;min-block-size:auto}:host._has-counter:not(._expandable) .t-content{bottom:1.6875rem}:host._label-outside._has-counter:not(._expandable) .t-content{bottom:1rem}.t-wrapper{position:relative;inline-size:100%;block-size:100%;min-block-size:inherit;box-sizing:border-box;padding:calc((var(--tui-height) - 1.25rem) / 2) 0}:host[data-size=l]._label-outside .t-wrapper{padding:calc((var(--tui-height) - 1.5rem) / 2) 0}:host[data-size=m]:not(._label-outside) .t-wrapper{padding:calc((var(--tui-height) - 2.25rem) / 2) 0}:host[data-size=l]:not(._label-outside) .t-wrapper{padding:calc((var(--tui-height) - 2.625rem) / 2) 0}:host-context(table)[data-size=m]._label-outside .t-wrapper{padding-bottom:.75rem}:host-context(table)[data-size=l]._label-outside .t-wrapper{padding-bottom:1rem}.t-input-wrapper{min-block-size:inherit;inline-size:100%;flex:1}.t-relative{position:relative;min-block-size:inherit}.t-box{display:flex;min-block-size:calc(100% - 1rem);inline-size:100%}:host:not(._expandable) .t-box{block-size:calc(100% - 1rem)}:host:not(._expandable)._label-outside .t-box{block-size:100%}:host._has-counter._expandable .t-box{margin-bottom:1.25rem}:host[data-size=m]:not(._label-outside) .t-box{border-block-start:1rem solid transparent}:host[data-size=l]:not(._label-outside) .t-box{border-block-start:1.25rem solid transparent}.t-pseudo-content{white-space:pre-wrap;word-wrap:break-word;word-break:keep-all;pointer-events:none;color:transparent;overflow:hidden;border:0 solid transparent;border-inline-start-width:var(--border-start, 0);border-inline-end-width:var(--border-end, 0)}:host[data-size=s] .t-pseudo-content,:host[data-size=m] .t-pseudo-content{padding:0 .75rem}:host[data-size=l] .t-pseudo-content{padding:0 1rem}.t-pseudo-content__extra{background-color:var(--tui-status-negative-pale)}.t-input{padding:0;margin:0;border-width:0;border-radius:inherit;background:none;font-size:inherit;line-height:inherit;font-weight:inherit;color:inherit;caret-color:currentColor;-webkit-appearance:none;appearance:none;word-break:keep-all;-webkit-text-fill-color:currentColor;position:absolute;top:0;left:0;inline-size:100%;block-size:100%;box-sizing:border-box;resize:none;overflow:hidden;outline:none;border-style:solid;border-color:transparent;border-inline-start-width:var(--border-start, 0);border-inline-end-width:var(--border-end, 0)}.t-input:-webkit-autofill,.t-input:-webkit-autofill:hover,.t-input:-webkit-autofill:focus{-webkit-text-fill-color:var(--tui-text-primary)!important;border-color:var(--tui-service-autofill-background);box-shadow:0 0 0 100rem var(--tui-service-autofill-background) inset!important}.t-input:not(:last-of-type){display:none}.t-input::placeholder{color:var(--tui-text-tertiary);opacity:0}:host._focused .t-input:not(:read-only)::placeholder{opacity:1}:host[data-size=s] .t-input,:host[data-size=m] .t-input{padding:0 .75rem;font:var(--tui-font-text-s)}:host[data-size=l] .t-input{padding:0 1rem;font:var(--tui-font-text-m)}@supports (-webkit-marquee-repetition: infinite) and (object-fit: fill){:host._ios .t-input{padding-left:.8125rem}}.t-placeholder{transition-property:transform,font-size,color,letter-spacing;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;inline-size:100%;-webkit-user-select:none;user-select:none;font:var(--tui-font-text-s);color:var(--tui-text-secondary);pointer-events:none;will-change:transform;transform:translateY(0);position:absolute;top:calc(var(--tui-height) / 2 - .625rem);left:0;max-inline-size:100%;border:0 solid transparent;border-inline-start-width:var(--border-start, 0);border-inline-end-width:var(--border-end, 0);box-sizing:border-box}@supports (-webkit-hyphens: none){.t-placeholder{will-change:unset;transition-property:transform,color,letter-spacing}}.t-placeholder_raised{transform:translateY(-.625rem)}:host[data-size=m] .t-placeholder_raised{font:var(--tui-font-text-xs);line-height:1.25rem;transform:translateY(-.5rem);letter-spacing:.025rem}:host._invalid:not(._focused) .t-placeholder_raised,:host._invalid:not(._focused):hover .t-placeholder_raised{color:var(--tui-text-negative)}:host._focused .t-placeholder,:host[data-size=m]._focused._label-outside .t-placeholder,:host[data-size=l]._focused._label-outside .t-placeholder{color:var(--tui-text-tertiary)}:host[data-size=l] .t-placeholder{font:var(--tui-font-text-m);line-height:1.25rem}:host[data-size=l] .t-placeholder_raised{font-size:.8156rem}:host[data-size=m]._focused:not(._label-outside) .t-placeholder,:host[data-size=l]._focused:not(._label-outside) .t-placeholder{color:var(--tui-text-primary)}:host[data-size=s] .t-placeholder{padding:0 .75rem}:host[data-size=m] .t-placeholder{padding:0 .75rem}:host[data-size=l] .t-placeholder{padding:0 1rem}:host._label-outside .t-placeholder{overflow:initial;block-size:auto;white-space:initial}.t-icons{position:absolute;top:0;left:0;bottom:0;right:0;display:flex;justify-content:flex-end;pointer-events:none;padding:calc((var(--tui-height) - 1.5rem) / 2) 1rem}:host[data-size=m] .t-icons{padding:calc((var(--tui-height) - 1.5rem) / 2) .625rem}.t-icons>:not(:first-child){margin-inline-start:.25rem}.t-icon{position:relative;display:flex;inline-size:1.5rem;block-size:1.5rem;align-items:center;justify-content:center;box-sizing:border-box;cursor:pointer;pointer-events:none}.t-icon_left{margin-inline-end:auto}.t-cleaner{position:relative;display:flex;inline-size:1.5rem;block-size:1.5rem;align-items:center;justify-content:center;box-sizing:border-box;cursor:pointer;pointer-events:none;pointer-events:auto;border:.25rem solid transparent}:host._readonly .t-cleaner,:host._disabled .t-cleaner{pointer-events:none}.t-caret{display:inline-block;block-size:1rem;inline-size:0}.t-counter{position:absolute;right:.75rem;bottom:.5rem;font:var(--tui-font-text-s);pointer-events:none;margin-top:auto;text-align:end;color:var(--tui-text-tertiary)}\n"] }]
        }], propDecorators: { focusableElement: [{
                type: ViewChild,
                args: ['focusableElement']
            }], textfield: [{
                type: ContentChild,
                args: [TuiTextfieldComponent, { read: ElementRef }]
            }], rows: [{
                type: Input
            }], maxLength: [{
                type: Input
            }], expandable: [{
                type: Input
            }] } });

class TuiTextareaDirective extends AbstractTuiTextfieldHost {
    onValueChange(value) {
        this.host.onValueChange(value);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiTextareaDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: TuiTextareaDirective, selector: "tui-textarea", providers: [tuiAsTextfieldHost(TuiTextareaDirective)], usesInheritance: true, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiTextareaDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'tui-textarea',
                    providers: [tuiAsTextfieldHost(TuiTextareaDirective)],
                }]
        }] });

class TuiTextareaModule {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiTextareaModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: TuiTextareaModule, declarations: [TuiTextareaComponent, TuiTextareaDirective], imports: [CommonModule,
            FormsModule,
            TuiScrollbar,
            TuiTooltipModule,
            TuiWrapperModule,
            TuiPrimitiveTextfieldModule,
            PolymorpheusOutlet,
            PolymorpheusTemplate,
            TuiIcon,
            TuiAppearance], exports: [TuiTextareaComponent,
            TuiTextareaDirective,
            TuiTextfieldComponent,
            PolymorpheusOutlet,
            PolymorpheusTemplate] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiTextareaModule, imports: [CommonModule,
            FormsModule,
            TuiScrollbar,
            TuiTooltipModule,
            TuiWrapperModule,
            TuiPrimitiveTextfieldModule,
            TuiIcon] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiTextareaModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        FormsModule,
                        TuiScrollbar,
                        TuiTooltipModule,
                        TuiWrapperModule,
                        TuiPrimitiveTextfieldModule,
                        PolymorpheusOutlet,
                        PolymorpheusTemplate,
                        TuiIcon,
                        TuiAppearance,
                    ],
                    declarations: [TuiTextareaComponent, TuiTextareaDirective],
                    exports: [
                        TuiTextareaComponent,
                        TuiTextareaDirective,
                        TuiTextfieldComponent,
                        PolymorpheusOutlet,
                        PolymorpheusTemplate,
                    ],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { DEFAULT_ROWS, LINE_HEIGHT_L, LINE_HEIGHT_M, TuiTextareaComponent, TuiTextareaDirective, TuiTextareaModule };
//# sourceMappingURL=taiga-ui-legacy-components-textarea.mjs.map
