import * as i0 from '@angular/core';
import { inject, Component, ChangeDetectionStrategy, ViewChild, Input, NgModule } from '@angular/core';
import { TUI_IS_MOBILE } from '@taiga-ui/cdk/tokens';
import * as i1$1 from '@taiga-ui/core/directives/hint';
import { TuiHintOptionsDirective, TuiHintHover, TuiHint } from '@taiga-ui/core/directives/hint';
import * as i1 from '@taiga-ui/core/components/icon';
import { TuiIcon } from '@taiga-ui/core/components/icon';
import * as i2 from '@taiga-ui/polymorpheus';
import { PolymorpheusOutlet } from '@taiga-ui/polymorpheus';
import * as i3 from '@taiga-ui/core/directives/appearance';
import { TuiAppearance } from '@taiga-ui/core/directives/appearance';
import * as i5 from '@angular/common';
import { CommonModule } from '@angular/common';

/**
 * @deprecated: drop in v5.0 use {@link TuiTooltip}
 * https://taiga-ui.dev/components/tooltip
 */
class TuiTooltipComponent extends TuiHintOptionsDirective {
    constructor() {
        super(...arguments);
        this.isMobile = inject(TUI_IS_MOBILE);
        this.describeId = '';
    }
    get computedAppearance() {
        return this.appearance || '';
    }
    stopOnMobile(event) {
        if (this.isMobile) {
            event.preventDefault();
            event.stopPropagation();
        }
        this.driver$?.toggle();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiTooltipComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiTooltipComponent, selector: "tui-tooltip", inputs: { content: "content", direction: "direction", appearance: "appearance", showDelay: "showDelay", hideDelay: "hideDelay", describeId: "describeId", context: "context" }, host: { listeners: { "mousedown": "stopOnMobile($event)" }, properties: { "attr.data-appearance": "computedAppearance" } }, viewQueries: [{ propertyName: "driver$", first: true, predicate: TuiHintHover, descendants: true }], usesInheritance: true, ngImport: i0, template: "<span\n    #driver=\"tuiHintHover\"\n    automation-id=\"tui-tooltip__icon\"\n    tuiAppearance=\"icon\"\n    class=\"t-tooltip-icon\"\n    [tuiAppearanceState]=\"(driver | async) ? 'hover' : null\"\n    [tuiHint]=\"content\"\n    [tuiHintAppearance]=\"computedAppearance\"\n    [tuiHintContext]=\"context\"\n    [tuiHintDescribe]=\"describeId\"\n    [tuiHintDirection]=\"direction\"\n    [tuiHintHideDelay]=\"hideDelay\"\n    [tuiHintShowDelay]=\"showDelay\"\n>\n    <tui-icon\n        *polymorpheusOutlet=\"icon as src\"\n        class=\"t-icon\"\n        [icon]=\"src\"\n    />\n</span>\n", styles: [":host{transition-property:color;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:relative;display:inline-block;inline-size:1.5rem;block-size:1.5rem;vertical-align:middle;font-size:0;line-height:0;pointer-events:auto;cursor:pointer;color:var(--tui-text-primary)}:host[data-appearance=error]{color:var(--tui-text-negative)}.t-tooltip-icon{display:inline-block;inline-size:100%;block-size:100%}.t-icon{border:.25rem solid transparent}\n"], dependencies: [{ kind: "component", type: i1.TuiIcon, selector: "tui-icon", inputs: ["icon", "background"] }, { kind: "directive", type: i2.PolymorpheusOutlet, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { kind: "directive", type: i3.TuiAppearance, selector: "[tuiAppearance]", inputs: ["tuiAppearance", "tuiAppearanceState", "tuiAppearanceFocus"] }, { kind: "directive", type: i1$1.TuiHintDirective, selector: "[tuiHint]:not(ng-container):not(ng-template)", inputs: ["tuiHintContext", "tuiHintAppearance", "tuiHint"] }, { kind: "directive", type: i1$1.TuiHintDescribe, selector: "[tuiHintDescribe]", inputs: ["tuiHintDescribe"] }, { kind: "pipe", type: i5.AsyncPipe, name: "async" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiTooltipComponent, decorators: [{
            type: Component,
            args: [{ selector: 'tui-tooltip', changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['content', 'direction', 'appearance', 'showDelay', 'hideDelay'], host: {
                        '[attr.data-appearance]': 'computedAppearance',
                        '(mousedown)': 'stopOnMobile($event)',
                    }, template: "<span\n    #driver=\"tuiHintHover\"\n    automation-id=\"tui-tooltip__icon\"\n    tuiAppearance=\"icon\"\n    class=\"t-tooltip-icon\"\n    [tuiAppearanceState]=\"(driver | async) ? 'hover' : null\"\n    [tuiHint]=\"content\"\n    [tuiHintAppearance]=\"computedAppearance\"\n    [tuiHintContext]=\"context\"\n    [tuiHintDescribe]=\"describeId\"\n    [tuiHintDirection]=\"direction\"\n    [tuiHintHideDelay]=\"hideDelay\"\n    [tuiHintShowDelay]=\"showDelay\"\n>\n    <tui-icon\n        *polymorpheusOutlet=\"icon as src\"\n        class=\"t-icon\"\n        [icon]=\"src\"\n    />\n</span>\n", styles: [":host{transition-property:color;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:relative;display:inline-block;inline-size:1.5rem;block-size:1.5rem;vertical-align:middle;font-size:0;line-height:0;pointer-events:auto;cursor:pointer;color:var(--tui-text-primary)}:host[data-appearance=error]{color:var(--tui-text-negative)}.t-tooltip-icon{display:inline-block;inline-size:100%;block-size:100%}.t-icon{border:.25rem solid transparent}\n"] }]
        }], propDecorators: { driver$: [{
                type: ViewChild,
                args: [TuiHintHover]
            }], describeId: [{
                type: Input
            }], context: [{
                type: Input
            }] } });

/**
 * @deprecated: drop in v5.0 use {@link TuiTooltip}
 * https://taiga-ui.dev/components/tooltip
 */
class TuiTooltipModule {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiTooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: TuiTooltipModule, declarations: [TuiTooltipComponent], imports: [CommonModule, TuiIcon, PolymorpheusOutlet, TuiAppearance, i1$1.TuiHintComponent, i1$1.TuiHintDirective, i1$1.TuiHintOptionsDirective, i1$1.TuiHintUnstyled, i1$1.TuiHintDriver, i1$1.TuiHintPosition, i1$1.TuiHintHover, i1$1.TuiHintOverflow, i1$1.TuiHintDescribe, i1$1.TuiHintHost, i1$1.TuiHintManual, i1$1.TuiHintPointer], exports: [TuiTooltipComponent] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiTooltipModule, imports: [CommonModule, TuiIcon, i1$1.TuiHintComponent] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiTooltipModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, TuiIcon, PolymorpheusOutlet, TuiAppearance, ...TuiHint],
                    declarations: [TuiTooltipComponent],
                    exports: [TuiTooltipComponent],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiTooltipComponent, TuiTooltipModule };
//# sourceMappingURL=taiga-ui-legacy-components-tooltip.mjs.map
