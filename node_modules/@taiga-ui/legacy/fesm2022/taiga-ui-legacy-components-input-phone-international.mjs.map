{"version":3,"file":"taiga-ui-legacy-components-input-phone-international.mjs","sources":["../../../projects/legacy/components/input-phone-international/input-phone-international.options.ts","../../../projects/legacy/components/input-phone-international/utils/extract-value-from-event.ts","../../../projects/legacy/components/input-phone-international/input-phone-international.component.ts","../../../projects/legacy/components/input-phone-international/input-phone-international.template.html","../../../projects/legacy/components/input-phone-international/taiga-ui-legacy-components-input-phone-international.ts"],"sourcesContent":["import type {Provider} from '@angular/core';\nimport {tuiCreateToken, tuiProvideOptions} from '@taiga-ui/cdk/utils/miscellaneous';\nimport type {TuiCountryIsoCode} from '@taiga-ui/i18n/types';\n\n/**\n * @deprecated: drop in v5.0 use {@link TuiInputPhoneInternational}\n * https://taiga-ui.dev/components/input-phone-international\n */\nexport interface TuiInputPhoneInternationalOptions {\n    readonly countries: readonly TuiCountryIsoCode[];\n    readonly countryIsoCode: TuiCountryIsoCode;\n}\n\n/**\n * @deprecated: drop in v5.0 use {@link TuiInputPhoneInternational}\n * https://taiga-ui.dev/components/input-phone-international\n */\nexport const TUI_INPUT_PHONE_INTERNATIONAL_DEFAULT_OPTIONS: TuiInputPhoneInternationalOptions =\n    {\n        countries: [],\n        countryIsoCode: 'RU',\n    };\n\n/**\n * @deprecated: drop in v5.0 use {@link TuiInputPhoneInternational}\n * https://taiga-ui.dev/components/input-phone-international\n */\nexport const TUI_INPUT_PHONE_INTERNATIONAL_OPTIONS = tuiCreateToken(\n    TUI_INPUT_PHONE_INTERNATIONAL_DEFAULT_OPTIONS,\n);\n\n/**\n * @deprecated: drop in v5.0 use {@link TuiInputPhoneInternational}\n * https://taiga-ui.dev/components/input-phone-international\n */\nexport function tuiInputPhoneInternationalOptionsProvider(\n    options: Partial<TuiInputPhoneInternationalOptions>,\n): Provider {\n    return tuiProvideOptions(\n        TUI_INPUT_PHONE_INTERNATIONAL_OPTIONS,\n        options,\n        TUI_INPUT_PHONE_INTERNATIONAL_DEFAULT_OPTIONS,\n    );\n}\n","import {tuiGetClipboardDataText} from '@taiga-ui/cdk/utils/dom';\n\n/**\n * @deprecated: drop in v5.0\n */\nexport function tuiExtractValueFromEvent(event: ClipboardEvent | DragEvent): string {\n    return 'dataTransfer' in event\n        ? event.dataTransfer?.getData('text/plain') || ''\n        : tuiGetClipboardDataText(event);\n}\n","import {CommonModule} from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    inject,\n    Input,\n    Output,\n    ViewChild,\n} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {CHAR_PLUS, TUI_NON_DIGITS_REGEXP} from '@taiga-ui/cdk/constants';\nimport type {TuiContext} from '@taiga-ui/cdk/types';\nimport {tuiPure} from '@taiga-ui/cdk/utils/miscellaneous';\nimport {TuiButton} from '@taiga-ui/core/components/button';\nimport {TuiDataList} from '@taiga-ui/core/components/data-list';\nimport {TuiAppearance} from '@taiga-ui/core/directives/appearance';\nimport {TuiDropdown} from '@taiga-ui/core/directives/dropdown';\nimport {TuiGroup} from '@taiga-ui/core/directives/group';\nimport {TuiHint} from '@taiga-ui/core/directives/hint';\nimport {TuiFlagPipe} from '@taiga-ui/core/pipes/flag';\nimport type {TuiSizeL, TuiSizeM, TuiSizeS} from '@taiga-ui/core/types';\nimport type {TuiCountryIsoCode} from '@taiga-ui/i18n/types';\nimport {TUI_COUNTRIES} from '@taiga-ui/kit/tokens';\nimport {AbstractTuiControl, tuiAsControl} from '@taiga-ui/legacy/classes';\nimport {TUI_ARROW, TuiArrowComponent} from '@taiga-ui/legacy/components/arrow';\nimport {\n    TuiInputPhoneComponent,\n    TuiInputPhoneModule,\n} from '@taiga-ui/legacy/components/input-phone';\nimport {\n    TuiPrimitiveTextfieldComponent,\n    TuiPrimitiveTextfieldModule,\n} from '@taiga-ui/legacy/components/primitive-textfield';\nimport {\n    TUI_TEXTFIELD_SIZE,\n    TuiLegacyDropdownOpenMonitorDirective,\n    TuiTextfieldControllerModule,\n} from '@taiga-ui/legacy/directives';\nimport {TuiIsoToCountryCodePipe, TuiToCountryCodePipe} from '@taiga-ui/legacy/pipes';\nimport type {TuiFocusableElementAccessor} from '@taiga-ui/legacy/tokens';\nimport {TUI_COUNTRIES_MASKS, tuiAsFocusableItemAccessor} from '@taiga-ui/legacy/tokens';\nimport {\n    FIXED_DROPDOWN_CONTROLLER_PROVIDER,\n    tuiGetMaxAllowedPhoneLength,\n    tuiIsoToCountryCode,\n} from '@taiga-ui/legacy/utils';\nimport type {PolymorpheusContent} from '@taiga-ui/polymorpheus';\nimport {PolymorpheusOutlet, PolymorpheusTemplate} from '@taiga-ui/polymorpheus';\n\nimport {TUI_INPUT_PHONE_INTERNATIONAL_OPTIONS} from './input-phone-international.options';\nimport {tuiExtractValueFromEvent} from './utils/extract-value-from-event';\n\nconst MASK_SYMBOLS = /[ \\-_()]/g;\n\n/**\n * @deprecated: drop in v5.0 use {@link TuiInputPhoneInternational}\n * https://taiga-ui.dev/components/input-phone-international\n */\n@Component({\n    standalone: true,\n    selector: 'tui-input-phone-international',\n    imports: [\n        CommonModule,\n        FormsModule,\n        PolymorpheusOutlet,\n        PolymorpheusTemplate,\n        TuiInputPhoneModule,\n        TuiGroup,\n        TuiPrimitiveTextfieldModule,\n        TuiTextfieldControllerModule,\n        TuiHint,\n        TuiDropdown,\n        TuiDataList,\n        TuiArrowComponent,\n        TuiAppearance,\n        TuiIsoToCountryCodePipe,\n        TuiLegacyDropdownOpenMonitorDirective,\n        TuiFlagPipe,\n        TuiButton,\n    ],\n    templateUrl: './input-phone-international.template.html',\n    styleUrls: ['./input-phone-international.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        tuiAsFocusableItemAccessor(TuiInputPhoneInternationalComponent),\n        tuiAsControl(TuiInputPhoneInternationalComponent),\n        TuiToCountryCodePipe,\n    ],\n    viewProviders: [FIXED_DROPDOWN_CONTROLLER_PROVIDER],\n    host: {\n        '[attr.data-size]': 'size',\n        '(paste.capture.prevent.stop)': 'onPaste($event)',\n        '(drop.capture.prevent.stop)': 'onPaste($event)',\n    },\n})\nexport class TuiInputPhoneInternationalComponent\n    extends AbstractTuiControl<string>\n    implements TuiFocusableElementAccessor\n{\n    @ViewChild(TuiInputPhoneComponent)\n    private readonly inputPhoneComponent?: TuiInputPhoneComponent;\n\n    @ViewChild(TuiPrimitiveTextfieldComponent)\n    private readonly primitiveTextfield?: TuiPrimitiveTextfieldComponent;\n\n    private readonly options = inject(TUI_INPUT_PHONE_INTERNATIONAL_OPTIONS);\n    private readonly extractCountryCodePipe = inject(TuiToCountryCodePipe);\n    private readonly textfieldSize = inject(TUI_TEXTFIELD_SIZE);\n\n    protected open = false;\n    protected readonly countriesNames$ = inject(TUI_COUNTRIES);\n    protected readonly countriesMasks = inject(TUI_COUNTRIES_MASKS);\n    protected readonly arrow: PolymorpheusContent<\n        TuiContext<TuiSizeL | TuiSizeM | TuiSizeS>\n    > = TUI_ARROW;\n\n    @Input()\n    public countries = this.options.countries;\n\n    @Output()\n    public readonly countryIsoCodeChange = new EventEmitter<TuiCountryIsoCode>();\n\n    public countryIsoCode = this.options.countryIsoCode;\n\n    @Input('countryIsoCode')\n    public set isoCode(code: TuiCountryIsoCode) {\n        if (this.countryIsoCode === code) {\n            return;\n        }\n\n        this.inputPhoneComponent?.writeValue(this.value);\n        this.countryIsoCode = code;\n    }\n\n    public get nativeFocusableElement(): HTMLElement | null {\n        return this.inputPhoneComponent && !this.computedDisabled\n            ? this.inputPhoneComponent.nativeFocusableElement\n            : null;\n    }\n\n    public get focused(): boolean {\n        return (\n            (!!this.primitiveTextfield && this.primitiveTextfield.focused) ||\n            (!!this.inputPhoneComponent && this.inputPhoneComponent.focused)\n        );\n    }\n\n    public get inputPhoneCountryCode(): string {\n        return tuiIsoToCountryCode(this.countriesMasks, this.countryIsoCode);\n    }\n\n    public get phoneMaskAfterCountryCode(): string {\n        const countryCode = this.inputPhoneCountryCode;\n\n        return this.calculateMaskAfterCountryCode(\n            this.countriesMasks[this.countryIsoCode],\n            countryCode,\n        );\n    }\n\n    public onPaste(event: ClipboardEvent | DragEvent): void {\n        let value = tuiExtractValueFromEvent(event).replace(TUI_NON_DIGITS_REGEXP, '');\n        const countryIsoCode = this.extractCountryCodePipe.transform(\n            value,\n            this.countries,\n        );\n\n        if (!countryIsoCode) {\n            this.value = `${this.inputPhoneCountryCode}${value}`\n                .replaceAll(MASK_SYMBOLS, '')\n                .slice(\n                    0,\n                    tuiGetMaxAllowedPhoneLength(this.countriesMasks, this.countryIsoCode),\n                );\n\n            return;\n        }\n\n        if (countryIsoCode === 'RU') {\n            value = value.replace(/^8/, '7');\n        }\n\n        this.updateCountryIsoCode(countryIsoCode);\n        this.value = `${CHAR_PLUS}${value}`;\n    }\n\n    public onItemClick(isoCode: TuiCountryIsoCode): void {\n        this.open = false;\n        this.updateCountryIsoCode(isoCode);\n        // recalculates mask inside inputPhone to prevent isoCode conflict\n        this.cdr.detectChanges();\n\n        const maxLength = tuiGetMaxAllowedPhoneLength(this.countriesMasks, isoCode);\n\n        if (this.value.length > maxLength) {\n            this.value = this.value.slice(0, maxLength);\n        }\n\n        if (this.nativeFocusableElement) {\n            this.nativeFocusableElement.focus();\n        }\n    }\n\n    public override setDisabledState(): void {\n        super.setDisabledState();\n        this.close();\n    }\n\n    protected get size(): TuiSizeL | TuiSizeS {\n        return this.textfieldSize.size;\n    }\n\n    protected onActiveZone(active: boolean): void {\n        this.updateFocused(active);\n    }\n\n    protected getFallbackValue(): string {\n        return '';\n    }\n\n    @tuiPure\n    private calculateMaskAfterCountryCode(mask: string, countryCode: string): string {\n        return mask.replace(countryCode, '').trim();\n    }\n\n    private close(): void {\n        this.open = false;\n    }\n\n    private updateCountryIsoCode(code: TuiCountryIsoCode): void {\n        this.countryIsoCode = code;\n        this.countryIsoCodeChange.emit(code);\n    }\n}\n","<div\n    *ngIf=\"countriesNames$ | async as countriesNames\"\n    tuiDropdownOpenMonitor\n    [tuiDropdown]=\"dropdown\"\n    [tuiDropdownEnabled]=\"!readOnly\"\n    [(tuiDropdownOpen)]=\"open\"\n    (tuiActiveZoneChange)=\"onActiveZone($event)\"\n>\n    <div tuiGroup>\n        <tui-primitive-textfield\n            tuiHintContent=\"\"\n            tuiTextfieldPostfix=\"\"\n            tuiTextfieldPrefix=\"\"\n            class=\"t-country-select\"\n            [disabled]=\"disabled\"\n            [editable]=\"false\"\n            [focusable]=\"focusable\"\n            [pseudoFocus]=\"open || null\"\n            [readOnly]=\"readOnly\"\n            [style.flex]=\"'0 0 auto'\"\n            [tuiTextfieldCustomContent]=\"countryValueContent\"\n            [tuiTextfieldIcon]=\"icon\"\n            [tuiTextfieldLabelOutside]=\"true\"\n        />\n        <tui-input-phone\n            class=\"t-input-phone\"\n            [countryCode]=\"inputPhoneCountryCode\"\n            [disabled]=\"disabled\"\n            [focusable]=\"focusable\"\n            [ngModelOptions]=\"{standalone: true}\"\n            [phoneMaskAfterCountryCode]=\"phoneMaskAfterCountryCode\"\n            [pseudoFocus]=\"pseudoFocus\"\n            [pseudoHover]=\"pseudoHover\"\n            [pseudoInvalid]=\"computedInvalid\"\n            [readOnly]=\"readOnly\"\n            [style.flex]=\"'0 0 auto'\"\n            [(ngModel)]=\"value\"\n        >\n            <ng-content />\n            <input\n                autocomplete=\"new-password\"\n                tuiTextfieldLegacy\n            />\n        </tui-input-phone>\n    </div>\n\n    <ng-template #dropdown>\n        <tui-data-list>\n            <button\n                *ngFor=\"let item of countries\"\n                tuiOption\n                (click)=\"onItemClick(item)\"\n            >\n                <img\n                    alt=\"\"\n                    class=\"t-flag\"\n                    [src]=\"item | tuiFlag\"\n                />\n                <span class=\"t-country-item-name\">\n                    {{ countriesNames[item] }}\n                </span>\n                <span class=\"t-country-item-code\">\n                    {{ item | tuiIsoToCountryCode }}\n                </span>\n            </button>\n        </tui-data-list>\n    </ng-template>\n\n    <ng-template #countryValueContent>\n        <img\n            class=\"t-flag t-flag_select\"\n            [alt]=\"countriesNames[countryIsoCode]\"\n            [src]=\"countryIsoCode | tuiFlag\"\n        />\n    </ng-template>\n\n    <ng-template #icon>\n        <div tuiAppearance=\"icon\">\n            <ng-container *polymorpheusOutlet=\"arrow\" />\n        </div>\n    </ng-template>\n</div>\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}