{"version":3,"file":"taiga-ui-legacy-pipes-to-country-code.mjs","sources":["../../../projects/legacy/pipes/to-country-code/to-country-code.pipe.ts","../../../projects/legacy/pipes/to-country-code/taiga-ui-legacy-pipes-to-country-code.ts"],"sourcesContent":["import type {PipeTransform} from '@angular/core';\nimport {inject, Pipe} from '@angular/core';\nimport {CHAR_PLUS} from '@taiga-ui/cdk/constants';\nimport type {TuiCountryIsoCode} from '@taiga-ui/i18n/types';\nimport {TUI_COUNTRIES_MASKS} from '@taiga-ui/legacy/tokens';\nimport {\n    tuiGetMaxAllowedPhoneLength,\n    tuiIsoToCountryCode,\n    tuiNotKzRegion,\n} from '@taiga-ui/legacy/utils';\n\n/**\n * @deprecated: drop in v5.0\n * use `maskitoGetCountryFromNumber` from `@maskito/phone` instead\n * ```\n * npm i @maskito/phone\n * ```\n *\n * ```ts\n * import {maskitoGetCountryFromNumber} from '@maskito/phone';\n * import metadata from 'libphonenumber-js/min/metadata';\n *\n * maskitoGetCountryFromNumber('+1 (212) 555-2368', metadata); // 'US'\n * maskitoGetCountryFromNumber('+12125552368', metadata); // 'US'\n * ```\n */\n@Pipe({\n    standalone: true,\n    name: 'tuiToCountryCode',\n})\nexport class TuiToCountryCodePipe implements PipeTransform {\n    private readonly countriesMasks = inject(TUI_COUNTRIES_MASKS);\n\n    /**\n     * @deprecated use `maskitoGetCountryFromNumber` from `@maskito/phone` instead\n     * ```\n     * npm i @maskito/phone\n     * ```\n     *\n     * ```ts\n     * import {maskitoGetCountryFromNumber} from '@maskito/phone';\n     * import metadata from 'libphonenumber-js/min/metadata';\n     *\n     * maskitoGetCountryFromNumber('+1 (212) 555-2368', metadata); // 'US'\n     * maskitoGetCountryFromNumber('+12125552368', metadata); // 'US'\n     * ```\n     */\n    public transform(\n        value: string,\n        countries: readonly TuiCountryIsoCode[],\n    ): TuiCountryIsoCode | undefined {\n        return countries.find((countryIsoCode) => {\n            const ruCodeTest =\n                countryIsoCode === 'RU' &&\n                /^[78]/.test(value) &&\n                /^(?!880[1-9 ])/.test(value) &&\n                value.length + 1 ===\n                    tuiGetMaxAllowedPhoneLength(this.countriesMasks, 'RU');\n\n            const matched =\n                ruCodeTest ||\n                (value.startsWith(\n                    tuiIsoToCountryCode(this.countriesMasks, countryIsoCode).replace(\n                        CHAR_PLUS,\n                        '',\n                    ),\n                ) &&\n                    value.length + 1 ===\n                        tuiGetMaxAllowedPhoneLength(this.countriesMasks, countryIsoCode));\n\n            if (matched) {\n                switch (countryIsoCode) {\n                    case 'RU':\n                        return tuiNotKzRegion(value);\n                    case 'KZ':\n                        return !tuiNotKzRegion(value);\n                    default:\n                        return true;\n                }\n            }\n\n            return false;\n        });\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;AAWA;;;;;;;;;;;;;;AAcG;AACH,MAIa,oBAAoB,CAAA;AAJjC,IAAA,WAAA,GAAA;AAKqB,QAAA,IAAA,CAAA,cAAc,GAAG,MAAM,CAAC,mBAAmB,CAAC,CAAC;AAqDjE,KAAA;AAnDG;;;;;;;;;;;;;AAaG;IACI,SAAS,CACZ,KAAa,EACb,SAAuC,EAAA;AAEvC,QAAA,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC,cAAc,KAAI;AACrC,YAAA,MAAM,UAAU,GACZ,cAAc,KAAK,IAAI;AACvB,gBAAA,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;AACnB,gBAAA,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC;gBAC5B,KAAK,CAAC,MAAM,GAAG,CAAC;AACZ,oBAAA,2BAA2B,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;YAE/D,MAAM,OAAO,GACT,UAAU;AACV,iBAAC,KAAK,CAAC,UAAU,CACb,mBAAmB,CAAC,IAAI,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC,OAAO,CAC5D,SAAS,EACT,EAAE,CACL,CACJ;oBACG,KAAK,CAAC,MAAM,GAAG,CAAC;wBACZ,2BAA2B,CAAC,IAAI,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC,CAAC;AAE9E,YAAA,IAAI,OAAO,EAAE;AACT,gBAAA,QAAQ,cAAc;AAClB,oBAAA,KAAK,IAAI;AACL,wBAAA,OAAO,cAAc,CAAC,KAAK,CAAC,CAAC;AACjC,oBAAA,KAAK,IAAI;AACL,wBAAA,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;AAClC,oBAAA;AACI,wBAAA,OAAO,IAAI,CAAC;AACnB,iBAAA;AACJ,aAAA;AAED,YAAA,OAAO,KAAK,CAAC;AACjB,SAAC,CAAC,CAAC;KACN;+GArDQ,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,CAAA,CAAA,EAAA;6GAApB,oBAAoB,EAAA,YAAA,EAAA,IAAA,EAAA,IAAA,EAAA,kBAAA,EAAA,CAAA,CAAA,EAAA;;4FAApB,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAJhC,IAAI;AAAC,YAAA,IAAA,EAAA,CAAA;AACF,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,IAAI,EAAE,kBAAkB;AAC3B,iBAAA,CAAA;;;AC7BD;;AAEG;;;;"}