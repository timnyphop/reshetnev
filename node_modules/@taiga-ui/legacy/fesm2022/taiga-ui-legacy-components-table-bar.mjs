import * as i0 from '@angular/core';
import { inject, Component, ChangeDetectionStrategy, Injectable, Directive } from '@angular/core';
import { TuiPopoverDirective } from '@taiga-ui/cdk/directives/popover';
import { TuiPopoverService, tuiAsPopover } from '@taiga-ui/cdk/services';
import { AsyncPipe, NgIf, NgForOf } from '@angular/common';
import { tuiSlideInTop, tuiParentAnimation } from '@taiga-ui/core/animations';
import { TuiButton } from '@taiga-ui/core/components/button';
import { TUI_COMMON_ICONS, TUI_CLOSE_WORD, TUI_ANIMATIONS_SPEED } from '@taiga-ui/core/tokens';
import { tuiToAnimationOptions } from '@taiga-ui/core/utils/miscellaneous';
import { POLYMORPHEUS_CONTEXT, PolymorpheusOutlet, PolymorpheusTemplate } from '@taiga-ui/polymorpheus';
import { tuiCreateToken, tuiProvideOptions } from '@taiga-ui/cdk/utils/miscellaneous';
import { BehaviorSubject } from 'rxjs';

/**
 * @deprecated drop in v5.0 use {@link TuiActionBar}
 * https://taiga-ui.dev/components/actions-bar
 */
class TuiTableBarComponent {
    constructor() {
        this.icons = inject(TUI_COMMON_ICONS);
        this.closeWord$ = inject(TUI_CLOSE_WORD);
        this.context = inject(POLYMORPHEUS_CONTEXT);
        this.animation = tuiToAnimationOptions(inject(TUI_ANIMATIONS_SPEED));
    }
    getTheme(appearance) {
        return appearance === 'onDark' ? 'dark' : null;
    }
    close() {
        this.context.$implicit.complete();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiTableBarComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiTableBarComponent, isStandalone: true, selector: "tui-table-bar", host: { properties: { "@tuiSlideInTop": "animation", "attr.data-appearance": "context.mode" } }, ngImport: i0, template: "<div\n    automation-id=\"tui-table-bar__bar\"\n    class=\"t-container\"\n    [attr.tuiTheme]=\"getTheme(context.mode || 'onDark')\"\n    [class.t-container_adaptive]=\"context.adaptive\"\n>\n    <div class=\"t-inner\">\n        <div class=\"t-content\">\n            <ng-container *polymorpheusOutlet=\"context.content as text; context: context\">\n                {{ text }}\n            </ng-container>\n        </div>\n\n        <button\n            *ngIf=\"context.hasCloseButton\"\n            appearance=\"icon\"\n            automation-id=\"tui-table-bar__close-button\"\n            size=\"xs\"\n            tuiIconButton\n            type=\"button\"\n            class=\"t-close-button\"\n            [iconStart]=\"icons.close\"\n            (click)=\"close()\"\n        >\n            {{ closeWord$ | async }}\n        </button>\n    </div>\n</div>\n", styles: [":host{display:block;inline-size:100%;box-shadow:var(--tui-shadow-small);flex:0 0 100%}:host[data-appearance=onLight]{background:var(--tui-background-base);color:var(--tui-text-primary)}:host[data-appearance=onDark]{background:var(--tui-background-accent-opposite-pressed);color:var(--tui-background-base)}.t-wrapper{display:flex;inline-size:100%}.t-container{position:relative;margin:0 auto}@media screen and (min-width: 80em){.t-container.t-container_adaptive{inline-size:69rem}}@media screen and (max-width: 79.9625em){.t-container.t-container_adaptive{inline-size:51.5rem}}@media screen and (max-width: 47.9625em){.t-container.t-container_adaptive{inline-size:100%;padding:0 1rem;box-sizing:border-box}}@media screen and (min-width: 80em){.t-container{inline-size:69rem}}@media screen and (max-width: 79.9625em){.t-container{inline-size:51.5rem;padding:0 3rem}}.t-inner{display:flex;align-items:center;block-size:4.5rem;inline-size:100%;overflow:hidden}:host-context(tui-root._mobile) .t-inner{block-size:5.75rem}.t-close-button{margin-left:1.5rem}.t-content{inline-size:100%;flex:1 1 0}\n"], dependencies: [{ kind: "directive", type: PolymorpheusOutlet, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { kind: "directive", type: TuiButton, selector: "a[tuiButton],button[tuiButton],a[tuiIconButton],button[tuiIconButton]", inputs: ["size"] }, { kind: "pipe", type: AsyncPipe, name: "async" }, { kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], animations: [tuiSlideInTop, tuiParentAnimation], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiTableBarComponent, decorators: [{
            type: Component,
            args: [{ standalone: true, selector: 'tui-table-bar', imports: [PolymorpheusOutlet, PolymorpheusTemplate, TuiButton, AsyncPipe, NgIf], changeDetection: ChangeDetectionStrategy.OnPush, animations: [tuiSlideInTop, tuiParentAnimation], host: {
                        '[@tuiSlideInTop]': 'animation',
                        '[attr.data-appearance]': 'context.mode',
                    }, template: "<div\n    automation-id=\"tui-table-bar__bar\"\n    class=\"t-container\"\n    [attr.tuiTheme]=\"getTheme(context.mode || 'onDark')\"\n    [class.t-container_adaptive]=\"context.adaptive\"\n>\n    <div class=\"t-inner\">\n        <div class=\"t-content\">\n            <ng-container *polymorpheusOutlet=\"context.content as text; context: context\">\n                {{ text }}\n            </ng-container>\n        </div>\n\n        <button\n            *ngIf=\"context.hasCloseButton\"\n            appearance=\"icon\"\n            automation-id=\"tui-table-bar__close-button\"\n            size=\"xs\"\n            tuiIconButton\n            type=\"button\"\n            class=\"t-close-button\"\n            [iconStart]=\"icons.close\"\n            (click)=\"close()\"\n        >\n            {{ closeWord$ | async }}\n        </button>\n    </div>\n</div>\n", styles: [":host{display:block;inline-size:100%;box-shadow:var(--tui-shadow-small);flex:0 0 100%}:host[data-appearance=onLight]{background:var(--tui-background-base);color:var(--tui-text-primary)}:host[data-appearance=onDark]{background:var(--tui-background-accent-opposite-pressed);color:var(--tui-background-base)}.t-wrapper{display:flex;inline-size:100%}.t-container{position:relative;margin:0 auto}@media screen and (min-width: 80em){.t-container.t-container_adaptive{inline-size:69rem}}@media screen and (max-width: 79.9625em){.t-container.t-container_adaptive{inline-size:51.5rem}}@media screen and (max-width: 47.9625em){.t-container.t-container_adaptive{inline-size:100%;padding:0 1rem;box-sizing:border-box}}@media screen and (min-width: 80em){.t-container{inline-size:69rem}}@media screen and (max-width: 79.9625em){.t-container{inline-size:51.5rem;padding:0 3rem}}.t-inner{display:flex;align-items:center;block-size:4.5rem;inline-size:100%;overflow:hidden}:host-context(tui-root._mobile) .t-inner{block-size:5.75rem}.t-close-button{margin-left:1.5rem}.t-content{inline-size:100%;flex:1 1 0}\n"] }]
        }] });

/**
 * @deprecated drop in v5.0 use {@link TuiActionBar}
 * https://taiga-ui.dev/components/actions-bar
 */
const TUI_TABLE_BARS = tuiCreateToken(new BehaviorSubject([]));
/**
 * @deprecated drop in v5.0 use {@link TuiActionBar}
 * https://taiga-ui.dev/components/actions-bar
 */
const TUI_TABLE_BAR_DEFAULT_OPTIONS = {
    adaptive: true,
    hasCloseButton: true,
    mode: 'onDark',
};
/**
 * @deprecated drop in v5.0 use {@link TuiActionBar}
 * https://taiga-ui.dev/components/actions-bar
 */
const TUI_TABLE_BAR_OPTIONS = tuiCreateToken(TUI_TABLE_BAR_DEFAULT_OPTIONS);
/**
 * @deprecated drop in v5.0 use {@link TuiActionBar}
 * https://taiga-ui.dev/components/actions-bar
 */
function tuiTableBarOptionsProvider(options) {
    return tuiProvideOptions(TUI_TABLE_BAR_OPTIONS, options, TUI_TABLE_BAR_DEFAULT_OPTIONS);
}

/**
 * @deprecated drop in v5.0 use {@link TuiActionBar}
 * https://taiga-ui.dev/components/actions-bar
 */
class TuiTableBarsService extends TuiPopoverService {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiTableBarsService, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }
    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiTableBarsService, providedIn: 'root', useFactory: () => new TuiTableBarsService(TUI_TABLE_BARS, TuiTableBarComponent, inject(TUI_TABLE_BAR_OPTIONS)) }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiTableBarsService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                    useFactory: () => new TuiTableBarsService(TUI_TABLE_BARS, TuiTableBarComponent, inject(TUI_TABLE_BAR_OPTIONS)),
                }]
        }] });

/**
 * @deprecated drop in v5.0 use {@link TuiActionBar}
 * https://taiga-ui.dev/components/actions-bar
 */
class TuiTableBarDirective extends TuiPopoverDirective {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiTableBarDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: TuiTableBarDirective, isStandalone: true, selector: "ng-template[tuiTableBar]", inputs: { open: ["tuiTableBar", "open"], options: ["tuiTableBarOptions", "options"] }, outputs: { openChange: "tuiTableBarChange" }, providers: [tuiAsPopover(TuiTableBarsService)], usesInheritance: true, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiTableBarDirective, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                    selector: 'ng-template[tuiTableBar]',
                    inputs: ['open: tuiTableBar', 'options: tuiTableBarOptions'],
                    outputs: ['openChange: tuiTableBarChange'],
                    providers: [tuiAsPopover(TuiTableBarsService)],
                }]
        }] });

/**
 * @deprecated drop in v5.0 use {@link TuiActionBar}
 * https://taiga-ui.dev/components/actions-bar
 */
class TuiTableBarsHostComponent {
    constructor() {
        this.bars$ = inject(TUI_TABLE_BARS);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiTableBarsHostComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiTableBarsHostComponent, isStandalone: true, selector: "tui-table-bars-host", ngImport: i0, template: `
        <div
            *ngFor="let item of bars$ | async"
            class="t-wrapper"
            @tuiParentAnimation
        >
            <ng-container *polymorpheusOutlet="item.component; context: item" />
        </div>
    `, isInline: true, styles: [".t-wrapper{position:fixed;top:0;left:0;bottom:0;right:0;top:unset}\n"], dependencies: [{ kind: "pipe", type: AsyncPipe, name: "async" }, { kind: "directive", type: PolymorpheusOutlet, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { kind: "directive", type: NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], animations: [tuiParentAnimation], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiTableBarsHostComponent, decorators: [{
            type: Component,
            args: [{ standalone: true, selector: 'tui-table-bars-host', imports: [AsyncPipe, PolymorpheusOutlet, PolymorpheusTemplate, NgForOf], template: `
        <div
            *ngFor="let item of bars$ | async"
            class="t-wrapper"
            @tuiParentAnimation
        >
            <ng-container *polymorpheusOutlet="item.component; context: item" />
        </div>
    `, changeDetection: ChangeDetectionStrategy.OnPush, animations: [tuiParentAnimation], styles: [".t-wrapper{position:fixed;top:0;left:0;bottom:0;right:0;top:unset}\n"] }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TUI_TABLE_BARS, TUI_TABLE_BAR_DEFAULT_OPTIONS, TUI_TABLE_BAR_OPTIONS, TuiTableBarDirective, TuiTableBarsHostComponent, TuiTableBarsService, tuiTableBarOptionsProvider };
//# sourceMappingURL=taiga-ui-legacy-components-table-bar.mjs.map
