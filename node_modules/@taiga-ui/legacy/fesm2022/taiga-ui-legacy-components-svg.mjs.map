{"version":3,"file":"taiga-ui-legacy-components-svg.mjs","sources":["../../../projects/legacy/components/svg/content-processor.ts","../../../projects/legacy/components/svg/deprecated-icons.ts","../../../projects/legacy/components/svg/svg.service.ts","../../../projects/legacy/components/svg/svg-options.ts","../../../projects/legacy/components/svg/svg.component.ts","../../../projects/legacy/components/svg/svg.template.html","../../../projects/legacy/components/svg/taiga-ui-legacy-components-svg.ts"],"sourcesContent":["import type {TuiSafeHtml} from '@taiga-ui/cdk/types';\nimport {tuiIsString} from '@taiga-ui/cdk/utils/miscellaneous';\n\nfunction makeRandomSalt(): number {\n    return Math.floor(Math.random() * Date.now());\n}\n\nfunction extractLinearGradientIdsFromSvg(svg: string): string[] {\n    const ids = (svg.match(/url\\((\"?)('*)#(.*?)('*)\\)/g) ?? []).map((url) =>\n        url.slice(4, url.length - 1).replaceAll(/['\"#]+/g, ''),\n    );\n\n    return Array.from(new Set(ids));\n}\n\n/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * https://taiga-ui.dev/components/icon\n *\n * @description:\n * Any ‘linearGradient’ attributes which are defined on the referenced\n * element which are not defined on this element are inherited by this element.\n * If this element has no defined gradient stops, and the referenced element does\n * (possibly due to its own ‘xlink:href’ attribute), then this element inherits\n * the gradient stop from the referenced element. Inheritance can be indirect\n * to an arbitrary level; thus, if the referenced element inherits attribute\n * or gradient stops due to its own ‘xlink:href’ attribute, then the current\n * element can inherit those attributes or gradient stops.\n *\n * Documentation: https://www.w3.org/TR/SVG11/pservers.html\n *\n */\nexport function tuiSvgLinearGradientProcessor(\n    svg: TuiSafeHtml,\n    salt: number | string = makeRandomSalt(),\n): TuiSafeHtml {\n    if (tuiIsString(svg)) {\n        const uniqueIds = extractLinearGradientIdsFromSvg(svg);\n\n        return uniqueIds.reduce((newSvg, previousId) => {\n            const newId = `id_${salt}_${previousId}`;\n\n            return newSvg\n                .replaceAll(`\"${previousId}\"`, `\"${newId}\"`)\n                .replaceAll(`'${previousId}'`, `'${newId}'`)\n                .replaceAll(`url('#${previousId}')`, `url('#${newId}')`)\n                .replaceAll(`url(\"#${previousId}\")`, `url(\"#${newId}\")`)\n                .replaceAll(`url(#${previousId})`, `url(#${newId})`);\n        }, svg);\n    }\n\n    return svg;\n}\n","/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * https://taiga-ui.dev/components/icon\n */\nexport const TUI_DEPRECATED_ICONS: Record<string, string> = {\n    tuiIconAttach: 'tuiIconPaperclip',\n    tuiIconAttention: 'tuiIconAlertCircle',\n    tuiIconBackCircle: 'tuiIconArrowLeftCircle',\n    tuiIconCall: 'tuiIconPhone',\n    tuiIconCallIn: 'tuiIconPhoneIncoming',\n    tuiIconCallOut: 'tuiIconPhoneOutgoing',\n    tuiIconCallTransfer: 'tuiIconPhoneForwarded',\n    tuiIconCancel: 'tuiIconXCircle',\n    tuiIconCancelCircle: 'tuiIconSlash',\n    tuiIconCard: 'tuiIconCreditCard',\n    tuiIconCards: 'tuiIconCreditCard',\n    tuiIconChartBar: 'tuiIconBarChart',\n    tuiIconChart: 'tuiIconBarChart',\n    tuiIconCheckList: 'tuiIconClipboard',\n    tuiIconCloseCircle: 'tuiIconXCircle',\n    tuiIconCollapse: 'tuiIconMinimize',\n    tuiIconComment: 'tuiIconMessageSquare',\n    tuiIconCommentFw: 'tuiIconMessageForward',\n    tuiIconCompany: 'tuiIconBriefcase',\n    tuiIconDefaultDoc: 'tuiIconFile',\n    tuiIconDesktop: 'tuiIconMonitor',\n    tuiIconDesktopOff: 'tuiIconMonitorOff',\n    tuiIconDislike: 'tuiIconThumbsDown',\n    tuiIconDone: 'tuiIconCheckCircle',\n    tuiIconDraft: 'tuiIconEdit2',\n    tuiIconEyeOpen: 'tuiIconEye',\n    tuiIconEyeClosed: 'tuiIconEyeOff',\n    tuiIconExpand: 'tuiIconMaximize',\n    tuiIconExternal: 'tuiIconExternalLink',\n    tuiIconFrame: 'tuiIconLayout',\n    tuiIconGeo: 'tuiIconMapPin',\n    tuiIconHeartFilled: 'tuiIconHeart',\n    tuiIconHide: 'tuiIconEyeOff',\n    tuiIconImg: 'tuiIconImage',\n    tuiIconInfoCircle: 'tuiIconInfo',\n    tuiIconLike: 'tuiIconThumbsUp',\n    tuiIconLockOpen: 'tuiIconUnlock',\n    tuiIconMobile: 'tuiIconSmartphone',\n    tuiIconMoreHor: 'tuiIconMoreHorizontal',\n    tuiIconMoreVer: 'tuiIconMoreVertical',\n    tuiIconMoreVert: 'tuiIconMoreVertical',\n    tuiIconPicture: 'tuiIconImage',\n    tuiIconPin: 'tuiIconMapPin',\n    tuiIconPrint: 'tuiIconPrinter',\n    tuiIconRefresh: 'tuiIconRefreshCw',\n    tuiIconRemove: 'tuiIconX',\n    tuiIconShow: 'tuiIconEye',\n    tuiIconSound: 'tuiIconVolume',\n    tuiIconSoundOff: 'tuiIconVolumeX',\n    tuiIconStarFilled: 'tuiIconStar',\n    tuiIconStop: 'tuiIconSquare',\n    tuiIconStructure: 'tuiIconLayoutGrid',\n    tuiIconTime: 'tuiIconClock',\n    tuiIconTooltip: 'tuiIconHelpCircle',\n    tuiIconViewList: 'tuiIconList',\n    tuiIconWifiOn: 'tuiIconWifi',\n};\n","/// <reference types=\"@taiga-ui/tsconfig/ng-dev-mode\" />\nimport {inject, Injectable, SecurityContext} from '@angular/core';\nimport type {SafeHtml} from '@angular/platform-browser';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {TUI_ICON_STARTS, TUI_SANITIZER} from '@taiga-ui/legacy/tokens';\nimport {tuiProcessIcon} from '@taiga-ui/legacy/utils';\nimport {BehaviorSubject} from 'rxjs';\n\n/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * Service for reusing SVGs without inlining each instance\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class TuiSvgService {\n    private readonly tuiSanitizer = inject(TUI_SANITIZER, {optional: true});\n    private readonly sanitizer = inject(DomSanitizer);\n    private originals: Record<string, string> = {};\n\n    public readonly items$ = new BehaviorSubject<Map<string, SafeHtml>>(new Map());\n\n    constructor() {\n        this.define(inject(TUI_ICON_STARTS));\n    }\n\n    public define(icons: Record<string, string>): void {\n        const {value} = this.items$;\n\n        Object.keys(icons).forEach((key) => {\n            this.defineIcon(key, icons[key] ?? '', value);\n        });\n\n        this.items$.next(value);\n    }\n\n    public getOriginal(name: string): string | null {\n        return this.originals[name] || null;\n    }\n\n    private defineIcon(name: string, src: string, map: Map<string, SafeHtml>): void {\n        if (map.has(name)) {\n            return;\n        }\n\n        const parsed = this.parseSrc(name, src);\n\n        if (!parsed) {\n            ngDevMode && console.assert(false, 'Unable to parse given SVG src');\n\n            return;\n        }\n\n        map.set(name, parsed);\n        this.originals = {\n            ...this.originals,\n            [name]: src,\n        };\n    }\n\n    private parseSrc(name: string, src: string): SafeHtml {\n        return this.sanitize(tuiProcessIcon(src, name));\n    }\n\n    private sanitize(src: string): SafeHtml {\n        return this.sanitizer.bypassSecurityTrustHtml(\n            (this.tuiSanitizer\n                ? this.tuiSanitizer.sanitize(SecurityContext.HTML, src)\n                : this.sanitizer.sanitize(SecurityContext.HTML, src)) || '',\n        );\n    }\n}\n","import type {FactoryProvider, Provider} from '@angular/core';\nimport {InjectionToken, Optional, SkipSelf} from '@angular/core';\nimport type {TuiHandler, TuiSafeHtml, TuiStringHandler} from '@taiga-ui/cdk/types';\nimport {tuiCreateTokenFromFactory, tuiIsString} from '@taiga-ui/cdk/utils/miscellaneous';\nimport {tuiIconsPathFactory} from '@taiga-ui/legacy/utils';\nimport {identity} from 'rxjs';\n\nimport {tuiSvgLinearGradientProcessor} from './content-processor';\nimport {TUI_DEPRECATED_ICONS} from './deprecated-icons';\n\n/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * https://taiga-ui.dev/components/icon\n */\nexport const TUI_DEFAULT_ICONS_PLACE = 'assets/taiga-ui/icons';\n\n/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * https://taiga-ui.dev/components/icon\n */\nexport interface TuiSvgOptions {\n    readonly contentProcessor: TuiHandler<TuiSafeHtml, TuiSafeHtml>;\n    readonly deprecated: TuiStringHandler<string>;\n    readonly iconsPlace: string;\n    readonly path: (name: string, baseHref?: string) => string;\n    readonly srcProcessor: TuiHandler<TuiSafeHtml, TuiSafeHtml>;\n}\n\n/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * https://taiga-ui.dev/components/icon\n */\nexport type TuiSvgInterceptorHandler =\n    | ((src: TuiSafeHtml, options: TuiSvgOptions) => TuiSafeHtml)\n    | ((src: TuiSafeHtml) => TuiSafeHtml);\n\n/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * https://taiga-ui.dev/components/icon\n */\nexport const TUI_SVG_DEFAULT_OPTIONS: TuiSvgOptions = {\n    iconsPlace: TUI_DEFAULT_ICONS_PLACE,\n    path: tuiIconsPathFactory(TUI_DEFAULT_ICONS_PLACE),\n    srcProcessor: identity,\n    contentProcessor: tuiSvgLinearGradientProcessor,\n    deprecated: (src) => {\n        const oldIcon = src.replace('Large', '').replace('Outline', '');\n        const newIcon = TUI_DEPRECATED_ICONS[oldIcon];\n\n        return newIcon\n            ? `${oldIcon}/(Large|Outline) is deprecated, use ${newIcon}/(Large|Outline) instead`\n            : '';\n    },\n};\n\n/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * https://taiga-ui.dev/components/icon\n */\nexport const TUI_SVG_OPTIONS = tuiCreateTokenFromFactory<TuiSvgOptions>(() => ({\n    iconsPlace: TUI_DEFAULT_ICONS_PLACE,\n    path: tuiIconsPathFactory(TUI_DEFAULT_ICONS_PLACE),\n    deprecated: TUI_SVG_DEFAULT_OPTIONS.deprecated,\n    srcProcessor: identity,\n    contentProcessor: tuiSvgLinearGradientProcessor,\n}));\n\n/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * https://taiga-ui.dev/components/icon\n */\nexport const TUI_SVG_SRC_INTERCEPTORS = new InjectionToken<TuiSvgInterceptorHandler>(\n    '[TUI_SVG_SRC_INTERCEPTORS]',\n);\n\n/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * https://taiga-ui.dev/components/icon\n */\nexport function tuiSvgSrcInterceptors(interceptor: TuiSvgInterceptorHandler): Provider {\n    return {\n        provide: TUI_SVG_SRC_INTERCEPTORS,\n        useValue: interceptor,\n        multi: true,\n    };\n}\n\n/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * https://taiga-ui.dev/components/icon\n */\nexport const tuiSvgOptionsProvider: (\n    options: Partial<Omit<TuiSvgOptions, 'path'>> & {\n        path?: TuiSvgOptions['path'] | string;\n    },\n) => FactoryProvider = (options) => ({\n    provide: TUI_SVG_OPTIONS,\n    deps: [[new SkipSelf(), new Optional(), TUI_SVG_OPTIONS]],\n    useFactory: (fallback: TuiSvgOptions | null): TuiSvgOptions => ({\n        iconsPlace:\n            options.iconsPlace ??\n            fallback?.iconsPlace ??\n            TUI_SVG_DEFAULT_OPTIONS.iconsPlace,\n        path: tuiIsString(options.path)\n            ? tuiIconsPathFactory(options.path)\n            : (options.path ?? fallback?.path ?? TUI_SVG_DEFAULT_OPTIONS.path),\n        deprecated:\n            options.deprecated ??\n            fallback?.deprecated ??\n            TUI_SVG_DEFAULT_OPTIONS.deprecated,\n        srcProcessor:\n            options.srcProcessor ??\n            fallback?.srcProcessor ??\n            TUI_SVG_DEFAULT_OPTIONS.srcProcessor,\n        contentProcessor:\n            options.contentProcessor ??\n            fallback?.contentProcessor ??\n            TUI_SVG_DEFAULT_OPTIONS.contentProcessor,\n    }),\n});\n","/// <reference types=\"@taiga-ui/tsconfig/ng-dev-mode\" />\nimport {AsyncPipe, DOCUMENT, NgIf} from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    inject,\n    Input,\n    SecurityContext,\n} from '@angular/core';\nimport type {SafeHtml} from '@angular/platform-browser';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {WA_WINDOW} from '@ng-web-apis/common';\nimport {TuiLet} from '@taiga-ui/cdk/directives/let';\nimport {TUI_BASE_HREF} from '@taiga-ui/cdk/tokens';\nimport type {TuiSafeHtml} from '@taiga-ui/cdk/types';\nimport {tuiGetDocumentOrShadowRoot, tuiInjectElement} from '@taiga-ui/cdk/utils/dom';\nimport {tuiIsString, tuiPure} from '@taiga-ui/cdk/utils/miscellaneous';\nimport {TuiStaticRequestService} from '@taiga-ui/legacy/services';\nimport {TUI_SANITIZER} from '@taiga-ui/legacy/tokens';\nimport {TUI_CACHE_BUSTING_PAYLOAD, tuiIsPresumedHTMLString} from '@taiga-ui/legacy/utils';\nimport type {Observable} from 'rxjs';\nimport {catchError, map, of, ReplaySubject, startWith, switchMap} from 'rxjs';\n\nimport {TuiSvgService} from './svg.service';\nimport type {TuiSvgInterceptorHandler, TuiSvgOptions} from './svg-options';\nimport {TUI_SVG_OPTIONS, TUI_SVG_SRC_INTERCEPTORS} from './svg-options';\n\nconst UNDEFINED_NAMED_ICON = 'Attempted to use undefined named icon';\nconst MISSING_EXTERNAL_ICON = 'External icon is missing on the given URL';\nconst FAILED_EXTERNAL_ICON = 'Failed to load external SVG';\n\n/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * https://taiga-ui.dev/components/icon\n */\nexport interface TuiIconError {\n    readonly icon: string;\n    readonly message: string;\n}\n\n/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * https://taiga-ui.dev/components/icon\n */\n@Component({\n    standalone: true,\n    selector: 'tui-svg',\n    imports: [TuiLet, AsyncPipe, NgIf],\n    templateUrl: './svg.template.html',\n    styleUrls: ['./svg.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TuiSvgComponent {\n    private icon: TuiSafeHtml = '';\n    private readonly doc = inject(DOCUMENT);\n    private readonly win = inject(WA_WINDOW);\n    private readonly options = inject(TUI_SVG_OPTIONS);\n    private readonly tuiSanitizer = inject(TUI_SANITIZER, {optional: true});\n    private readonly svgService = inject(TuiSvgService);\n    private readonly staticRequestService = inject(TuiStaticRequestService);\n    private readonly sanitizer = inject(DomSanitizer);\n    private readonly el = tuiInjectElement();\n    private readonly baseHref = inject(TUI_BASE_HREF);\n    private readonly src$ = new ReplaySubject<void>(1);\n    private readonly srcInterceptors = inject(TUI_SVG_SRC_INTERCEPTORS, {\n        optional: true,\n    }) as readonly TuiSvgInterceptorHandler[] | null;\n\n    protected readonly innerHTML$: Observable<SafeHtml>;\n\n    constructor() {\n        this.innerHTML$ = this.src$.pipe(\n            switchMap(() => {\n                if (tuiIsString(this.icon)) {\n                    return this.isExternal\n                        ? this.getExternalIcon(this.icon)\n                        : of(this.getSafeHtml(this.icon));\n                }\n\n                return of(this.icon);\n            }),\n            startWith(''),\n        );\n    }\n\n    @Input()\n    public set src(src: TuiSafeHtml | null | undefined) {\n        const deprecated = this.options.deprecated(String(src));\n\n        ngDevMode && console.assert(!deprecated, deprecated);\n\n        this.icon = (this.srcInterceptors ?? []).reduce(\n            (newSrc, interceptor: TuiSvgInterceptorHandler) =>\n                interceptor(newSrc, this.options),\n            this.options.srcProcessor(src || ''),\n        );\n\n        this.src$.next();\n    }\n\n    public get src(): TuiSafeHtml {\n        return this.icon;\n    }\n\n    public get use(): string {\n        if (tuiIsString(this.icon)) {\n            return this.icon.includes('.svg#')\n                ? this.icon\n                : this.resolveName(this.icon, this.options.path);\n        }\n\n        return '';\n    }\n\n    public get isInnerHTML(): boolean {\n        return (\n            !tuiIsString(this.icon) ||\n            this.isSrc ||\n            this.isExternal ||\n            (this.isName && this.isShadowDOM)\n        );\n    }\n\n    protected onError(message: string = MISSING_EXTERNAL_ICON): void {\n        const {icon} = this;\n        const event = new CustomEvent<TuiIconError>('tui-icon-error', {\n            bubbles: true,\n            detail: {\n                message,\n                icon: icon as string,\n            },\n        });\n\n        ngDevMode && console.assert(false, message, icon);\n        this.el.dispatchEvent(event);\n    }\n\n    private get isShadowDOM(): boolean {\n        return tuiGetDocumentOrShadowRoot(this.el) !== this.doc;\n    }\n\n    private get isUse(): boolean {\n        return this.use.replace(TUI_CACHE_BUSTING_PAYLOAD, '').includes('.svg#');\n    }\n\n    private get isExternal(): boolean {\n        return (\n            this.isUrl ||\n            this.isCrossDomain ||\n            (!this.isSrc && !this.svgService.getOriginal(String(this.icon)))\n        );\n    }\n\n    private get isUrl(): boolean {\n        return (\n            tuiIsString(this.icon) &&\n            this.icon.replace(TUI_CACHE_BUSTING_PAYLOAD, '').endsWith('.svg')\n        );\n    }\n\n    private get isSrc(): boolean {\n        return tuiIsString(this.icon) && tuiIsPresumedHTMLString(this.icon);\n    }\n\n    private get isName(): boolean {\n        return !this.isUrl && !this.isUse && !this.isSrc;\n    }\n\n    private get isCrossDomain(): boolean {\n        const {use, isUse, win} = this;\n\n        return (\n            isUse && use.startsWith('http') && !!win.origin && !use.startsWith(win.origin)\n        );\n    }\n\n    @tuiPure\n    private resolveName(name: string, iconsPath: TuiSvgOptions['path']): string {\n        return iconsPath(name, this.baseHref);\n    }\n\n    private getSafeHtml(src: string): SafeHtml {\n        return this.isSrc ? this.sanitize(src) : this.process(src);\n    }\n\n    private process(src: string): SafeHtml {\n        const icon = this.svgService.getOriginal(src);\n\n        if (this.isName && !icon && !!src) {\n            this.onError(UNDEFINED_NAMED_ICON);\n        }\n\n        return this.sanitize(icon || '');\n    }\n\n    private sanitize(src: TuiSafeHtml): TuiSafeHtml {\n        src = this.options.contentProcessor(src);\n\n        return this.tuiSanitizer && tuiIsString(src)\n            ? this.sanitizer.bypassSecurityTrustHtml(\n                  this.tuiSanitizer.sanitize(SecurityContext.HTML, src) || '',\n              )\n            : src;\n    }\n\n    private getExternalIcon(src: string): Observable<SafeHtml> {\n        const url = src.includes('.svg') ? src : this.use;\n\n        return this.staticRequestService.request(url).pipe(\n            catchError(() => {\n                this.onError(FAILED_EXTERNAL_ICON);\n\n                return of('');\n            }),\n            map((response) =>\n                this.sanitize(response.replace('<svg', '<svg focusable=\"false\"')),\n            ),\n        );\n    }\n}\n","<div\n    class=\"t-src\"\n    [innerHTML]=\"innerHTML$ | async\"\n></div>\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}