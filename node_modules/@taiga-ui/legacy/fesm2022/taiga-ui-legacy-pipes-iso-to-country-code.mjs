import * as i0 from '@angular/core';
import { inject, Pipe } from '@angular/core';
import { TUI_COUNTRIES_MASKS } from '@taiga-ui/legacy/tokens';
import { tuiIsoToCountryCode } from '@taiga-ui/legacy/utils';

/**
 * @deprecated: drop in v5.0
 * Use `getCountryCallingCode` from `libphonenumber-js/core` instead
 * ```ts
 * import {getCountryCallingCode} from 'libphonenumber-js/core';
 * import metadata from 'libphonenumber-js/max/metadata';
 *
 * getCountryCallingCode('US', metadata) // 1
 * getCountryCallingCode('GB', metadata) // 44
 * ```
 */
class TuiIsoToCountryCodePipe {
    constructor() {
        this.countriesMasks = inject(TUI_COUNTRIES_MASKS);
    }
    /**
     * @deprecated Use `getCountryCallingCode` from `libphonenumber-js/core` instead
     * ```ts
     * import {getCountryCallingCode} from 'libphonenumber-js/core';
     * import metadata from 'libphonenumber-js/max/metadata';
     *
     * getCountryCallingCode('US', metadata) // 1
     * getCountryCallingCode('GB', metadata) // 44
     * ```
     */
    transform(isoCode) {
        return tuiIsoToCountryCode(this.countriesMasks, isoCode);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiIsoToCountryCodePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe }); }
    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: TuiIsoToCountryCodePipe, isStandalone: true, name: "tuiIsoToCountryCode" }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiIsoToCountryCodePipe, decorators: [{
            type: Pipe,
            args: [{
                    standalone: true,
                    name: 'tuiIsoToCountryCode',
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiIsoToCountryCodePipe };
//# sourceMappingURL=taiga-ui-legacy-pipes-iso-to-country-code.mjs.map
