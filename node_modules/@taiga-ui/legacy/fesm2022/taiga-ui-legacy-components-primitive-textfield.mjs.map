{"version":3,"file":"taiga-ui-legacy-components-primitive-textfield.mjs","sources":["../../../projects/legacy/components/primitive-textfield/value-decoration/value-decoration.component.ts","../../../projects/legacy/components/primitive-textfield/value-decoration/value-decoration.template.html","../../../projects/legacy/components/primitive-textfield/primitive-textfield.component.ts","../../../projects/legacy/components/primitive-textfield/primitive-textfield.template.html","../../../projects/legacy/components/primitive-textfield/primitive-textfield.directive.ts","../../../projects/legacy/components/primitive-textfield/textfield/textfield.component.ts","../../../projects/legacy/components/primitive-textfield/primitive-textfield.module.ts","../../../projects/legacy/components/primitive-textfield/primitive-textfield-options.ts","../../../projects/legacy/components/primitive-textfield/taiga-ui-legacy-components-primitive-textfield.ts"],"sourcesContent":["import type {DoCheck} from '@angular/core';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    inject,\n    ViewChild,\n} from '@angular/core';\nimport {TUI_FOCUSABLE_ITEM_ACCESSOR, TUI_FONTS_READY} from '@taiga-ui/legacy/tokens';\nimport {BehaviorSubject, delay, distinctUntilChanged, filter, map, merge} from 'rxjs';\n\nimport type {TuiPrimitiveTextfield} from '../primitive-textfield-types';\n\n@Component({\n    selector: 'tui-value-decoration',\n    templateUrl: './value-decoration.template.html',\n    styleUrls: ['./value-decoration.style.less'],\n    // It follows Change Detection of PrimitiveTextfield\n    // eslint-disable-next-line @angular-eslint/prefer-on-push-component-change-detection\n    changeDetection: ChangeDetectionStrategy.Default,\n    host: {\n        '[class._table]': 'isContextTable',\n        '[class._filler]': 'filler',\n        '(animationstart)': 'ngDoCheck()',\n    },\n})\nexport class TuiValueDecorationComponent implements DoCheck {\n    @ViewChild('pre', {read: ElementRef, static: true})\n    private readonly pre?: ElementRef<HTMLElement>;\n\n    private readonly textfield = inject<TuiPrimitiveTextfield>(\n        TUI_FOCUSABLE_ITEM_ACCESSOR,\n    );\n\n    private readonly fontsReady$ = inject(TUI_FONTS_READY);\n\n    private readonly prefix$ = new BehaviorSubject('');\n\n    public readonly pre$ = merge(this.fontsReady$, this.prefix$).pipe(\n        delay(0),\n        filter(() => !!this.pre?.nativeElement.isConnected),\n        map(() => this.pre?.nativeElement.offsetWidth || 0),\n        distinctUntilChanged(),\n    );\n\n    public ngDoCheck(): void {\n        this.prefix$.next(this.prefix);\n    }\n\n    protected get isContextTable(): boolean {\n        return this.textfield.appearance === 'table';\n    }\n\n    protected get filler(): string {\n        const {focused, placeholder, exampleText, value, textfield} = this;\n\n        if (placeholder && exampleText) {\n            return '';\n        }\n\n        return focused ? exampleText || textfield.filler.slice(value.length) : '';\n    }\n\n    protected get value(): string {\n        return this.textfield.value;\n    }\n\n    protected get prefix(): string {\n        return this.decorationsVisible ? this.textfield.prefix : '';\n    }\n\n    protected get postfix(): string {\n        return this.decorationsVisible ? this.computedPostfix : '';\n    }\n\n    private get placeholder(): string {\n        return this.textfield.nativeFocusableElement?.placeholder || '';\n    }\n\n    private get exampleText(): string {\n        return !this.value && this.focused ? this.placeholder : '';\n    }\n\n    private get decorationsVisible(): boolean {\n        return !!this.value || (this.focused && !this.placeholder);\n    }\n\n    private get focused(): boolean {\n        return this.textfield.computedFocused && !this.textfield.readOnly;\n    }\n\n    private get computedPostfix(): string {\n        return this.textfield.postfix && (this.filler || this.value)\n            ? ` ${this.textfield.postfix}`\n            : this.textfield.postfix;\n    }\n}\n","<span\n    #pre\n    class=\"t-prefix\"\n    [textContent]=\"prefix\"\n></span>\n<span\n    class=\"t-ghost\"\n    [textContent]=\"value\"\n></span>\n<span\n    class=\"t-filler\"\n    [textContent]=\"filler\"\n></span>\n<span\n    class=\"t-postfix\"\n    [textContent]=\"postfix\"\n></span>\n","import type {ElementRef, QueryList} from '@angular/core';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    EventEmitter,\n    inject,\n    Input,\n    Output,\n    ViewChild,\n} from '@angular/core';\nimport type {TuiContext} from '@taiga-ui/cdk/types';\nimport {tuiInjectElement, tuiRetargetedBoundaryCrossing} from '@taiga-ui/cdk/utils/dom';\nimport {tuiIsNativeFocusedIn} from '@taiga-ui/cdk/utils/focus';\nimport {tuiPure} from '@taiga-ui/cdk/utils/miscellaneous';\nimport {TUI_TEXTFIELD_OPTIONS as OPTIONS} from '@taiga-ui/core/components/textfield';\nimport {TuiHintOptionsDirective} from '@taiga-ui/core/directives/hint';\nimport type {TuiSizeL, TuiSizeS} from '@taiga-ui/core/types';\nimport {AbstractTuiInteractive} from '@taiga-ui/legacy/classes';\nimport {\n    TEXTFIELD_CONTROLLER_PROVIDER,\n    TUI_TEXTFIELD_OPTIONS as LEGACY_OPTIONS,\n    TUI_TEXTFIELD_WATCHED_CONTROLLER,\n} from '@taiga-ui/legacy/directives';\nimport {tuiAsFocusableItemAccessor} from '@taiga-ui/legacy/tokens';\nimport {tuiGetBorder} from '@taiga-ui/legacy/utils';\nimport type {PolymorpheusContent} from '@taiga-ui/polymorpheus';\nimport {PolymorpheusOutlet} from '@taiga-ui/polymorpheus';\nimport type {Observable} from 'rxjs';\nimport {fromEvent, map} from 'rxjs';\n\nimport type {TuiPrimitiveTextfield} from './primitive-textfield-types';\n\nexport const TUI_ICON_START_PADDINGS: Record<TuiSizeL | TuiSizeS, number> = {\n    s: 1.25,\n    m: 1.75,\n    l: 2.25,\n};\n\n/**\n * @deprecated: use {@link TuiTextfield}\n * https://taiga-ui.dev/components/textfield\n */\n@Component({\n    selector: 'tui-primitive-textfield',\n    templateUrl: './primitive-textfield.template.html',\n    styleUrls: ['./primitive-textfield.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        tuiAsFocusableItemAccessor(TuiPrimitiveTextfieldComponent),\n        TEXTFIELD_CONTROLLER_PROVIDER,\n    ],\n    host: {\n        '[attr.data-size]': 'size',\n        '[class._readonly]': 'readOnly',\n        '[class._hidden]': 'inputHidden',\n        '[class._invalid]': 'computedInvalid',\n        '[class._autofilled]': 'autofilled',\n        '[style.--border-start.rem]': 'borderStart',\n        '[style.--border-end.rem]': 'borderEnd',\n        '[class._label-outside]':\n            'options.appearance() === \"table\" || controller.labelOutside',\n        '(focusin)': 'onFocused(true)',\n        '(focusout)': 'onFocused(false)',\n        '(transitionstart.capture)': 'transitionStartHandler($event)',\n    },\n})\nexport class TuiPrimitiveTextfieldComponent\n    extends AbstractTuiInteractive\n    implements TuiPrimitiveTextfield\n{\n    @ViewChild('focusableElement')\n    private readonly focusableElement?: ElementRef<HTMLInputElement>;\n\n    private readonly legacyOptions = inject(LEGACY_OPTIONS);\n    private readonly el = tuiInjectElement();\n\n    @ContentChildren(PolymorpheusOutlet, {descendants: true})\n    protected readonly content?: QueryList<unknown>;\n\n    protected readonly options = inject(OPTIONS);\n    protected readonly controller = inject(TUI_TEXTFIELD_WATCHED_CONTROLLER);\n    protected readonly hintOptions = inject(TuiHintOptionsDirective, {optional: true});\n    protected autofilled = false;\n\n    @Input()\n    public editable = true;\n\n    /**\n     * @deprecated:\n     * use `tuiTextfieldOptionsProvider({iconCleaner: `@tui.chevron-up`})`\n     */\n    @Input()\n    public iconCleaner = this.legacyOptions.iconCleaner;\n\n    @Input()\n    public readOnly = false;\n\n    @Input()\n    public invalid = false;\n\n    @Input()\n    public disabled = false;\n\n    @Input()\n    public value = '';\n\n    @Output()\n    public readonly valueChange = new EventEmitter<string>();\n\n    public get prefix(): string {\n        return this.controller.prefix;\n    }\n\n    public get postfix(): string {\n        return this.controller.postfix;\n    }\n\n    public get filler(): string {\n        return this.controller.filler;\n    }\n\n    public get nativeFocusableElement(): HTMLInputElement | null {\n        if (this.computedDisabled || !this.focusableElement) {\n            return null;\n        }\n\n        const {nativeElement} = this.focusableElement;\n\n        return (nativeElement.previousElementSibling ||\n            nativeElement) as HTMLInputElement | null;\n    }\n\n    public get focused(): boolean {\n        return tuiIsNativeFocusedIn(this.el);\n    }\n\n    public get appearance(): string {\n        return this.options.appearance() === 'table'\n            ? 'table'\n            : this.controller.appearance;\n    }\n\n    public onModelChange(value: string): void {\n        this.updateValue(value);\n    }\n\n    protected get size(): TuiSizeL | TuiSizeS {\n        return this.controller.size;\n    }\n\n    protected get computedInvalid(): boolean {\n        return !this.readOnly && !this.disabled && this.invalid;\n    }\n\n    protected get inputHidden(): boolean {\n        return !!this.content?.length;\n    }\n\n    protected get borderStart(): number {\n        return this.iconLeftContent ? this.iconPaddingLeft : 0;\n    }\n\n    protected get borderEnd(): number {\n        return tuiGetBorder(\n            !!this.iconContent,\n            this.hasCleaner,\n            this.hasTooltip,\n            this.hasCustomContent,\n            this.size,\n        );\n    }\n\n    protected get hasValue(): boolean {\n        return !!this.value;\n    }\n\n    protected get hasCleaner(): boolean {\n        return (\n            this.controller.cleaner &&\n            this.hasValue &&\n            !this.computedDisabled &&\n            !this.readOnly\n        );\n    }\n\n    protected get hasTooltip(): boolean {\n        return !!this.hintOptions?.content && !this.computedDisabled;\n    }\n\n    protected get hasCustomContent(): boolean {\n        return !!this.controller.customContent;\n    }\n\n    protected get placeholderVisible(): boolean {\n        const hasDecor =\n            this.nativeFocusableElement?.placeholder ||\n            this.prefix ||\n            this.postfix ||\n            this.filler;\n        const showDecor = hasDecor && !this.readOnly && this.computedFocused;\n\n        return !this.hasValue && !showDecor;\n    }\n\n    protected get hasPlaceholder(): boolean {\n        return this.placeholderRaisable || this.placeholderVisible;\n    }\n\n    protected get placeholderRaised(): boolean {\n        return (\n            this.placeholderRaisable &&\n            ((this.computedFocused && !this.readOnly) || this.hasValue || this.autofilled)\n        );\n    }\n\n    protected get iconContent(): PolymorpheusContent<TuiContext<TuiSizeL | TuiSizeS>> {\n        return this.controller.icon;\n    }\n\n    protected get iconLeftContent(): PolymorpheusContent<\n        TuiContext<TuiSizeL | TuiSizeS>\n    > {\n        return this.controller.iconStart;\n    }\n\n    protected get showHint(): boolean {\n        return (\n            !!this.hintOptions?.content &&\n            (this.legacyOptions.hintOnDisabled || !this.computedDisabled)\n        );\n    }\n\n    // Safari expiration date autofill workaround\n    protected get name(): 'ccexpiryyear' | null {\n        return this.nativeFocusableElement?.autocomplete === 'cc-exp'\n            ? 'ccexpiryyear'\n            : null;\n    }\n\n    protected get computedId(): string {\n        return this.nativeFocusableElement?.id || '';\n    }\n\n    @tuiPure\n    protected getIndent$(element: HTMLElement): Observable<number> {\n        return fromEvent(element, 'scroll').pipe(\n            map(() => -1 * Math.max(element.scrollLeft, 0)),\n        );\n    }\n\n    protected onFocused(focused: boolean): void {\n        this.updateFocused(focused);\n    }\n\n    protected clear(): void {\n        if (this.nativeFocusableElement) {\n            this.nativeFocusableElement.value = '';\n        }\n\n        this.updateValue('');\n    }\n\n    protected onMouseDown(event: MouseEvent): void {\n        const {nativeFocusableElement} = this;\n\n        if (!nativeFocusableElement || event.target === nativeFocusableElement) {\n            return;\n        }\n\n        event.preventDefault();\n        nativeFocusableElement.focus();\n    }\n\n    protected transitionStartHandler({propertyName, target}: TransitionEvent): void {\n        const matchedAutofill =\n            propertyName.includes('box-shadow') && (target as Element)?.matches('input');\n\n        if (matchedAutofill) {\n            this.onAutofilled(!this.autofilled);\n        }\n    }\n\n    protected onAutofilled(autofilled: boolean): void {\n        this.updateAutofilled(autofilled);\n    }\n\n    protected detectRetargetFromLabel(event: Event): void {\n        if (tuiRetargetedBoundaryCrossing(event)) {\n            event.stopImmediatePropagation();\n        }\n    }\n\n    private get iconPaddingLeft(): number {\n        return TUI_ICON_START_PADDINGS[this.size];\n    }\n\n    private get placeholderRaisable(): boolean {\n        return this.size !== 's' && !this.controller.labelOutside;\n    }\n\n    private updateAutofilled(autofilled: boolean): void {\n        if (this.autofilled === autofilled) {\n            return;\n        }\n\n        this.autofilled = autofilled;\n    }\n\n    private updateValue(value: string): void {\n        this.value = value;\n        this.valueChange.emit(value);\n    }\n}\n","<ng-container *ngIf=\"content?.changes | async\" />\n<ng-container *ngIf=\"hintOptions?.change$ | async\" />\n<div\n    automation-id=\"tui-primitive-textfield__wrapper\"\n    tuiWrapper\n    [active]=\"pseudoActive\"\n    [appearance]=\"appearance\"\n    [disabled]=\"disabled\"\n    [focus]=\"computedFocused\"\n    [hover]=\"pseudoHover\"\n    [invalid]=\"computedInvalid\"\n    [readOnly]=\"readOnly\"\n    [style.--text-indent.px]=\"decor.pre$ | async\"\n    (click.prevent.silent)=\"detectRetargetFromLabel($event)\"\n    (mousedown)=\"onMouseDown($event)\"\n>\n    <ng-content select=\"input\" />\n    <ng-content select=\"select\" />\n    <input\n        #focusableElement\n        automation-id=\"tui-primitive-textfield__native-input\"\n        class=\"t-input\"\n        [attr.aria-invalid]=\"computedInvalid\"\n        [attr.name]=\"name\"\n        [disabled]=\"computedDisabled\"\n        [id]=\"id\"\n        [ngModel]=\"value\"\n        [ngModelOptions]=\"{standalone: true}\"\n        [readOnly]=\"readOnly || !editable\"\n        [tabIndex]=\"computedFocusable ? 0 : -1\"\n        (ngModelChange)=\"onModelChange($event)\"\n    />\n    <div\n        *ngIf=\"inputHidden\"\n        automation-id=\"tui-primitive-textfield__value\"\n        class=\"t-input t-input_template\"\n    >\n        <ng-content select=\"tuiContent\" />\n    </div>\n    <div class=\"t-content\">\n        <div\n            *ngIf=\"iconLeftContent\"\n            class=\"t-icon t-icon_left t-textfield-icon\"\n        >\n            <tui-icon\n                *polymorpheusOutlet=\"iconLeftContent as src; context: {$implicit: size}\"\n                tuiAppearance=\"icon\"\n                [icon]=\"src.toString()\"\n            />\n        </div>\n        <div class=\"t-wrapper\">\n            <label\n                *ngIf=\"hasPlaceholder\"\n                automation-id=\"tui-primitive-textfield__placeholder\"\n                class=\"t-placeholder\"\n                [class.t-placeholder_raised]=\"placeholderRaised\"\n                [for]=\"computedId\"\n            >\n                <ng-content />\n            </label>\n            <div class=\"t-wrapper-value-decoration\">\n                <tui-value-decoration\n                    #decor\n                    aria-hidden=\"true\"\n                    automation-id=\"tui-primitive-textfield__value-decoration\"\n                    class=\"t-value-decoration\"\n                    [class.t-has-value]=\"value\"\n                    [style.textIndent.px]=\"getIndent$(focusableElement) | async\"\n                />\n            </div>\n        </div>\n        <div class=\"t-icons\">\n            <div\n                *ngIf=\"hasCustomContent\"\n                automation-id=\"tui-primitive-textfield__custom-content\"\n                class=\"t-custom-content\"\n            >\n                <tui-icon\n                    *polymorpheusOutlet=\"controller.customContent as src\"\n                    class=\"t-custom-icon\"\n                    [icon]=\"src\"\n                />\n            </div>\n            <span\n                *ngIf=\"hasCleaner\"\n                appearance=\"icon\"\n                automation-id=\"tui-primitive-textfield__cleaner\"\n                tuiWrapper\n                class=\"t-cleaner\"\n                (click.stop)=\"clear()\"\n            >\n                <tui-icon\n                    *polymorpheusOutlet=\"\n                        iconCleaner || controller.options.iconCleaner as src;\n                        context: {$implicit: size}\n                    \"\n                    [icon]=\"src.toString()\"\n                    [style.border]=\"'0.25rem solid transparent'\"\n                />\n            </span>\n            <tui-tooltip\n                *ngIf=\"showHint\"\n                automation-id=\"tui-primitive-textfield__tooltip\"\n                class=\"t-tooltip\"\n                [content]=\"hintOptions?.content\"\n                [describeId]=\"computedId\"\n            />\n            <div\n                *ngIf=\"iconContent\"\n                class=\"t-icon t-textfield-icon\"\n            >\n                <tui-icon\n                    *polymorpheusOutlet=\"iconContent as src; context: {$implicit: size}\"\n                    tuiAppearance=\"icon\"\n                    [icon]=\"src.toString()\"\n                />\n            </div>\n        </div>\n    </div>\n</div>\n","import {Directive, inject} from '@angular/core';\nimport {AbstractTuiTextfieldHost} from '@taiga-ui/legacy/classes';\nimport {tuiAsTextfieldHost} from '@taiga-ui/legacy/tokens';\n\nimport {TuiPrimitiveTextfieldComponent} from './primitive-textfield.component';\n\n/**\n * @deprecated: use {@link TuiTextfield}\n * https://taiga-ui.dev/components/textfield\n */\n@Directive({\n    selector: 'tui-primitive-textfield',\n    providers: [tuiAsTextfieldHost(TuiPrimitiveTextfieldDirective)],\n})\nexport class TuiPrimitiveTextfieldDirective extends AbstractTuiTextfieldHost<any> {\n    protected override readonly host = inject(TuiPrimitiveTextfieldComponent);\n\n    public override get readOnly(): boolean {\n        return this.host.readOnly || !this.host.editable;\n    }\n\n    public onValueChange(value: string): void {\n        this.host.onModelChange(value);\n    }\n}\n","import {ChangeDetectionStrategy, Component, inject} from '@angular/core';\nimport {tuiInjectId} from '@taiga-ui/cdk/services';\nimport {tuiInjectElement} from '@taiga-ui/cdk/utils/dom';\nimport {\n    TEXTFIELD_CONTROLLER_PROVIDER,\n    TUI_TEXTFIELD_WATCHED_CONTROLLER,\n} from '@taiga-ui/legacy/directives';\nimport type {TuiTextfieldHost} from '@taiga-ui/legacy/tokens';\nimport {TUI_TEXTFIELD_HOST} from '@taiga-ui/legacy/tokens';\n\n@Component({\n    selector: 'input[tuiTextfieldLegacy], textarea[tuiTextfieldLegacy]',\n    template: '',\n    styleUrls: ['./textfield.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [TEXTFIELD_CONTROLLER_PROVIDER],\n    host: {\n        type: 'text',\n        '[attr.id]': 'id',\n        '[attr.inputMode]': 'inputMode',\n        '[attr.aria-invalid]': 'host.invalid',\n        '[attr.disabled]': 'host.disabled || null',\n        '[tabIndex]': 'host.focusable ? 0 : -1',\n        '[readOnly]': 'host.readOnly',\n        '[value]': 'host.value',\n        '(input)': 'host.onValueChange($event.target.value)',\n    },\n})\nexport class TuiTextfieldComponent {\n    private readonly autoId = tuiInjectId();\n    private readonly el = tuiInjectElement<HTMLInputElement>();\n    protected readonly controller = inject(TUI_TEXTFIELD_WATCHED_CONTROLLER);\n    protected readonly host = inject<TuiTextfieldHost>(TUI_TEXTFIELD_HOST);\n\n    constructor() {\n        this.host.process(this.el);\n    }\n\n    protected get id(): string {\n        return this.el.id || this.autoId;\n    }\n\n    protected get inputMode(): string {\n        return this.el.inputMode || this.host.inputMode;\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {TuiIcon} from '@taiga-ui/core/components/icon';\nimport {TuiAppearance} from '@taiga-ui/core/directives/appearance';\nimport {TuiTooltipModule} from '@taiga-ui/legacy/components/tooltip';\nimport {TuiWrapperModule} from '@taiga-ui/legacy/directives/wrapper';\nimport {PolymorpheusOutlet, PolymorpheusTemplate} from '@taiga-ui/polymorpheus';\n\nimport {TuiPrimitiveTextfieldComponent} from './primitive-textfield.component';\nimport {TuiPrimitiveTextfieldDirective} from './primitive-textfield.directive';\nimport {TuiTextfieldComponent} from './textfield/textfield.component';\nimport {TuiValueDecorationComponent} from './value-decoration/value-decoration.component';\n\n/**\n * @deprecated: use {@link TuiTextfield}\n * https://taiga-ui.dev/components/textfield\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        PolymorpheusOutlet,\n        PolymorpheusTemplate,\n        TuiWrapperModule,\n        TuiTooltipModule,\n        TuiIcon,\n        TuiAppearance,\n    ],\n    declarations: [\n        TuiPrimitiveTextfieldComponent,\n        TuiPrimitiveTextfieldDirective,\n        TuiTextfieldComponent,\n        TuiValueDecorationComponent,\n    ],\n    exports: [\n        TuiPrimitiveTextfieldComponent,\n        TuiPrimitiveTextfieldDirective,\n        TuiTextfieldComponent,\n    ],\n})\nexport class TuiPrimitiveTextfieldModule {}\n","import type {TuiTextfieldOptions} from '@taiga-ui/legacy/directives';\nimport {\n    TUI_TEXTFIELD_DEFAULT_OPTIONS,\n    TUI_TEXTFIELD_OPTIONS,\n    tuiTextfieldOptionsProvider,\n} from '@taiga-ui/legacy/directives';\n\n/**\n * @deprecated:\n * use {@link TuiTextfieldOptions}\n */\nexport type TuiPrimitiveTextfieldOptions = TuiTextfieldOptions;\n\n/**\n * @deprecated:\n * use {@link TUI_TEXTFIELD_DEFAULT_OPTIONS}\n */\nexport const TUI_PRIMITIVE_TEXTFIELD_DEFAULT_OPTIONS: TuiPrimitiveTextfieldOptions =\n    TUI_TEXTFIELD_DEFAULT_OPTIONS;\n\n/**\n * @deprecated:\n * use {@link TUI_TEXTFIELD_OPTIONS}\n */\nexport const TUI_PRIMITIVE_TEXTFIELD_OPTIONS = TUI_TEXTFIELD_OPTIONS;\n\n/**\n * @deprecated:\n * use {@link tuiTextfieldOptionsProvider}\n */\nexport const tuiPrimitiveTextfieldOptionsProvider = tuiTextfieldOptionsProvider;\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["LEGACY_OPTIONS","OPTIONS","i8.TuiValueDecorationComponent"],"mappings":"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"}