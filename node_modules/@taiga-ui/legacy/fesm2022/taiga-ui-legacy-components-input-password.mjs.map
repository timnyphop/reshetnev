{"version":3,"file":"taiga-ui-legacy-components-input-password.mjs","sources":["../../../projects/legacy/components/input-password/input-password.options.ts","../../../projects/legacy/components/input-password/input-password.component.ts","../../../projects/legacy/components/input-password/input-password.template.html","../../../projects/legacy/components/input-password/input-password.directive.ts","../../../projects/legacy/components/input-password/input-password.module.ts","../../../projects/legacy/components/input-password/taiga-ui-legacy-components-input-password.ts"],"sourcesContent":["import type {Provider} from '@angular/core';\nimport type {TuiContext} from '@taiga-ui/cdk/types';\nimport {tuiCreateToken, tuiProvideOptions} from '@taiga-ui/cdk/utils/miscellaneous';\nimport type {TuiSizeL, TuiSizeS} from '@taiga-ui/core/types';\nimport type {PolymorpheusContent} from '@taiga-ui/polymorpheus';\n\n/**\n * @deprecated use {@link TuiInputPassword} instead\n */\nexport interface TuiInputPasswordOptions {\n    readonly icons: Readonly<{\n        hide: PolymorpheusContent<TuiContext<TuiSizeL | TuiSizeS>>;\n        show: PolymorpheusContent<TuiContext<TuiSizeL | TuiSizeS>>;\n    }>;\n}\n\n/**\n * @deprecated use {@link TuiInputPassword} instead\n */\nexport const TUI_INPUT_PASSWORD_DEFAULT_OPTIONS: TuiInputPasswordOptions = {\n    icons: {\n        hide: () => '@tui.eye',\n        show: () => '@tui.eye-off',\n    },\n};\n\n/**\n * @deprecated use {@link TuiInputPassword} instead\n */\nexport const TUI_INPUT_PASSWORD_OPTIONS = tuiCreateToken(\n    TUI_INPUT_PASSWORD_DEFAULT_OPTIONS,\n);\n\n/**\n * @deprecated use {@link TuiInputPassword} instead\n */\nexport function tuiInputPasswordOptionsProvider(\n    options: Partial<TuiInputPasswordOptions>,\n): Provider {\n    return tuiProvideOptions(\n        TUI_INPUT_PASSWORD_OPTIONS,\n        options,\n        TUI_INPUT_PASSWORD_DEFAULT_OPTIONS,\n    );\n}\n","import {ChangeDetectionStrategy, Component, inject, ViewChild} from '@angular/core';\nimport type {TuiContext} from '@taiga-ui/cdk/types';\nimport {TuiHintOptionsDirective} from '@taiga-ui/core/directives/hint';\nimport type {TuiSizeL, TuiSizeS} from '@taiga-ui/core/types';\nimport {TUI_PASSWORD_TEXTS} from '@taiga-ui/kit/tokens';\nimport {AbstractTuiControl, tuiAsControl} from '@taiga-ui/legacy/classes';\nimport {TuiPrimitiveTextfieldComponent} from '@taiga-ui/legacy/components/primitive-textfield';\nimport {TUI_TEXTFIELD_SIZE} from '@taiga-ui/legacy/directives';\nimport type {\n    TuiFocusableElementAccessor,\n    TuiNativeFocusableElement,\n} from '@taiga-ui/legacy/tokens';\nimport {tuiAsFocusableItemAccessor} from '@taiga-ui/legacy/tokens';\nimport type {PolymorpheusContent} from '@taiga-ui/polymorpheus';\nimport type {Observable} from 'rxjs';\nimport {EMPTY, map, startWith} from 'rxjs';\n\nimport {TUI_INPUT_PASSWORD_OPTIONS} from './input-password.options';\n\n/**\n * @deprecated use {@link TuiInputPassword} instead\n */\n@Component({\n    selector: 'tui-input-password',\n    templateUrl: './input-password.template.html',\n    styleUrls: ['./input-password.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        tuiAsFocusableItemAccessor(TuiInputPasswordComponent),\n        tuiAsControl(TuiInputPasswordComponent),\n    ],\n    host: {\n        '[attr.data-size]': 'size',\n    },\n})\nexport class TuiInputPasswordComponent\n    extends AbstractTuiControl<string>\n    implements TuiFocusableElementAccessor\n{\n    @ViewChild(TuiPrimitiveTextfieldComponent)\n    private readonly textfield?: TuiPrimitiveTextfieldComponent;\n\n    private readonly textfieldSize = inject(TUI_TEXTFIELD_SIZE);\n    protected readonly hintOptions = inject(TuiHintOptionsDirective, {optional: true});\n    protected readonly directive$: Observable<any> = this.hintOptions?.change$ || EMPTY;\n\n    protected isPasswordHidden = true;\n\n    protected readonly computedAppearance$: Observable<string> = this.directive$.pipe(\n        startWith(null),\n        map(() => this.hintOptions?.appearance || ''),\n        startWith(''),\n    );\n\n    protected readonly passwordTexts$ = inject(TUI_PASSWORD_TEXTS);\n    protected readonly options = inject(TUI_INPUT_PASSWORD_OPTIONS);\n    protected readonly type!: TuiContext<TuiSizeL | TuiSizeS>;\n\n    public get nativeFocusableElement(): TuiNativeFocusableElement | null {\n        return this.computedDisabled || !this.textfield\n            ? null\n            : this.textfield.nativeFocusableElement;\n    }\n\n    public get focused(): boolean {\n        return !!this.textfield?.focused;\n    }\n\n    public get inputType(): string {\n        return this.isPasswordHidden || this.computedDisabled ? 'password' : 'text';\n    }\n\n    public onValueChange(textValue: string): void {\n        this.value = textValue;\n    }\n\n    protected get size(): TuiSizeL | TuiSizeS {\n        return this.textfieldSize.size;\n    }\n\n    protected get icon(): PolymorpheusContent<TuiContext<TuiSizeL | TuiSizeS>> {\n        return this.isPasswordHidden ? this.options.icons.show : this.options.icons.hide;\n    }\n\n    protected onFocused(focused: boolean): void {\n        this.updateFocused(focused);\n    }\n\n    protected togglePasswordVisibility(): void {\n        this.isPasswordHidden = !this.isPasswordHidden;\n    }\n\n    protected getFallbackValue(): string {\n        return '';\n    }\n}\n","<tui-primitive-textfield\n    class=\"t-textfield\"\n    [disabled]=\"computedDisabled\"\n    [focusable]=\"focusable\"\n    [invalid]=\"computedInvalid\"\n    [nativeId]=\"nativeId\"\n    [pseudoActive]=\"pseudoActive\"\n    [pseudoFocus]=\"pseudoFocus\"\n    [pseudoHover]=\"pseudoHover\"\n    [readOnly]=\"readOnly\"\n    [tuiTextfieldIcon]=\"!computedDisabled ? iconContent : ''\"\n    [(value)]=\"value\"\n    (focusedChange)=\"onFocused($event)\"\n>\n    <ng-content />\n    <ng-content\n        ngProjectAs=\"input\"\n        select=\"input\"\n    />\n</tui-primitive-textfield>\n\n<ng-template\n    #iconContent=\"polymorpheus\"\n    [polymorpheus]=\"type\"\n>\n    <ng-container *ngIf=\"passwordTexts$ | async as texts\">\n        <tui-icon\n            *polymorpheusOutlet=\"icon as src; context: {$implicit: size}\"\n            automation-id=\"tui-password__icon\"\n            tuiAppearance=\"icon\"\n            class=\"t-icon\"\n            [class.t-icon_small]=\"size === 's'\"\n            [icon]=\"src.toString()\"\n            [tuiHint]=\"texts[0] && texts[1] && hintContent\"\n            [tuiHintAppearance]=\"(computedAppearance$ | async) || ''\"\n            [tuiHintDirection]=\"hintOptions?.direction || 'bottom-left'\"\n            (click)=\"togglePasswordVisibility()\"\n            (mousedown.silent.prevent)=\"(0)\"\n            (mouseup.silent.prevent)=\"(0)\"\n        />\n\n        <ng-template\n            #hintContent=\"polymorpheus\"\n            polymorpheus\n        >\n            {{ isPasswordHidden ? texts[0] : texts[1] }}\n        </ng-template>\n    </ng-container>\n</ng-template>\n","import type {DoCheck} from '@angular/core';\nimport {Directive} from '@angular/core';\nimport {tuiIsInput} from '@taiga-ui/cdk/utils/dom';\nimport {AbstractTuiTextfieldHost} from '@taiga-ui/legacy/classes';\nimport {tuiAsTextfieldHost} from '@taiga-ui/legacy/tokens';\n\nimport type {TuiInputPasswordComponent} from './input-password.component';\n\n/**\n * @deprecated use {@link TuiInputPassword} instead\n */\n@Directive({\n    selector: 'tui-input-password',\n    providers: [tuiAsTextfieldHost(TuiInputPasswordDirective)],\n})\nexport class TuiInputPasswordDirective\n    extends AbstractTuiTextfieldHost<TuiInputPasswordComponent>\n    implements DoCheck\n{\n    protected input?: HTMLInputElement;\n\n    public onValueChange(value: string): void {\n        this.host.onValueChange(value);\n    }\n\n    public override process(input: HTMLInputElement): void {\n        this.input = input;\n    }\n\n    public ngDoCheck(): void {\n        if (\n            this.host.nativeFocusableElement &&\n            tuiIsInput(this.host.nativeFocusableElement)\n        ) {\n            this.host.nativeFocusableElement.type = this.host.inputType;\n        }\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {TuiIcon} from '@taiga-ui/core/components/icon';\nimport {TuiAppearance} from '@taiga-ui/core/directives/appearance';\nimport {TuiHint} from '@taiga-ui/core/directives/hint';\nimport {\n    TuiPrimitiveTextfieldModule,\n    TuiTextfieldComponent,\n} from '@taiga-ui/legacy/components/primitive-textfield';\nimport {TuiTextfieldControllerModule} from '@taiga-ui/legacy/directives';\nimport {PolymorpheusOutlet, PolymorpheusTemplate} from '@taiga-ui/polymorpheus';\n\nimport {TuiInputPasswordComponent} from './input-password.component';\nimport {TuiInputPasswordDirective} from './input-password.directive';\n\n/**\n * @deprecated use {@link TuiInputPassword} instead\n */\n@NgModule({\n    imports: [\n        ...TuiHint,\n        CommonModule,\n        FormsModule,\n        PolymorpheusOutlet,\n        PolymorpheusTemplate,\n        TuiPrimitiveTextfieldModule,\n        TuiTextfieldControllerModule,\n        TuiAppearance,\n        TuiIcon,\n    ],\n    declarations: [TuiInputPasswordComponent, TuiInputPasswordDirective],\n    exports: [\n        TuiInputPasswordComponent,\n        TuiInputPasswordDirective,\n        TuiTextfieldComponent,\n        ...TuiHint,\n    ],\n})\nexport class TuiInputPasswordModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}