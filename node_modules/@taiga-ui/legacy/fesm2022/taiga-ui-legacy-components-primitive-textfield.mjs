import { __decorate } from 'tslib';
import * as i0 from '@angular/core';
import { inject, ElementRef, Component, ChangeDetectionStrategy, ViewChild, EventEmitter, ContentChildren, Input, Output, Directive, NgModule } from '@angular/core';
import { tuiInjectElement, tuiRetargetedBoundaryCrossing } from '@taiga-ui/cdk/utils/dom';
import { tuiIsNativeFocusedIn } from '@taiga-ui/cdk/utils/focus';
import { tuiPure } from '@taiga-ui/cdk/utils/miscellaneous';
import { TUI_TEXTFIELD_OPTIONS as TUI_TEXTFIELD_OPTIONS$1 } from '@taiga-ui/core/components/textfield';
import { TuiHintOptionsDirective } from '@taiga-ui/core/directives/hint';
import { AbstractTuiInteractive, AbstractTuiTextfieldHost } from '@taiga-ui/legacy/classes';
import { TUI_TEXTFIELD_OPTIONS, TUI_TEXTFIELD_WATCHED_CONTROLLER, TEXTFIELD_CONTROLLER_PROVIDER, TUI_TEXTFIELD_DEFAULT_OPTIONS, tuiTextfieldOptionsProvider } from '@taiga-ui/legacy/directives';
import { TUI_FOCUSABLE_ITEM_ACCESSOR, TUI_FONTS_READY, tuiAsFocusableItemAccessor, tuiAsTextfieldHost, TUI_TEXTFIELD_HOST } from '@taiga-ui/legacy/tokens';
import { tuiGetBorder } from '@taiga-ui/legacy/utils';
import * as i3 from '@taiga-ui/polymorpheus';
import { PolymorpheusOutlet, PolymorpheusTemplate } from '@taiga-ui/polymorpheus';
import { BehaviorSubject, merge, delay, filter, map, distinctUntilChanged, fromEvent } from 'rxjs';
import * as i1 from '@angular/common';
import { CommonModule } from '@angular/common';
import * as i2 from '@angular/forms';
import { FormsModule } from '@angular/forms';
import * as i4 from '@taiga-ui/legacy/directives/wrapper';
import { TuiWrapperModule } from '@taiga-ui/legacy/directives/wrapper';
import * as i5 from '@taiga-ui/legacy/components/tooltip';
import { TuiTooltipModule } from '@taiga-ui/legacy/components/tooltip';
import * as i6 from '@taiga-ui/core/components/icon';
import { TuiIcon } from '@taiga-ui/core/components/icon';
import * as i7 from '@taiga-ui/core/directives/appearance';
import { TuiAppearance } from '@taiga-ui/core/directives/appearance';
import { tuiInjectId } from '@taiga-ui/cdk/services';

class TuiValueDecorationComponent {
    constructor() {
        this.textfield = inject(TUI_FOCUSABLE_ITEM_ACCESSOR);
        this.fontsReady$ = inject(TUI_FONTS_READY);
        this.prefix$ = new BehaviorSubject('');
        this.pre$ = merge(this.fontsReady$, this.prefix$).pipe(delay(0), filter(() => !!this.pre?.nativeElement.isConnected), map(() => this.pre?.nativeElement.offsetWidth || 0), distinctUntilChanged());
    }
    ngDoCheck() {
        this.prefix$.next(this.prefix);
    }
    get isContextTable() {
        return this.textfield.appearance === 'table';
    }
    get filler() {
        const { focused, placeholder, exampleText, value, textfield } = this;
        if (placeholder && exampleText) {
            return '';
        }
        return focused ? exampleText || textfield.filler.slice(value.length) : '';
    }
    get value() {
        return this.textfield.value;
    }
    get prefix() {
        return this.decorationsVisible ? this.textfield.prefix : '';
    }
    get postfix() {
        return this.decorationsVisible ? this.computedPostfix : '';
    }
    get placeholder() {
        return this.textfield.nativeFocusableElement?.placeholder || '';
    }
    get exampleText() {
        return !this.value && this.focused ? this.placeholder : '';
    }
    get decorationsVisible() {
        return !!this.value || (this.focused && !this.placeholder);
    }
    get focused() {
        return this.textfield.computedFocused && !this.textfield.readOnly;
    }
    get computedPostfix() {
        return this.textfield.postfix && (this.filler || this.value)
            ? ` ${this.textfield.postfix}`
            : this.textfield.postfix;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiValueDecorationComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiValueDecorationComponent, selector: "tui-value-decoration", host: { listeners: { "animationstart": "ngDoCheck()" }, properties: { "class._table": "isContextTable", "class._filler": "filler" } }, viewQueries: [{ propertyName: "pre", first: true, predicate: ["pre"], descendants: true, read: ElementRef, static: true }], ngImport: i0, template: "<span\n    #pre\n    class=\"t-prefix\"\n    [textContent]=\"prefix\"\n></span>\n<span\n    class=\"t-ghost\"\n    [textContent]=\"value\"\n></span>\n<span\n    class=\"t-filler\"\n    [textContent]=\"filler\"\n></span>\n<span\n    class=\"t-postfix\"\n    [textContent]=\"postfix\"\n></span>\n", styles: [":host{position:absolute;display:block;inline-size:100%;line-height:var(--tui-height);margin-top:calc(var(--tui-height) / -2);box-sizing:content-box;color:var(--tui-text-tertiary);animation:tuiPresent 1s;white-space:nowrap}:host._table{position:static;margin-top:0}:host._filler{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}:host-context(tui-primitive-textfield[data-size=\"m\"]:not(._label-outside)) :host{line-height:calc(var(--tui-height) - .25rem)}.t-ghost{visibility:hidden;white-space:pre;text-overflow:clip}.t-prefix,.t-postfix{white-space:pre;color:var(--tui-text-primary)}.t-filler{max-inline-size:100%;white-space:nowrap}\n"], changeDetection: i0.ChangeDetectionStrategy.Default }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiValueDecorationComponent, decorators: [{
            type: Component,
            args: [{ selector: 'tui-value-decoration', changeDetection: ChangeDetectionStrategy.Default, host: {
                        '[class._table]': 'isContextTable',
                        '[class._filler]': 'filler',
                        '(animationstart)': 'ngDoCheck()',
                    }, template: "<span\n    #pre\n    class=\"t-prefix\"\n    [textContent]=\"prefix\"\n></span>\n<span\n    class=\"t-ghost\"\n    [textContent]=\"value\"\n></span>\n<span\n    class=\"t-filler\"\n    [textContent]=\"filler\"\n></span>\n<span\n    class=\"t-postfix\"\n    [textContent]=\"postfix\"\n></span>\n", styles: [":host{position:absolute;display:block;inline-size:100%;line-height:var(--tui-height);margin-top:calc(var(--tui-height) / -2);box-sizing:content-box;color:var(--tui-text-tertiary);animation:tuiPresent 1s;white-space:nowrap}:host._table{position:static;margin-top:0}:host._filler{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}:host-context(tui-primitive-textfield[data-size=\"m\"]:not(._label-outside)) :host{line-height:calc(var(--tui-height) - .25rem)}.t-ghost{visibility:hidden;white-space:pre;text-overflow:clip}.t-prefix,.t-postfix{white-space:pre;color:var(--tui-text-primary)}.t-filler{max-inline-size:100%;white-space:nowrap}\n"] }]
        }], propDecorators: { pre: [{
                type: ViewChild,
                args: ['pre', { read: ElementRef, static: true }]
            }] } });

const TUI_ICON_START_PADDINGS = {
    s: 1.25,
    m: 1.75,
    l: 2.25,
};
/**
 * @deprecated: use {@link TuiTextfield}
 * https://taiga-ui.dev/components/textfield
 */
class TuiPrimitiveTextfieldComponent extends AbstractTuiInteractive {
    constructor() {
        super(...arguments);
        this.legacyOptions = inject(TUI_TEXTFIELD_OPTIONS);
        this.el = tuiInjectElement();
        this.options = inject(TUI_TEXTFIELD_OPTIONS$1);
        this.controller = inject(TUI_TEXTFIELD_WATCHED_CONTROLLER);
        this.hintOptions = inject(TuiHintOptionsDirective, { optional: true });
        this.autofilled = false;
        this.editable = true;
        /**
         * @deprecated:
         * use `tuiTextfieldOptionsProvider({iconCleaner: `@tui.chevron-up`})`
         */
        this.iconCleaner = this.legacyOptions.iconCleaner;
        this.readOnly = false;
        this.invalid = false;
        this.disabled = false;
        this.value = '';
        this.valueChange = new EventEmitter();
    }
    get prefix() {
        return this.controller.prefix;
    }
    get postfix() {
        return this.controller.postfix;
    }
    get filler() {
        return this.controller.filler;
    }
    get nativeFocusableElement() {
        if (this.computedDisabled || !this.focusableElement) {
            return null;
        }
        const { nativeElement } = this.focusableElement;
        return (nativeElement.previousElementSibling ||
            nativeElement);
    }
    get focused() {
        return tuiIsNativeFocusedIn(this.el);
    }
    get appearance() {
        return this.options.appearance() === 'table'
            ? 'table'
            : this.controller.appearance;
    }
    onModelChange(value) {
        this.updateValue(value);
    }
    get size() {
        return this.controller.size;
    }
    get computedInvalid() {
        return !this.readOnly && !this.disabled && this.invalid;
    }
    get inputHidden() {
        return !!this.content?.length;
    }
    get borderStart() {
        return this.iconLeftContent ? this.iconPaddingLeft : 0;
    }
    get borderEnd() {
        return tuiGetBorder(!!this.iconContent, this.hasCleaner, this.hasTooltip, this.hasCustomContent, this.size);
    }
    get hasValue() {
        return !!this.value;
    }
    get hasCleaner() {
        return (this.controller.cleaner &&
            this.hasValue &&
            !this.computedDisabled &&
            !this.readOnly);
    }
    get hasTooltip() {
        return !!this.hintOptions?.content && !this.computedDisabled;
    }
    get hasCustomContent() {
        return !!this.controller.customContent;
    }
    get placeholderVisible() {
        const hasDecor = this.nativeFocusableElement?.placeholder ||
            this.prefix ||
            this.postfix ||
            this.filler;
        const showDecor = hasDecor && !this.readOnly && this.computedFocused;
        return !this.hasValue && !showDecor;
    }
    get hasPlaceholder() {
        return this.placeholderRaisable || this.placeholderVisible;
    }
    get placeholderRaised() {
        return (this.placeholderRaisable &&
            ((this.computedFocused && !this.readOnly) || this.hasValue || this.autofilled));
    }
    get iconContent() {
        return this.controller.icon;
    }
    get iconLeftContent() {
        return this.controller.iconStart;
    }
    get showHint() {
        return (!!this.hintOptions?.content &&
            (this.legacyOptions.hintOnDisabled || !this.computedDisabled));
    }
    // Safari expiration date autofill workaround
    get name() {
        return this.nativeFocusableElement?.autocomplete === 'cc-exp'
            ? 'ccexpiryyear'
            : null;
    }
    get computedId() {
        return this.nativeFocusableElement?.id || '';
    }
    getIndent$(element) {
        return fromEvent(element, 'scroll').pipe(map(() => -1 * Math.max(element.scrollLeft, 0)));
    }
    onFocused(focused) {
        this.updateFocused(focused);
    }
    clear() {
        if (this.nativeFocusableElement) {
            this.nativeFocusableElement.value = '';
        }
        this.updateValue('');
    }
    onMouseDown(event) {
        const { nativeFocusableElement } = this;
        if (!nativeFocusableElement || event.target === nativeFocusableElement) {
            return;
        }
        event.preventDefault();
        nativeFocusableElement.focus();
    }
    transitionStartHandler({ propertyName, target }) {
        const matchedAutofill = propertyName.includes('box-shadow') && target?.matches('input');
        if (matchedAutofill) {
            this.onAutofilled(!this.autofilled);
        }
    }
    onAutofilled(autofilled) {
        this.updateAutofilled(autofilled);
    }
    detectRetargetFromLabel(event) {
        if (tuiRetargetedBoundaryCrossing(event)) {
            event.stopImmediatePropagation();
        }
    }
    get iconPaddingLeft() {
        return TUI_ICON_START_PADDINGS[this.size];
    }
    get placeholderRaisable() {
        return this.size !== 's' && !this.controller.labelOutside;
    }
    updateAutofilled(autofilled) {
        if (this.autofilled === autofilled) {
            return;
        }
        this.autofilled = autofilled;
    }
    updateValue(value) {
        this.value = value;
        this.valueChange.emit(value);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiPrimitiveTextfieldComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiPrimitiveTextfieldComponent, selector: "tui-primitive-textfield", inputs: { editable: "editable", iconCleaner: "iconCleaner", readOnly: "readOnly", invalid: "invalid", disabled: "disabled", value: "value" }, outputs: { valueChange: "valueChange" }, host: { listeners: { "focusin": "onFocused(true)", "focusout": "onFocused(false)", "transitionstart.capture": "transitionStartHandler($event)" }, properties: { "attr.data-size": "size", "class._readonly": "readOnly", "class._hidden": "inputHidden", "class._invalid": "computedInvalid", "class._autofilled": "autofilled", "style.--border-start.rem": "borderStart", "style.--border-end.rem": "borderEnd", "class._label-outside": "options.appearance() === \"table\" || controller.labelOutside" } }, providers: [
            tuiAsFocusableItemAccessor(TuiPrimitiveTextfieldComponent),
            TEXTFIELD_CONTROLLER_PROVIDER,
        ], queries: [{ propertyName: "content", predicate: PolymorpheusOutlet, descendants: true }], viewQueries: [{ propertyName: "focusableElement", first: true, predicate: ["focusableElement"], descendants: true }], usesInheritance: true, ngImport: i0, template: "<ng-container *ngIf=\"content?.changes | async\" />\n<ng-container *ngIf=\"hintOptions?.change$ | async\" />\n<div\n    automation-id=\"tui-primitive-textfield__wrapper\"\n    tuiWrapper\n    [active]=\"pseudoActive\"\n    [appearance]=\"appearance\"\n    [disabled]=\"disabled\"\n    [focus]=\"computedFocused\"\n    [hover]=\"pseudoHover\"\n    [invalid]=\"computedInvalid\"\n    [readOnly]=\"readOnly\"\n    [style.--text-indent.px]=\"decor.pre$ | async\"\n    (click.prevent.silent)=\"detectRetargetFromLabel($event)\"\n    (mousedown)=\"onMouseDown($event)\"\n>\n    <ng-content select=\"input\" />\n    <ng-content select=\"select\" />\n    <input\n        #focusableElement\n        automation-id=\"tui-primitive-textfield__native-input\"\n        class=\"t-input\"\n        [attr.aria-invalid]=\"computedInvalid\"\n        [attr.name]=\"name\"\n        [disabled]=\"computedDisabled\"\n        [id]=\"id\"\n        [ngModel]=\"value\"\n        [ngModelOptions]=\"{standalone: true}\"\n        [readOnly]=\"readOnly || !editable\"\n        [tabIndex]=\"computedFocusable ? 0 : -1\"\n        (ngModelChange)=\"onModelChange($event)\"\n    />\n    <div\n        *ngIf=\"inputHidden\"\n        automation-id=\"tui-primitive-textfield__value\"\n        class=\"t-input t-input_template\"\n    >\n        <ng-content select=\"tuiContent\" />\n    </div>\n    <div class=\"t-content\">\n        <div\n            *ngIf=\"iconLeftContent\"\n            class=\"t-icon t-icon_left t-textfield-icon\"\n        >\n            <tui-icon\n                *polymorpheusOutlet=\"iconLeftContent as src; context: {$implicit: size}\"\n                tuiAppearance=\"icon\"\n                [icon]=\"src.toString()\"\n            />\n        </div>\n        <div class=\"t-wrapper\">\n            <label\n                *ngIf=\"hasPlaceholder\"\n                automation-id=\"tui-primitive-textfield__placeholder\"\n                class=\"t-placeholder\"\n                [class.t-placeholder_raised]=\"placeholderRaised\"\n                [for]=\"computedId\"\n            >\n                <ng-content />\n            </label>\n            <div class=\"t-wrapper-value-decoration\">\n                <tui-value-decoration\n                    #decor\n                    aria-hidden=\"true\"\n                    automation-id=\"tui-primitive-textfield__value-decoration\"\n                    class=\"t-value-decoration\"\n                    [class.t-has-value]=\"value\"\n                    [style.textIndent.px]=\"getIndent$(focusableElement) | async\"\n                />\n            </div>\n        </div>\n        <div class=\"t-icons\">\n            <div\n                *ngIf=\"hasCustomContent\"\n                automation-id=\"tui-primitive-textfield__custom-content\"\n                class=\"t-custom-content\"\n            >\n                <tui-icon\n                    *polymorpheusOutlet=\"controller.customContent as src\"\n                    class=\"t-custom-icon\"\n                    [icon]=\"src\"\n                />\n            </div>\n            <span\n                *ngIf=\"hasCleaner\"\n                appearance=\"icon\"\n                automation-id=\"tui-primitive-textfield__cleaner\"\n                tuiWrapper\n                class=\"t-cleaner\"\n                (click.stop)=\"clear()\"\n            >\n                <tui-icon\n                    *polymorpheusOutlet=\"\n                        iconCleaner || controller.options.iconCleaner as src;\n                        context: {$implicit: size}\n                    \"\n                    [icon]=\"src.toString()\"\n                    [style.border]=\"'0.25rem solid transparent'\"\n                />\n            </span>\n            <tui-tooltip\n                *ngIf=\"showHint\"\n                automation-id=\"tui-primitive-textfield__tooltip\"\n                class=\"t-tooltip\"\n                [content]=\"hintOptions?.content\"\n                [describeId]=\"computedId\"\n            />\n            <div\n                *ngIf=\"iconContent\"\n                class=\"t-icon t-textfield-icon\"\n            >\n                <tui-icon\n                    *polymorpheusOutlet=\"iconContent as src; context: {$implicit: size}\"\n                    tuiAppearance=\"icon\"\n                    [icon]=\"src.toString()\"\n                />\n            </div>\n        </div>\n    </div>\n</div>\n", styles: [":host{position:relative;display:block;text-align:start;border-radius:var(--tui-radius-m);block-size:var(--tui-height);min-block-size:var(--tui-height);max-block-size:var(--tui-height)}:host[data-size=s]{--tui-height: var(--tui-height-s);font:var(--tui-font-text-s)}:host[data-size=m]{--tui-height: var(--tui-height-m);font:var(--tui-font-text-s)}:host[data-size=l]{--tui-height: var(--tui-height-l);font:var(--tui-font-text-m);line-height:1.25rem}.t-input{padding:0;margin:0;border-width:0;border-radius:inherit;background:none;font-size:inherit;line-height:inherit;font-weight:inherit;color:inherit;caret-color:currentColor;outline:none;-webkit-appearance:none;appearance:none;word-break:keep-all;-webkit-text-fill-color:currentColor;position:absolute;top:0;left:0;inline-size:100%;block-size:100%;border-style:solid;border-color:transparent;border-inline-start-width:var(--border-start, 0);border-inline-end-width:var(--border-end, 0);text-indent:var(--text-indent);color:var(--tui-text-primary);text-align:inherit;box-sizing:border-box;white-space:nowrap;overflow:hidden;text-transform:inherit;resize:none}.t-input:-webkit-autofill,.t-input:-webkit-autofill:hover,.t-input:-webkit-autofill:focus{-webkit-text-fill-color:var(--tui-text-primary)!important;border-color:var(--tui-service-autofill-background);box-shadow:0 0 0 100rem var(--tui-service-autofill-background) inset!important}.t-input[inputMode=none]{caret-color:transparent}.t-input:-webkit-autofill,.t-input:-webkit-autofill:first-line{font-size:inherit;line-height:inherit}.t-input::-webkit-caps-lock-indicator,.t-input::-webkit-contacts-auto-fill-button,.t-input::-webkit-credit-card-auto-fill-button,.t-input::-webkit-credentials-auto-fill-button,.t-input::-webkit-strong-password-auto-fill-button{content:none!important;position:absolute;left:-62.4375rem;top:-62.4375rem;z-index:-999;display:none!important;background:transparent!important;pointer-events:none!important}.t-input::placeholder{color:var(--tui-text-tertiary);opacity:0}:host._focused:not(._readonly) .t-input::placeholder,:host-context(tui-primitive-textfield._focused:not(._readonly)) .t-input::placeholder,:host-context(tui-textarea._focused:not(._readonly)) .t-input::placeholder,:host-context(tui-text-area._focused:not(._readonly)) .t-input::placeholder{opacity:1}:host[data-size=s] .t-input,.t-input :host-context(tui-primitive-textfield[data-size=\"s\"]):not(tui-primitive-textfield),.t-input :host-context(tui-textarea[data-size=\"s\"]):not(tui-textarea),.t-input :host-context(tui-text-area[data-size=\"s\"]):not(tui-text-area){padding:0 var(--tui-padding-s)}:host[data-size=m] .t-input,.t-input :host-context(tui-primitive-textfield[data-size=\"m\"]):not(tui-primitive-textfield),.t-input :host-context(tui-textarea[data-size=\"m\"]):not(tui-textarea),.t-input :host-context(tui-text-area[data-size=\"m\"]):not(tui-text-area){padding:0 var(--tui-padding-m)}:host[data-size=l] .t-input,.t-input :host-context(tui-primitive-textfield[data-size=\"l\"]):not(tui-primitive-textfield),.t-input :host-context(tui-textarea[data-size=\"l\"]):not(tui-textarea),.t-input :host-context(tui-text-area[data-size=\"l\"]):not(tui-text-area){padding:0 var(--tui-padding-l)}:host._disabled .t-input,.t-input :host-context(tui-primitive-textfield._disabled),.t-input :host-context(tui-textarea._disabled),.t-input :host-context(tui-text-area._disabled){pointer-events:none}:host[data-size=l]:not(._label-outside) .t-input,.t-input :host-context(tui-primitive-textfield[data-size=\"l\"]:not(._label-outside)):not(tui-primitive-textfield){padding-top:1.25rem}:host[data-size=m]:not(._label-outside) .t-input,.t-input :host-context(tui-primitive-textfield[data-size=\"m\"]:not(._label-outside)):not(tui-primitive-textfield){padding-top:1rem}:host[data-size=l]:not(._label-outside) .t-input{padding-top:1.25rem}:host[data-size=l]:not(._label-outside) .t-input:-webkit-autofill+.t-content .t-placeholder{font-size:.8156rem;transform:translateY(-.625rem)}:host[data-size=m]:not(._label-outside) .t-input:-webkit-autofill+.t-content .t-placeholder{font-size:.69rem;transform:translateY(-.5rem)}:host._hidden input.t-input,.t-input :host-context(tui-primitive-textfield._hidden){opacity:0;text-indent:-10em;-webkit-user-select:none}.t-content{display:flex;block-size:100%;inline-size:100%;box-sizing:border-box;align-items:center;overflow:hidden}:host[data-size=s] .t-content{padding:0 var(--tui-padding-s)}:host[data-size=m] .t-content{padding:0 var(--tui-padding-m)}:host[data-size=l] .t-content{padding:0 var(--tui-padding-l)}.t-wrapper{flex:1;min-inline-size:0;padding-inline-end:.25rem}.t-placeholder{transition-property:transform,font-size,color,letter-spacing;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;inline-size:100%;-webkit-user-select:none;user-select:none;font:var(--tui-font-text-s);color:var(--tui-text-secondary);pointer-events:none;will-change:transform;transform:translateY(0)}@supports (-webkit-hyphens: none){.t-placeholder{will-change:unset;transition-property:transform,color,letter-spacing}}.t-placeholder_raised{transform:translateY(-.625rem)}:host[data-size=m] .t-placeholder_raised{font:var(--tui-font-text-xs);line-height:1.25rem;transform:translateY(-.5rem);letter-spacing:.025rem}:host._invalid:not(._focused) .t-placeholder_raised,:host._invalid:not(._focused):hover .t-placeholder_raised{color:var(--tui-text-negative)}:host._focused .t-placeholder,:host[data-size=m]._focused._label-outside .t-placeholder,:host[data-size=l]._focused._label-outside .t-placeholder{color:var(--tui-text-tertiary)}:host[data-size=l] .t-placeholder{font:var(--tui-font-text-m);line-height:1.25rem}:host[data-size=l] .t-placeholder_raised{font-size:.8156rem}:host[data-size=m]._focused:not(._label-outside) .t-placeholder,:host[data-size=l]._focused:not(._label-outside) .t-placeholder{color:var(--tui-text-primary)}.t-cleaner{position:relative;display:flex;inline-size:1.5rem;block-size:1.5rem;align-items:center;justify-content:center;box-sizing:border-box;cursor:pointer;pointer-events:none;pointer-events:auto;border:.25rem solid transparent}:host._readonly .t-cleaner,:host._disabled .t-cleaner{pointer-events:none}.t-icon{position:relative;display:flex;inline-size:1.5rem;block-size:1.5rem;align-items:center;justify-content:center;box-sizing:border-box;cursor:pointer;pointer-events:none}:host[data-size=s] .t-icon_left{margin-inline-start:-.375rem}:host[data-size=m] .t-icon_left{margin-inline-start:-.125rem;margin-inline-end:.375rem}:host[data-size=l] .t-icon_left{margin-inline-end:.75rem}.t-icons{display:flex;align-items:center}:host[data-size=m] .t-icons{margin-inline-end:-.125rem}:host[data-size=s] .t-icons{margin-inline-end:-.375rem}:host:not([data-size=s]) .t-icons>:not(:first-child){margin-inline-start:.25rem}:host ::ng-deep input{transition:box-shadow .01s}:host._autofilled[data-size=s] .t-placeholder,:host._autofilled._label-outside .t-placeholder,:host._autofilled .t-value-decoration:not(.t-has-value){visibility:hidden}:host[data-size=s] tui-icon{border:.25rem solid transparent}.t-custom-content{position:relative;display:flex;align-items:center;justify-content:center;min-inline-size:2rem;block-size:2rem;pointer-events:none}.t-custom-icon{inline-size:2rem;block-size:100%}.t-input:not(:first-child){display:none}:host[data-size] .t-input_template{display:flex;inline-size:calc(100% - 1rem);max-inline-size:calc(100% - 1rem);align-items:center;pointer-events:none;padding-inline-end:0}.t-text-template{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.t-wrapper-value-decoration{position:relative;pointer-events:none}\n"], dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i3.PolymorpheusOutlet, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { kind: "directive", type: i4.TuiWrapperDirective, selector: "[tuiWrapper]", inputs: ["disabled", "readOnly", "hover", "active", "focus", "invalid", "appearance"] }, { kind: "component", type: i5.TuiTooltipComponent, selector: "tui-tooltip", inputs: ["content", "direction", "appearance", "showDelay", "hideDelay", "describeId", "context"] }, { kind: "component", type: i6.TuiIcon, selector: "tui-icon", inputs: ["icon", "background"] }, { kind: "directive", type: i7.TuiAppearance, selector: "[tuiAppearance]", inputs: ["tuiAppearance", "tuiAppearanceState", "tuiAppearanceFocus"] }, { kind: "component", type: TuiValueDecorationComponent, selector: "tui-value-decoration" }, { kind: "pipe", type: i1.AsyncPipe, name: "async" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
__decorate([
    tuiPure
], TuiPrimitiveTextfieldComponent.prototype, "getIndent$", null);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiPrimitiveTextfieldComponent, decorators: [{
            type: Component,
            args: [{ selector: 'tui-primitive-textfield', changeDetection: ChangeDetectionStrategy.OnPush, providers: [
                        tuiAsFocusableItemAccessor(TuiPrimitiveTextfieldComponent),
                        TEXTFIELD_CONTROLLER_PROVIDER,
                    ], host: {
                        '[attr.data-size]': 'size',
                        '[class._readonly]': 'readOnly',
                        '[class._hidden]': 'inputHidden',
                        '[class._invalid]': 'computedInvalid',
                        '[class._autofilled]': 'autofilled',
                        '[style.--border-start.rem]': 'borderStart',
                        '[style.--border-end.rem]': 'borderEnd',
                        '[class._label-outside]': 'options.appearance() === "table" || controller.labelOutside',
                        '(focusin)': 'onFocused(true)',
                        '(focusout)': 'onFocused(false)',
                        '(transitionstart.capture)': 'transitionStartHandler($event)',
                    }, template: "<ng-container *ngIf=\"content?.changes | async\" />\n<ng-container *ngIf=\"hintOptions?.change$ | async\" />\n<div\n    automation-id=\"tui-primitive-textfield__wrapper\"\n    tuiWrapper\n    [active]=\"pseudoActive\"\n    [appearance]=\"appearance\"\n    [disabled]=\"disabled\"\n    [focus]=\"computedFocused\"\n    [hover]=\"pseudoHover\"\n    [invalid]=\"computedInvalid\"\n    [readOnly]=\"readOnly\"\n    [style.--text-indent.px]=\"decor.pre$ | async\"\n    (click.prevent.silent)=\"detectRetargetFromLabel($event)\"\n    (mousedown)=\"onMouseDown($event)\"\n>\n    <ng-content select=\"input\" />\n    <ng-content select=\"select\" />\n    <input\n        #focusableElement\n        automation-id=\"tui-primitive-textfield__native-input\"\n        class=\"t-input\"\n        [attr.aria-invalid]=\"computedInvalid\"\n        [attr.name]=\"name\"\n        [disabled]=\"computedDisabled\"\n        [id]=\"id\"\n        [ngModel]=\"value\"\n        [ngModelOptions]=\"{standalone: true}\"\n        [readOnly]=\"readOnly || !editable\"\n        [tabIndex]=\"computedFocusable ? 0 : -1\"\n        (ngModelChange)=\"onModelChange($event)\"\n    />\n    <div\n        *ngIf=\"inputHidden\"\n        automation-id=\"tui-primitive-textfield__value\"\n        class=\"t-input t-input_template\"\n    >\n        <ng-content select=\"tuiContent\" />\n    </div>\n    <div class=\"t-content\">\n        <div\n            *ngIf=\"iconLeftContent\"\n            class=\"t-icon t-icon_left t-textfield-icon\"\n        >\n            <tui-icon\n                *polymorpheusOutlet=\"iconLeftContent as src; context: {$implicit: size}\"\n                tuiAppearance=\"icon\"\n                [icon]=\"src.toString()\"\n            />\n        </div>\n        <div class=\"t-wrapper\">\n            <label\n                *ngIf=\"hasPlaceholder\"\n                automation-id=\"tui-primitive-textfield__placeholder\"\n                class=\"t-placeholder\"\n                [class.t-placeholder_raised]=\"placeholderRaised\"\n                [for]=\"computedId\"\n            >\n                <ng-content />\n            </label>\n            <div class=\"t-wrapper-value-decoration\">\n                <tui-value-decoration\n                    #decor\n                    aria-hidden=\"true\"\n                    automation-id=\"tui-primitive-textfield__value-decoration\"\n                    class=\"t-value-decoration\"\n                    [class.t-has-value]=\"value\"\n                    [style.textIndent.px]=\"getIndent$(focusableElement) | async\"\n                />\n            </div>\n        </div>\n        <div class=\"t-icons\">\n            <div\n                *ngIf=\"hasCustomContent\"\n                automation-id=\"tui-primitive-textfield__custom-content\"\n                class=\"t-custom-content\"\n            >\n                <tui-icon\n                    *polymorpheusOutlet=\"controller.customContent as src\"\n                    class=\"t-custom-icon\"\n                    [icon]=\"src\"\n                />\n            </div>\n            <span\n                *ngIf=\"hasCleaner\"\n                appearance=\"icon\"\n                automation-id=\"tui-primitive-textfield__cleaner\"\n                tuiWrapper\n                class=\"t-cleaner\"\n                (click.stop)=\"clear()\"\n            >\n                <tui-icon\n                    *polymorpheusOutlet=\"\n                        iconCleaner || controller.options.iconCleaner as src;\n                        context: {$implicit: size}\n                    \"\n                    [icon]=\"src.toString()\"\n                    [style.border]=\"'0.25rem solid transparent'\"\n                />\n            </span>\n            <tui-tooltip\n                *ngIf=\"showHint\"\n                automation-id=\"tui-primitive-textfield__tooltip\"\n                class=\"t-tooltip\"\n                [content]=\"hintOptions?.content\"\n                [describeId]=\"computedId\"\n            />\n            <div\n                *ngIf=\"iconContent\"\n                class=\"t-icon t-textfield-icon\"\n            >\n                <tui-icon\n                    *polymorpheusOutlet=\"iconContent as src; context: {$implicit: size}\"\n                    tuiAppearance=\"icon\"\n                    [icon]=\"src.toString()\"\n                />\n            </div>\n        </div>\n    </div>\n</div>\n", styles: [":host{position:relative;display:block;text-align:start;border-radius:var(--tui-radius-m);block-size:var(--tui-height);min-block-size:var(--tui-height);max-block-size:var(--tui-height)}:host[data-size=s]{--tui-height: var(--tui-height-s);font:var(--tui-font-text-s)}:host[data-size=m]{--tui-height: var(--tui-height-m);font:var(--tui-font-text-s)}:host[data-size=l]{--tui-height: var(--tui-height-l);font:var(--tui-font-text-m);line-height:1.25rem}.t-input{padding:0;margin:0;border-width:0;border-radius:inherit;background:none;font-size:inherit;line-height:inherit;font-weight:inherit;color:inherit;caret-color:currentColor;outline:none;-webkit-appearance:none;appearance:none;word-break:keep-all;-webkit-text-fill-color:currentColor;position:absolute;top:0;left:0;inline-size:100%;block-size:100%;border-style:solid;border-color:transparent;border-inline-start-width:var(--border-start, 0);border-inline-end-width:var(--border-end, 0);text-indent:var(--text-indent);color:var(--tui-text-primary);text-align:inherit;box-sizing:border-box;white-space:nowrap;overflow:hidden;text-transform:inherit;resize:none}.t-input:-webkit-autofill,.t-input:-webkit-autofill:hover,.t-input:-webkit-autofill:focus{-webkit-text-fill-color:var(--tui-text-primary)!important;border-color:var(--tui-service-autofill-background);box-shadow:0 0 0 100rem var(--tui-service-autofill-background) inset!important}.t-input[inputMode=none]{caret-color:transparent}.t-input:-webkit-autofill,.t-input:-webkit-autofill:first-line{font-size:inherit;line-height:inherit}.t-input::-webkit-caps-lock-indicator,.t-input::-webkit-contacts-auto-fill-button,.t-input::-webkit-credit-card-auto-fill-button,.t-input::-webkit-credentials-auto-fill-button,.t-input::-webkit-strong-password-auto-fill-button{content:none!important;position:absolute;left:-62.4375rem;top:-62.4375rem;z-index:-999;display:none!important;background:transparent!important;pointer-events:none!important}.t-input::placeholder{color:var(--tui-text-tertiary);opacity:0}:host._focused:not(._readonly) .t-input::placeholder,:host-context(tui-primitive-textfield._focused:not(._readonly)) .t-input::placeholder,:host-context(tui-textarea._focused:not(._readonly)) .t-input::placeholder,:host-context(tui-text-area._focused:not(._readonly)) .t-input::placeholder{opacity:1}:host[data-size=s] .t-input,.t-input :host-context(tui-primitive-textfield[data-size=\"s\"]):not(tui-primitive-textfield),.t-input :host-context(tui-textarea[data-size=\"s\"]):not(tui-textarea),.t-input :host-context(tui-text-area[data-size=\"s\"]):not(tui-text-area){padding:0 var(--tui-padding-s)}:host[data-size=m] .t-input,.t-input :host-context(tui-primitive-textfield[data-size=\"m\"]):not(tui-primitive-textfield),.t-input :host-context(tui-textarea[data-size=\"m\"]):not(tui-textarea),.t-input :host-context(tui-text-area[data-size=\"m\"]):not(tui-text-area){padding:0 var(--tui-padding-m)}:host[data-size=l] .t-input,.t-input :host-context(tui-primitive-textfield[data-size=\"l\"]):not(tui-primitive-textfield),.t-input :host-context(tui-textarea[data-size=\"l\"]):not(tui-textarea),.t-input :host-context(tui-text-area[data-size=\"l\"]):not(tui-text-area){padding:0 var(--tui-padding-l)}:host._disabled .t-input,.t-input :host-context(tui-primitive-textfield._disabled),.t-input :host-context(tui-textarea._disabled),.t-input :host-context(tui-text-area._disabled){pointer-events:none}:host[data-size=l]:not(._label-outside) .t-input,.t-input :host-context(tui-primitive-textfield[data-size=\"l\"]:not(._label-outside)):not(tui-primitive-textfield){padding-top:1.25rem}:host[data-size=m]:not(._label-outside) .t-input,.t-input :host-context(tui-primitive-textfield[data-size=\"m\"]:not(._label-outside)):not(tui-primitive-textfield){padding-top:1rem}:host[data-size=l]:not(._label-outside) .t-input{padding-top:1.25rem}:host[data-size=l]:not(._label-outside) .t-input:-webkit-autofill+.t-content .t-placeholder{font-size:.8156rem;transform:translateY(-.625rem)}:host[data-size=m]:not(._label-outside) .t-input:-webkit-autofill+.t-content .t-placeholder{font-size:.69rem;transform:translateY(-.5rem)}:host._hidden input.t-input,.t-input :host-context(tui-primitive-textfield._hidden){opacity:0;text-indent:-10em;-webkit-user-select:none}.t-content{display:flex;block-size:100%;inline-size:100%;box-sizing:border-box;align-items:center;overflow:hidden}:host[data-size=s] .t-content{padding:0 var(--tui-padding-s)}:host[data-size=m] .t-content{padding:0 var(--tui-padding-m)}:host[data-size=l] .t-content{padding:0 var(--tui-padding-l)}.t-wrapper{flex:1;min-inline-size:0;padding-inline-end:.25rem}.t-placeholder{transition-property:transform,font-size,color,letter-spacing;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;inline-size:100%;-webkit-user-select:none;user-select:none;font:var(--tui-font-text-s);color:var(--tui-text-secondary);pointer-events:none;will-change:transform;transform:translateY(0)}@supports (-webkit-hyphens: none){.t-placeholder{will-change:unset;transition-property:transform,color,letter-spacing}}.t-placeholder_raised{transform:translateY(-.625rem)}:host[data-size=m] .t-placeholder_raised{font:var(--tui-font-text-xs);line-height:1.25rem;transform:translateY(-.5rem);letter-spacing:.025rem}:host._invalid:not(._focused) .t-placeholder_raised,:host._invalid:not(._focused):hover .t-placeholder_raised{color:var(--tui-text-negative)}:host._focused .t-placeholder,:host[data-size=m]._focused._label-outside .t-placeholder,:host[data-size=l]._focused._label-outside .t-placeholder{color:var(--tui-text-tertiary)}:host[data-size=l] .t-placeholder{font:var(--tui-font-text-m);line-height:1.25rem}:host[data-size=l] .t-placeholder_raised{font-size:.8156rem}:host[data-size=m]._focused:not(._label-outside) .t-placeholder,:host[data-size=l]._focused:not(._label-outside) .t-placeholder{color:var(--tui-text-primary)}.t-cleaner{position:relative;display:flex;inline-size:1.5rem;block-size:1.5rem;align-items:center;justify-content:center;box-sizing:border-box;cursor:pointer;pointer-events:none;pointer-events:auto;border:.25rem solid transparent}:host._readonly .t-cleaner,:host._disabled .t-cleaner{pointer-events:none}.t-icon{position:relative;display:flex;inline-size:1.5rem;block-size:1.5rem;align-items:center;justify-content:center;box-sizing:border-box;cursor:pointer;pointer-events:none}:host[data-size=s] .t-icon_left{margin-inline-start:-.375rem}:host[data-size=m] .t-icon_left{margin-inline-start:-.125rem;margin-inline-end:.375rem}:host[data-size=l] .t-icon_left{margin-inline-end:.75rem}.t-icons{display:flex;align-items:center}:host[data-size=m] .t-icons{margin-inline-end:-.125rem}:host[data-size=s] .t-icons{margin-inline-end:-.375rem}:host:not([data-size=s]) .t-icons>:not(:first-child){margin-inline-start:.25rem}:host ::ng-deep input{transition:box-shadow .01s}:host._autofilled[data-size=s] .t-placeholder,:host._autofilled._label-outside .t-placeholder,:host._autofilled .t-value-decoration:not(.t-has-value){visibility:hidden}:host[data-size=s] tui-icon{border:.25rem solid transparent}.t-custom-content{position:relative;display:flex;align-items:center;justify-content:center;min-inline-size:2rem;block-size:2rem;pointer-events:none}.t-custom-icon{inline-size:2rem;block-size:100%}.t-input:not(:first-child){display:none}:host[data-size] .t-input_template{display:flex;inline-size:calc(100% - 1rem);max-inline-size:calc(100% - 1rem);align-items:center;pointer-events:none;padding-inline-end:0}.t-text-template{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.t-wrapper-value-decoration{position:relative;pointer-events:none}\n"] }]
        }], propDecorators: { focusableElement: [{
                type: ViewChild,
                args: ['focusableElement']
            }], content: [{
                type: ContentChildren,
                args: [PolymorpheusOutlet, { descendants: true }]
            }], editable: [{
                type: Input
            }], iconCleaner: [{
                type: Input
            }], readOnly: [{
                type: Input
            }], invalid: [{
                type: Input
            }], disabled: [{
                type: Input
            }], value: [{
                type: Input
            }], valueChange: [{
                type: Output
            }], getIndent$: [] } });

/**
 * @deprecated: use {@link TuiTextfield}
 * https://taiga-ui.dev/components/textfield
 */
class TuiPrimitiveTextfieldDirective extends AbstractTuiTextfieldHost {
    constructor() {
        super(...arguments);
        this.host = inject(TuiPrimitiveTextfieldComponent);
    }
    get readOnly() {
        return this.host.readOnly || !this.host.editable;
    }
    onValueChange(value) {
        this.host.onModelChange(value);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiPrimitiveTextfieldDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: TuiPrimitiveTextfieldDirective, selector: "tui-primitive-textfield", providers: [tuiAsTextfieldHost(TuiPrimitiveTextfieldDirective)], usesInheritance: true, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiPrimitiveTextfieldDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'tui-primitive-textfield',
                    providers: [tuiAsTextfieldHost(TuiPrimitiveTextfieldDirective)],
                }]
        }] });

class TuiTextfieldComponent {
    constructor() {
        this.autoId = tuiInjectId();
        this.el = tuiInjectElement();
        this.controller = inject(TUI_TEXTFIELD_WATCHED_CONTROLLER);
        this.host = inject(TUI_TEXTFIELD_HOST);
        this.host.process(this.el);
    }
    get id() {
        return this.el.id || this.autoId;
    }
    get inputMode() {
        return this.el.inputMode || this.host.inputMode;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiTextfieldComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiTextfieldComponent, selector: "input[tuiTextfieldLegacy], textarea[tuiTextfieldLegacy]", host: { attributes: { "type": "text" }, listeners: { "input": "host.onValueChange($event.target.value)" }, properties: { "attr.id": "id", "attr.inputMode": "inputMode", "attr.aria-invalid": "host.invalid", "attr.disabled": "host.disabled || null", "tabIndex": "host.focusable ? 0 : -1", "readOnly": "host.readOnly", "value": "host.value" } }, providers: [TEXTFIELD_CONTROLLER_PROVIDER], ngImport: i0, template: '', isInline: true, styles: [":host{padding:0;margin:0;border-width:0;border-radius:inherit;background:none;font-size:inherit;line-height:inherit;font-weight:inherit;color:inherit;caret-color:currentColor;outline:none;-webkit-appearance:none;appearance:none;word-break:keep-all;-webkit-text-fill-color:currentColor;position:absolute;top:0;left:0;inline-size:100%;block-size:100%;border-style:solid;border-color:transparent;border-inline-start-width:var(--border-start, 0);border-inline-end-width:var(--border-end, 0);text-indent:var(--text-indent);color:var(--tui-text-primary);text-align:inherit;box-sizing:border-box;white-space:nowrap;overflow:hidden;text-transform:inherit;resize:none}:host:-webkit-autofill,:host:-webkit-autofill:hover,:host:-webkit-autofill:focus{-webkit-text-fill-color:var(--tui-text-primary)!important;border-color:var(--tui-service-autofill-background);box-shadow:0 0 0 100rem var(--tui-service-autofill-background) inset!important}:host[inputMode=none]{caret-color:transparent}:host:-webkit-autofill,:host:-webkit-autofill:first-line{font-size:inherit;line-height:inherit}:host::-webkit-caps-lock-indicator,:host::-webkit-contacts-auto-fill-button,:host::-webkit-credit-card-auto-fill-button,:host::-webkit-credentials-auto-fill-button,:host::-webkit-strong-password-auto-fill-button{content:none!important;position:absolute;left:-62.4375rem;top:-62.4375rem;z-index:-999;display:none!important;background:transparent!important;pointer-events:none!important}:host::placeholder{color:var(--tui-text-tertiary);opacity:0}:host._focused:not(._readonly) :host::placeholder,:host-context(tui-primitive-textfield._focused:not(._readonly)) :host::placeholder,:host-context(tui-textarea._focused:not(._readonly)) :host::placeholder,:host-context(tui-text-area._focused:not(._readonly)) :host::placeholder{opacity:1}:host[data-size=s] :host,:host :host-context(tui-primitive-textfield[data-size=\"s\"]):not(tui-primitive-textfield),:host :host-context(tui-textarea[data-size=\"s\"]):not(tui-textarea),:host :host-context(tui-text-area[data-size=\"s\"]):not(tui-text-area){padding:0 var(--tui-padding-s)}:host[data-size=m] :host,:host :host-context(tui-primitive-textfield[data-size=\"m\"]):not(tui-primitive-textfield),:host :host-context(tui-textarea[data-size=\"m\"]):not(tui-textarea),:host :host-context(tui-text-area[data-size=\"m\"]):not(tui-text-area){padding:0 var(--tui-padding-m)}:host[data-size=l] :host,:host :host-context(tui-primitive-textfield[data-size=\"l\"]):not(tui-primitive-textfield),:host :host-context(tui-textarea[data-size=\"l\"]):not(tui-textarea),:host :host-context(tui-text-area[data-size=\"l\"]):not(tui-text-area){padding:0 var(--tui-padding-l)}:host._disabled :host,:host :host-context(tui-primitive-textfield._disabled),:host :host-context(tui-textarea._disabled),:host :host-context(tui-text-area._disabled){pointer-events:none}:host[data-size=l]:not(._label-outside) :host,:host :host-context(tui-primitive-textfield[data-size=\"l\"]:not(._label-outside)):not(tui-primitive-textfield){padding-top:1.25rem}:host[data-size=m]:not(._label-outside) :host,:host :host-context(tui-primitive-textfield[data-size=\"m\"]:not(._label-outside)):not(tui-primitive-textfield){padding-top:1rem}:host[data-size=l]:not(._label-outside) :host{padding-top:1.25rem}:host[data-size=l]:not(._label-outside) :host:-webkit-autofill+.t-content .t-placeholder{font-size:.8156rem;transform:translateY(-.625rem)}:host[data-size=m]:not(._label-outside) :host:-webkit-autofill+.t-content .t-placeholder{font-size:.69rem;transform:translateY(-.5rem)}:host._hidden input:host,:host :host-context(tui-primitive-textfield._hidden){opacity:0;text-indent:-10em;-webkit-user-select:none}textarea:host{white-space:pre-wrap}textarea:host :host-context(tui-textarea._ios),textarea:host :host-context(tui-text-area._ios){padding-left:.8125rem}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiTextfieldComponent, decorators: [{
            type: Component,
            args: [{ selector: 'input[tuiTextfieldLegacy], textarea[tuiTextfieldLegacy]', template: '', changeDetection: ChangeDetectionStrategy.OnPush, providers: [TEXTFIELD_CONTROLLER_PROVIDER], host: {
                        type: 'text',
                        '[attr.id]': 'id',
                        '[attr.inputMode]': 'inputMode',
                        '[attr.aria-invalid]': 'host.invalid',
                        '[attr.disabled]': 'host.disabled || null',
                        '[tabIndex]': 'host.focusable ? 0 : -1',
                        '[readOnly]': 'host.readOnly',
                        '[value]': 'host.value',
                        '(input)': 'host.onValueChange($event.target.value)',
                    }, styles: [":host{padding:0;margin:0;border-width:0;border-radius:inherit;background:none;font-size:inherit;line-height:inherit;font-weight:inherit;color:inherit;caret-color:currentColor;outline:none;-webkit-appearance:none;appearance:none;word-break:keep-all;-webkit-text-fill-color:currentColor;position:absolute;top:0;left:0;inline-size:100%;block-size:100%;border-style:solid;border-color:transparent;border-inline-start-width:var(--border-start, 0);border-inline-end-width:var(--border-end, 0);text-indent:var(--text-indent);color:var(--tui-text-primary);text-align:inherit;box-sizing:border-box;white-space:nowrap;overflow:hidden;text-transform:inherit;resize:none}:host:-webkit-autofill,:host:-webkit-autofill:hover,:host:-webkit-autofill:focus{-webkit-text-fill-color:var(--tui-text-primary)!important;border-color:var(--tui-service-autofill-background);box-shadow:0 0 0 100rem var(--tui-service-autofill-background) inset!important}:host[inputMode=none]{caret-color:transparent}:host:-webkit-autofill,:host:-webkit-autofill:first-line{font-size:inherit;line-height:inherit}:host::-webkit-caps-lock-indicator,:host::-webkit-contacts-auto-fill-button,:host::-webkit-credit-card-auto-fill-button,:host::-webkit-credentials-auto-fill-button,:host::-webkit-strong-password-auto-fill-button{content:none!important;position:absolute;left:-62.4375rem;top:-62.4375rem;z-index:-999;display:none!important;background:transparent!important;pointer-events:none!important}:host::placeholder{color:var(--tui-text-tertiary);opacity:0}:host._focused:not(._readonly) :host::placeholder,:host-context(tui-primitive-textfield._focused:not(._readonly)) :host::placeholder,:host-context(tui-textarea._focused:not(._readonly)) :host::placeholder,:host-context(tui-text-area._focused:not(._readonly)) :host::placeholder{opacity:1}:host[data-size=s] :host,:host :host-context(tui-primitive-textfield[data-size=\"s\"]):not(tui-primitive-textfield),:host :host-context(tui-textarea[data-size=\"s\"]):not(tui-textarea),:host :host-context(tui-text-area[data-size=\"s\"]):not(tui-text-area){padding:0 var(--tui-padding-s)}:host[data-size=m] :host,:host :host-context(tui-primitive-textfield[data-size=\"m\"]):not(tui-primitive-textfield),:host :host-context(tui-textarea[data-size=\"m\"]):not(tui-textarea),:host :host-context(tui-text-area[data-size=\"m\"]):not(tui-text-area){padding:0 var(--tui-padding-m)}:host[data-size=l] :host,:host :host-context(tui-primitive-textfield[data-size=\"l\"]):not(tui-primitive-textfield),:host :host-context(tui-textarea[data-size=\"l\"]):not(tui-textarea),:host :host-context(tui-text-area[data-size=\"l\"]):not(tui-text-area){padding:0 var(--tui-padding-l)}:host._disabled :host,:host :host-context(tui-primitive-textfield._disabled),:host :host-context(tui-textarea._disabled),:host :host-context(tui-text-area._disabled){pointer-events:none}:host[data-size=l]:not(._label-outside) :host,:host :host-context(tui-primitive-textfield[data-size=\"l\"]:not(._label-outside)):not(tui-primitive-textfield){padding-top:1.25rem}:host[data-size=m]:not(._label-outside) :host,:host :host-context(tui-primitive-textfield[data-size=\"m\"]:not(._label-outside)):not(tui-primitive-textfield){padding-top:1rem}:host[data-size=l]:not(._label-outside) :host{padding-top:1.25rem}:host[data-size=l]:not(._label-outside) :host:-webkit-autofill+.t-content .t-placeholder{font-size:.8156rem;transform:translateY(-.625rem)}:host[data-size=m]:not(._label-outside) :host:-webkit-autofill+.t-content .t-placeholder{font-size:.69rem;transform:translateY(-.5rem)}:host._hidden input:host,:host :host-context(tui-primitive-textfield._hidden){opacity:0;text-indent:-10em;-webkit-user-select:none}textarea:host{white-space:pre-wrap}textarea:host :host-context(tui-textarea._ios),textarea:host :host-context(tui-text-area._ios){padding-left:.8125rem}\n"] }]
        }], ctorParameters: function () { return []; } });

/**
 * @deprecated: use {@link TuiTextfield}
 * https://taiga-ui.dev/components/textfield
 */
class TuiPrimitiveTextfieldModule {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiPrimitiveTextfieldModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: TuiPrimitiveTextfieldModule, declarations: [TuiPrimitiveTextfieldComponent,
            TuiPrimitiveTextfieldDirective,
            TuiTextfieldComponent,
            TuiValueDecorationComponent], imports: [CommonModule,
            FormsModule,
            PolymorpheusOutlet,
            PolymorpheusTemplate,
            TuiWrapperModule,
            TuiTooltipModule,
            TuiIcon,
            TuiAppearance], exports: [TuiPrimitiveTextfieldComponent,
            TuiPrimitiveTextfieldDirective,
            TuiTextfieldComponent] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiPrimitiveTextfieldModule, imports: [CommonModule,
            FormsModule,
            TuiWrapperModule,
            TuiTooltipModule,
            TuiIcon] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiPrimitiveTextfieldModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        FormsModule,
                        PolymorpheusOutlet,
                        PolymorpheusTemplate,
                        TuiWrapperModule,
                        TuiTooltipModule,
                        TuiIcon,
                        TuiAppearance,
                    ],
                    declarations: [
                        TuiPrimitiveTextfieldComponent,
                        TuiPrimitiveTextfieldDirective,
                        TuiTextfieldComponent,
                        TuiValueDecorationComponent,
                    ],
                    exports: [
                        TuiPrimitiveTextfieldComponent,
                        TuiPrimitiveTextfieldDirective,
                        TuiTextfieldComponent,
                    ],
                }]
        }] });

/**
 * @deprecated:
 * use {@link TUI_TEXTFIELD_DEFAULT_OPTIONS}
 */
const TUI_PRIMITIVE_TEXTFIELD_DEFAULT_OPTIONS = TUI_TEXTFIELD_DEFAULT_OPTIONS;
/**
 * @deprecated:
 * use {@link TUI_TEXTFIELD_OPTIONS}
 */
const TUI_PRIMITIVE_TEXTFIELD_OPTIONS = TUI_TEXTFIELD_OPTIONS;
/**
 * @deprecated:
 * use {@link tuiTextfieldOptionsProvider}
 */
const tuiPrimitiveTextfieldOptionsProvider = tuiTextfieldOptionsProvider;

/**
 * Generated bundle index. Do not edit.
 */

export { TUI_ICON_START_PADDINGS, TUI_PRIMITIVE_TEXTFIELD_DEFAULT_OPTIONS, TUI_PRIMITIVE_TEXTFIELD_OPTIONS, TuiPrimitiveTextfieldComponent, TuiPrimitiveTextfieldDirective, TuiPrimitiveTextfieldModule, TuiTextfieldComponent, TuiValueDecorationComponent, tuiPrimitiveTextfieldOptionsProvider };
//# sourceMappingURL=taiga-ui-legacy-components-primitive-textfield.mjs.map
