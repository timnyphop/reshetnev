{"version":3,"file":"taiga-ui-legacy-components-input-date-time.mjs","sources":["../../../projects/legacy/components/input-date-time/native-date-time/native-date-time.directive.ts","../../../projects/legacy/components/input-date-time/input-date-time.component.ts","../../../projects/legacy/components/input-date-time/input-date-time.template.html","../../../projects/legacy/components/input-date-time/input-date-time.directive.ts","../../../projects/legacy/components/input-date-time/input-date-time.module.ts","../../../projects/legacy/components/input-date-time/taiga-ui-legacy-components-input-date-time.ts"],"sourcesContent":["import {Directive, inject} from '@angular/core';\nimport {TuiDay, TuiTime} from '@taiga-ui/cdk/date-time';\nimport {TUI_TEXTFIELD_HOST} from '@taiga-ui/legacy/tokens';\n\nimport type {TuiInputDateTimeDirective} from '../input-date-time.directive';\n\n@Directive({\n    standalone: false,\n    selector: 'input[tuiDateTime]',\n    host: {\n        type: 'datetime-local',\n        '[tabIndex]': '-1',\n        '[value]': 'value',\n        '(change.stop)': 'onChange($event.target.value)',\n        '(input.stop)': 'onChange($event.target.value)',\n        '(click.stop.silent)': '0',\n        '(mousedown.stop.silent)': '0',\n    },\n})\nexport class TuiNativeDateTimeDirective {\n    protected readonly host = inject<TuiInputDateTimeDirective>(TUI_TEXTFIELD_HOST);\n\n    protected get value(): string {\n        if (!this.host.rawValue[0] || !this.host.rawValue[1]) {\n            return '';\n        }\n\n        return `${this.host.rawValue[0]?.toString(\n            'YMD',\n            '-',\n        )}T${this.host.rawValue[1]?.toString('HH:MM')}`;\n    }\n\n    protected onChange(value: string): void {\n        if (!value) {\n            this.host.writeValue([null, null]);\n\n            return;\n        }\n\n        const date = new Date(value);\n        const day = TuiDay.fromLocalNativeDate(date);\n        const time = TuiTime.fromLocalNativeDate(date);\n\n        this.host.writeValue([day, time]);\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    inject,\n    Input,\n    ViewChild,\n} from '@angular/core';\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\nimport type {MaskitoOptions} from '@maskito/core';\nimport {maskitoDateTimeOptionsGenerator} from '@maskito/kit';\nimport type {TuiValueTransformer} from '@taiga-ui/cdk/classes';\nimport {TUI_FALSE_HANDLER} from '@taiga-ui/cdk/constants';\nimport type {TuiDateMode, TuiTimeMode} from '@taiga-ui/cdk/date-time';\nimport {\n    DATE_FILLER_LENGTH,\n    tuiDateClamp,\n    TuiDay,\n    TuiMonth,\n    TuiTime,\n} from '@taiga-ui/cdk/date-time';\nimport type {TuiActiveZone} from '@taiga-ui/cdk/directives/active-zone';\nimport {tuiWatch} from '@taiga-ui/cdk/observables';\nimport {TUI_IS_MOBILE} from '@taiga-ui/cdk/tokens';\nimport type {TuiBooleanHandler, TuiContext} from '@taiga-ui/cdk/types';\nimport {tuiClamp} from '@taiga-ui/cdk/utils/math';\nimport {\n    changeDateSeparator,\n    tuiNullableSame,\n    tuiPure,\n} from '@taiga-ui/cdk/utils/miscellaneous';\nimport {TUI_DATE_FORMAT, TUI_DEFAULT_DATE_FORMAT} from '@taiga-ui/core/tokens';\nimport type {TuiSizeL, TuiSizeS} from '@taiga-ui/core/types';\nimport type {TuiInputDateOptions} from '@taiga-ui/kit/tokens';\nimport {\n    TUI_DATE_TEXTS,\n    TUI_DATE_TIME_VALUE_TRANSFORMER,\n    TUI_INPUT_DATE_OPTIONS,\n    TUI_TIME_TEXTS,\n    tuiDateStreamWithTransformer,\n} from '@taiga-ui/kit/tokens';\nimport {AbstractTuiControl, tuiAsControl} from '@taiga-ui/legacy/classes';\nimport {TuiPrimitiveTextfieldComponent} from '@taiga-ui/legacy/components/primitive-textfield';\nimport {TUI_TEXTFIELD_SIZE} from '@taiga-ui/legacy/directives';\nimport type {TuiFocusableElementAccessor} from '@taiga-ui/legacy/tokens';\nimport {tuiAsFocusableItemAccessor} from '@taiga-ui/legacy/tokens';\nimport {TUI_DATE_MODE_MASKITO_ADAPTER} from '@taiga-ui/legacy/utils';\nimport type {Observable} from 'rxjs';\nimport {BehaviorSubject, combineLatest, map, timer} from 'rxjs';\n\nconst DATE_TIME_SEPARATOR = ', ';\n\n@Component({\n    standalone: false,\n    selector: 'tui-input-date-time',\n    templateUrl: './input-date-time.template.html',\n    styleUrls: ['./input-date-time.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        tuiAsFocusableItemAccessor(TuiInputDateTimeComponent),\n        tuiAsControl(TuiInputDateTimeComponent),\n        tuiDateStreamWithTransformer(TUI_DATE_TIME_VALUE_TRANSFORMER),\n    ],\n    host: {\n        '[attr.data-size]': 'size',\n        '(click)': 'onClick()',\n    },\n})\nexport class TuiInputDateTimeComponent\n    extends AbstractTuiControl<[TuiDay | null, TuiTime | null]>\n    implements TuiFocusableElementAccessor\n{\n    @ViewChild(TuiPrimitiveTextfieldComponent)\n    private readonly textfield?: TuiPrimitiveTextfieldComponent;\n\n    private readonly options = inject(TUI_INPUT_DATE_OPTIONS);\n    private readonly textfieldSize = inject(TUI_TEXTFIELD_SIZE);\n    private month: TuiMonth | null = null;\n    private readonly timeMode$ = new BehaviorSubject<TuiTimeMode>('HH:MM');\n\n    protected readonly timeTexts$ = inject(TUI_TIME_TEXTS);\n    protected readonly dateTexts$ = inject(TUI_DATE_TEXTS);\n    protected override readonly valueTransformer: TuiValueTransformer<\n        [TuiDay | null, TuiTime | null]\n    > | null = inject(TUI_DATE_TIME_VALUE_TRANSFORMER, {optional: true});\n\n    protected readonly type!: TuiContext<TuiActiveZone>;\n\n    protected readonly filler$: Observable<string> = combineLatest([\n        this.dateTexts$.pipe(\n            map((dateTexts) =>\n                changeDateSeparator(\n                    dateTexts[this.dateFormat.mode],\n                    this.dateFormat.separator,\n                ),\n            ),\n        ),\n        this.timeTexts$,\n        this.timeMode$,\n    ]).pipe(\n        map(([dateFiller, timeTexts, timeMode]) =>\n            this.getDateTimeString(dateFiller, timeTexts[timeMode]),\n        ),\n    );\n\n    protected dateFormat = TUI_DEFAULT_DATE_FORMAT;\n    protected readonly isMobile = inject(TUI_IS_MOBILE);\n    protected readonly dateFormat$ = inject(TUI_DATE_FORMAT)\n        .pipe(tuiWatch(this.cdr), takeUntilDestroyed())\n        .subscribe((format) => {\n            this.dateFormat = format;\n        });\n\n    @Input()\n    public min: TuiDay | [TuiDay | null, TuiTime | null] | null = this.options.min;\n\n    @Input()\n    public max: TuiDay | [TuiDay | null, TuiTime | null] | null = this.options.max;\n\n    @Input()\n    public disabledItemHandler: TuiBooleanHandler<TuiDay> = TUI_FALSE_HANDLER;\n\n    @Input()\n    public defaultActiveYearMonth = TuiMonth.currentLocal();\n\n    public open = false;\n\n    @Input()\n    public set timeMode(value: TuiTimeMode) {\n        this.timeMode$.next(value);\n    }\n\n    public get timeMode(): TuiTimeMode {\n        return this.timeMode$.value;\n    }\n\n    public get nativeFocusableElement(): HTMLInputElement | null {\n        return this.textfield?.nativeFocusableElement ?? null;\n    }\n\n    public get focused(): boolean {\n        return !!this.textfield?.focused;\n    }\n\n    public get computedValue(): string {\n        const {value, nativeValue, timeMode} = this;\n        const [date, time] = value;\n        const hasTimeInputChars = nativeValue.length > DATE_FILLER_LENGTH;\n\n        if (!date || (!time && hasTimeInputChars)) {\n            return nativeValue;\n        }\n\n        return this.getDateTimeString(date, time, timeMode);\n    }\n\n    public override setDisabledState(): void {\n        super.setDisabledState();\n        this.open = false;\n    }\n\n    public override writeValue(value: [TuiDay | null, TuiTime | null] | null): void {\n        super.writeValue(value);\n\n        this.nativeValue =\n            this.value && (this.value[0] || this.value[1]) ? this.computedValue : '';\n    }\n\n    public onValueChange(value: string): void {\n        if (!value) {\n            this.onOpenChange(true);\n        }\n\n        if (value.length < DATE_FILLER_LENGTH) {\n            this.value = [null, null];\n\n            return;\n        }\n\n        const [date = '', time] = value.split(DATE_TIME_SEPARATOR);\n        const parsedDate = TuiDay.normalizeParse(date, this.dateFormat.mode);\n        const parsedTime =\n            time && time.length === this.timeMode.length\n                ? TuiTime.fromString(time)\n                : null;\n\n        this.open = false;\n        this.value = [parsedDate, parsedTime];\n    }\n\n    protected get size(): TuiSizeL | TuiSizeS {\n        return this.textfieldSize.size;\n    }\n\n    protected get computedMin(): TuiDay | [TuiDay, TuiTime] {\n        return this.toTuiDay(this.min, this.options.min);\n    }\n\n    protected get computedMax(): TuiDay | [TuiDay, TuiTime] {\n        return this.toTuiDay(this.max, this.options.max);\n    }\n\n    protected get fillerLength(): number {\n        return DATE_FILLER_LENGTH + DATE_TIME_SEPARATOR.length + this.timeMode.length;\n    }\n\n    protected get maskOptions(): MaskitoOptions {\n        return this.calculateMask(\n            this.computedMin,\n            this.computedMax,\n            this.timeMode,\n            this.dateFormat.mode,\n            this.dateFormat.separator,\n        );\n    }\n\n    protected get calendarIcon(): TuiInputDateOptions['icon'] {\n        return this.options.icon;\n    }\n\n    protected get showNativePicker(): boolean {\n        return this.nativePicker && this.timeMode === 'HH:MM';\n    }\n\n    protected get calendarValue(): TuiDay | null {\n        return this.value[0];\n    }\n\n    protected get calendarMinDay(): TuiDay {\n        const min = this.computedMin;\n\n        return Array.isArray(min) ? min[0] : min;\n    }\n\n    protected get calendarMaxDay(): TuiDay {\n        const max = this.computedMax;\n\n        return Array.isArray(max) ? max[0] : max;\n    }\n\n    protected get computedActiveYearMonth(): TuiMonth {\n        const {computedMin, computedMax} = this;\n\n        return (\n            this.month ||\n            this.value[0] ||\n            tuiDateClamp(\n                this.defaultActiveYearMonth,\n                Array.isArray(computedMin) ? computedMin[0] : computedMin,\n                Array.isArray(computedMax) ? computedMax[0] : computedMax,\n            )\n        );\n    }\n\n    protected get nativeValue(): string {\n        return this.nativeFocusableElement?.value || '';\n    }\n\n    protected set nativeValue(value: string) {\n        if (!this.nativeFocusableElement) {\n            return;\n        }\n\n        this.nativeFocusableElement.value = value;\n    }\n\n    protected onClick(): void {\n        this.open = !this.open;\n    }\n\n    protected onDayClick(day: TuiDay): void {\n        const modifiedTime = this.value[1] && this.clampTime(this.value[1], day);\n        const newCaretIndex = DATE_FILLER_LENGTH + DATE_TIME_SEPARATOR.length;\n\n        this.value = [day, modifiedTime];\n        this.updateNativeValue(day);\n        this.nativeFocusableElement?.setSelectionRange(newCaretIndex, newCaretIndex);\n        this.open = false;\n    }\n\n    protected onMonthChange(month: TuiMonth): void {\n        this.month = month;\n    }\n\n    protected onOpenChange(open: boolean): void {\n        this.open = open;\n    }\n\n    protected onFocused(focused: boolean): void {\n        this.updateFocused(focused);\n\n        if (focused) {\n            return;\n        }\n\n        timer(0)\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe(() => {\n                this.nativeValue = this.trimTrailingSeparator(this.nativeValue);\n            });\n\n        if (\n            this.value[0] === null ||\n            this.value[1] !== null ||\n            this.nativeValue.length === this.fillerLength ||\n            this.timeMode === 'HH:MM'\n        ) {\n            return;\n        }\n\n        const [, time] = this.nativeValue.split(DATE_TIME_SEPARATOR);\n\n        if (!time) {\n            return;\n        }\n\n        const parsedTime = TuiTime.fromString(time);\n\n        this.value = [this.value[0], parsedTime];\n    }\n\n    protected getFallbackValue(): [TuiDay | null, TuiTime | null] {\n        return [null, null];\n    }\n\n    protected override valueIdenticalComparator(\n        oldValue: [TuiDay | null, TuiTime | null],\n        newValue: [TuiDay | null, TuiTime | null],\n    ): boolean {\n        return (\n            tuiNullableSame(oldValue[0], newValue[0], (a, b) => a.daySame(b)) &&\n            tuiNullableSame(oldValue[1], newValue[1], (a, b) => String(a) === String(b))\n        );\n    }\n\n    private get nativePicker(): boolean {\n        return this.options.nativePicker && this.isMobile;\n    }\n\n    @tuiPure\n    private calculateMask(\n        min: TuiDay | [TuiDay, TuiTime],\n        max: TuiDay | [TuiDay, TuiTime],\n        timeMode: TuiTimeMode,\n        dateFormat: TuiDateMode,\n        dateSeparator: string,\n    ): MaskitoOptions {\n        return maskitoDateTimeOptionsGenerator({\n            timeMode,\n            dateSeparator,\n            dateMode: TUI_DATE_MODE_MASKITO_ADAPTER[dateFormat],\n            min: this.toNativeDate(min),\n            max: this.toNativeDate(max),\n        });\n    }\n\n    @tuiPure\n    private getDateTimeString(\n        date: TuiDay | string,\n        time: TuiTime | string | null,\n        timeMode: TuiTimeMode = 'HH:MM',\n    ): string {\n        const dateString =\n            date instanceof TuiDay\n                ? date.toString(this.dateFormat.mode, this.dateFormat.separator)\n                : date;\n        const timeString = time instanceof TuiTime ? time.toString(timeMode) : time || '';\n\n        return timeString\n            ? `${dateString}${DATE_TIME_SEPARATOR}${timeString}`\n            : dateString;\n    }\n\n    private updateNativeValue(day: TuiDay): void {\n        const time = this.nativeValue.split(DATE_TIME_SEPARATOR)[1] || '';\n\n        this.nativeValue = this.getDateTimeString(day, time);\n    }\n\n    private clampTime(time: TuiTime, day: TuiDay): TuiTime {\n        const {computedMin, computedMax} = this;\n\n        const ms = time.toAbsoluteMilliseconds();\n        const min =\n            Array.isArray(computedMin) && day.daySame(this.calendarMinDay)\n                ? computedMin[1].toAbsoluteMilliseconds()\n                : -Infinity;\n        const max =\n            Array.isArray(computedMax) && day.daySame(this.calendarMaxDay)\n                ? computedMax[1].toAbsoluteMilliseconds()\n                : Infinity;\n\n        return TuiTime.fromAbsoluteMilliseconds(tuiClamp(ms, min, max));\n    }\n\n    private trimTrailingSeparator(value: string): string {\n        return value.replace(\n            new RegExp(`(\\\\${this.dateFormat.separator}|${DATE_TIME_SEPARATOR}|\\\\.)$`),\n            '',\n        );\n    }\n\n    private toNativeDate(value: TuiDay | [TuiDay, TuiTime]): Date {\n        if (!Array.isArray(value)) {\n            return value.toLocalNativeDate();\n        }\n\n        const [{year, month, day}, {hours, minutes, seconds, ms}] = value;\n\n        return new Date(year, month, day, hours, minutes, seconds, ms);\n    }\n\n    private toTuiDay(\n        value: TuiDay | [TuiDay | null, TuiTime | null] | null,\n        fallback: TuiDay,\n    ): TuiDay | [TuiDay, TuiTime] {\n        if (!value) {\n            return fallback;\n        }\n\n        if (!Array.isArray(value)) {\n            return value;\n        }\n\n        const [tuiDay, tuiTime] = value;\n\n        if (!tuiDay) {\n            return fallback;\n        }\n\n        if (!tuiTime) {\n            return tuiDay;\n        }\n\n        return value as [TuiDay, TuiTime];\n    }\n}\n","<div\n    tuiDropdownOpenMonitor\n    class=\"t-hosted\"\n    [tuiDropdown]=\"dropdown\"\n    [tuiDropdownEnabled]=\"interactive && !showNativePicker\"\n    [tuiDropdownOpen]=\"open && interactive\"\n    (tuiDropdownOpenChange)=\"onOpenChange($event)\"\n>\n    <tui-primitive-textfield\n        automation-id=\"tui-input-date-time__textfield\"\n        tuiValueAccessor\n        class=\"t-textfield\"\n        [disabled]=\"computedDisabled\"\n        [invalid]=\"computedInvalid\"\n        [maskito]=\"maskOptions\"\n        [nativeId]=\"nativeId\"\n        [pseudoFocus]=\"pseudoFocus\"\n        [pseudoHover]=\"pseudoHover\"\n        [readOnly]=\"readOnly\"\n        [tuiTextfieldFiller]=\"(filler$ | async) || ''\"\n        [tuiTextfieldIcon]=\"calendarIcon && iconContent\"\n        [value]=\"computedValue\"\n        (focusedChange)=\"onFocused($event)\"\n        (valueChange)=\"onValueChange($event)\"\n    >\n        <ng-content />\n        <ng-content\n            ngProjectAs=\"input\"\n            select=\"input\"\n        />\n    </tui-primitive-textfield>\n\n    <ng-template #iconContent>\n        <tui-icon\n            *polymorpheusOutlet=\"calendarIcon as src; context: {$implicit: size}\"\n            tuiAppearance=\"icon\"\n            [class.t-icon_small]=\"size === 's'\"\n            [class.t-icon]=\"!computedDisabled\"\n            [icon]=\"src.toString()\"\n        />\n        <input\n            *ngIf=\"showNativePicker\"\n            tuiDateTime\n            class=\"t-native-input\"\n        />\n    </ng-template>\n\n    <ng-template\n        #dropdown=\"polymorpheus\"\n        [polymorpheus]=\"type\"\n    >\n        <tui-calendar\n            automation-id=\"tui-input-date-time__calendar\"\n            [disabledItemHandler]=\"disabledItemHandler\"\n            [max]=\"calendarMaxDay\"\n            [min]=\"calendarMinDay\"\n            [month]=\"computedActiveYearMonth\"\n            [value]=\"calendarValue\"\n            (dayClick)=\"onDayClick($event)\"\n            (monthChange)=\"onMonthChange($event)\"\n            (mousedown.prevent.silent)=\"(0)\"\n        />\n    </ng-template>\n</div>\n","import {Directive} from '@angular/core';\nimport type {TuiDay, TuiTime} from '@taiga-ui/cdk/date-time';\nimport {AbstractTuiTextfieldHost} from '@taiga-ui/legacy/classes';\nimport {tuiAsTextfieldHost} from '@taiga-ui/legacy/tokens';\n\nimport type {TuiInputDateTimeComponent} from './input-date-time.component';\n\n@Directive({\n    standalone: false,\n    selector: 'tui-input-date-time',\n    providers: [tuiAsTextfieldHost(TuiInputDateTimeDirective)],\n})\nexport class TuiInputDateTimeDirective extends AbstractTuiTextfieldHost<TuiInputDateTimeComponent> {\n    public override get value(): string {\n        return this.host.computedValue;\n    }\n\n    public get rawValue(): [TuiDay | null, TuiTime | null] {\n        return this.host.value;\n    }\n\n    public onValueChange(value: string): void {\n        this.host.onValueChange(value);\n    }\n\n    public writeValue(value: [TuiDay | null, TuiTime | null]): void {\n        this.host.writeValue(value);\n    }\n\n    public override process(input: HTMLInputElement): void {\n        input.inputMode = 'numeric';\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MaskitoDirective} from '@maskito/angular';\nimport {TuiCalendar} from '@taiga-ui/core/components/calendar';\nimport {TuiIcon} from '@taiga-ui/core/components/icon';\nimport {TuiLink} from '@taiga-ui/core/components/link';\nimport {TuiAppearance} from '@taiga-ui/core/directives/appearance';\nimport {TuiDropdown} from '@taiga-ui/core/directives/dropdown';\nimport {\n    TuiPrimitiveTextfieldModule,\n    TuiTextfieldComponent,\n} from '@taiga-ui/legacy/components/primitive-textfield';\nimport {\n    TuiLegacyDropdownOpenMonitorDirective,\n    TuiTextfieldControllerModule,\n    TuiValueAccessorModule,\n} from '@taiga-ui/legacy/directives';\nimport {PolymorpheusOutlet, PolymorpheusTemplate} from '@taiga-ui/polymorpheus';\n\nimport {TuiInputDateTimeComponent} from './input-date-time.component';\nimport {TuiInputDateTimeDirective} from './input-date-time.directive';\nimport {TuiNativeDateTimeDirective} from './native-date-time/native-date-time.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaskitoDirective,\n        PolymorpheusOutlet,\n        PolymorpheusTemplate,\n        TuiCalendar,\n        TuiLink,\n        TuiPrimitiveTextfieldModule,\n        TuiValueAccessorModule,\n        TuiTextfieldControllerModule,\n        TuiLegacyDropdownOpenMonitorDirective,\n        TuiIcon,\n        TuiAppearance,\n        ...TuiDropdown,\n    ],\n    declarations: [\n        TuiInputDateTimeComponent,\n        TuiInputDateTimeDirective,\n        TuiNativeDateTimeDirective,\n    ],\n    exports: [\n        TuiInputDateTimeComponent,\n        TuiInputDateTimeDirective,\n        TuiTextfieldComponent,\n        ...TuiDropdown,\n    ],\n})\nexport class TuiInputDateTimeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i9","i10.TuiNativeDateTimeDirective","i1"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,MAaa,0BAA0B,CAAA;AAbvC,IAAA,WAAA,GAAA;AAcuB,QAAA,IAAA,CAAA,IAAI,GAAG,MAAM,CAA4B,kBAAkB,CAAC,CAAC;AA0BnF,KAAA;AAxBG,IAAA,IAAc,KAAK,GAAA;AACf,QAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;AAClD,YAAA,OAAO,EAAE,CAAC;AACb,SAAA;AAED,QAAA,OAAO,CAAG,EAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CACrC,KAAK,EACL,GAAG,CACN,CAAA,CAAA,EAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;KACnD;AAES,IAAA,QAAQ,CAAC,KAAa,EAAA;QAC5B,IAAI,CAAC,KAAK,EAAE;YACR,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;YAEnC,OAAO;AACV,SAAA;AAED,QAAA,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7B,MAAM,GAAG,GAAG,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QAC7C,MAAM,IAAI,GAAG,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QAE/C,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;KACrC;+GA1BQ,0BAA0B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;mGAA1B,0BAA0B,EAAA,QAAA,EAAA,oBAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,MAAA,EAAA,gBAAA,EAAA,EAAA,SAAA,EAAA,EAAA,aAAA,EAAA,+BAAA,EAAA,YAAA,EAAA,+BAAA,EAAA,mBAAA,EAAA,GAAA,EAAA,uBAAA,EAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,UAAA,EAAA,IAAA,EAAA,OAAA,EAAA,OAAA,EAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA;;4FAA1B,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBAbtC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,UAAU,EAAE,KAAK;AACjB,oBAAA,QAAQ,EAAE,oBAAoB;AAC9B,oBAAA,IAAI,EAAE;AACF,wBAAA,IAAI,EAAE,gBAAgB;AACtB,wBAAA,YAAY,EAAE,IAAI;AAClB,wBAAA,SAAS,EAAE,OAAO;AAClB,wBAAA,eAAe,EAAE,+BAA+B;AAChD,wBAAA,cAAc,EAAE,+BAA+B;AAC/C,wBAAA,qBAAqB,EAAE,GAAG;AAC1B,wBAAA,yBAAyB,EAAE,GAAG;AACjC,qBAAA;AACJ,iBAAA,CAAA;;;AC+BD,MAAM,mBAAmB,GAAG,IAAI,CAAC;AAEjC,MAgBa,yBACT,SAAQ,kBAAmD,CAAA;AAjB/D,IAAA,WAAA,GAAA;;AAuBqB,QAAA,IAAA,CAAA,OAAO,GAAG,MAAM,CAAC,sBAAsB,CAAC,CAAC;AACzC,QAAA,IAAA,CAAA,aAAa,GAAG,MAAM,CAAC,kBAAkB,CAAC,CAAC;QACpD,IAAK,CAAA,KAAA,GAAoB,IAAI,CAAC;AACrB,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,eAAe,CAAc,OAAO,CAAC,CAAC;AAEpD,QAAA,IAAA,CAAA,UAAU,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;AACpC,QAAA,IAAA,CAAA,UAAU,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;QAC3B,IAAgB,CAAA,gBAAA,GAEjC,MAAM,CAAC,+BAA+B,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QAIlD,IAAO,CAAA,OAAA,GAAuB,aAAa,CAAC;AAC3D,YAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAChB,GAAG,CAAC,CAAC,SAAS,KACV,mBAAmB,CACf,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAC/B,IAAI,CAAC,UAAU,CAAC,SAAS,CAC5B,CACJ,CACJ;AACD,YAAA,IAAI,CAAC,UAAU;AACf,YAAA,IAAI,CAAC,SAAS;AACjB,SAAA,CAAC,CAAC,IAAI,CACH,GAAG,CAAC,CAAC,CAAC,UAAU,EAAE,SAAS,EAAE,QAAQ,CAAC,KAClC,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC,CAC1D,CACJ,CAAC;QAEQ,IAAU,CAAA,UAAA,GAAG,uBAAuB,CAAC;AAC5B,QAAA,IAAA,CAAA,QAAQ,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;AACjC,QAAA,IAAA,CAAA,WAAW,GAAG,MAAM,CAAC,eAAe,CAAC;aACnD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,kBAAkB,EAAE,CAAC;AAC9C,aAAA,SAAS,CAAC,CAAC,MAAM,KAAI;AAClB,YAAA,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;AAC7B,SAAC,CAAC,CAAC;AAGA,QAAA,IAAA,CAAA,GAAG,GAAoD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;AAGxE,QAAA,IAAA,CAAA,GAAG,GAAoD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;QAGxE,IAAmB,CAAA,mBAAA,GAA8B,iBAAiB,CAAC;AAGnE,QAAA,IAAA,CAAA,sBAAsB,GAAG,QAAQ,CAAC,YAAY,EAAE,CAAC;QAEjD,IAAI,CAAA,IAAA,GAAG,KAAK,CAAC;AAuTvB,KAAA;IArTG,IACW,QAAQ,CAAC,KAAkB,EAAA;AAClC,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC9B;AAED,IAAA,IAAW,QAAQ,GAAA;AACf,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;KAC/B;AAED,IAAA,IAAW,sBAAsB,GAAA;AAC7B,QAAA,OAAO,IAAI,CAAC,SAAS,EAAE,sBAAsB,IAAI,IAAI,CAAC;KACzD;AAED,IAAA,IAAW,OAAO,GAAA;AACd,QAAA,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC;KACpC;AAED,IAAA,IAAW,aAAa,GAAA;QACpB,MAAM,EAAC,KAAK,EAAE,WAAW,EAAE,QAAQ,EAAC,GAAG,IAAI,CAAC;AAC5C,QAAA,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,KAAK,CAAC;AAC3B,QAAA,MAAM,iBAAiB,GAAG,WAAW,CAAC,MAAM,GAAG,kBAAkB,CAAC;QAElE,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,iBAAiB,CAAC,EAAE;AACvC,YAAA,OAAO,WAAW,CAAC;AACtB,SAAA;QAED,OAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;KACvD;IAEe,gBAAgB,GAAA;QAC5B,KAAK,CAAC,gBAAgB,EAAE,CAAC;AACzB,QAAA,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;KACrB;AAEe,IAAA,UAAU,CAAC,KAA6C,EAAA;AACpE,QAAA,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AAExB,QAAA,IAAI,CAAC,WAAW;AACZ,YAAA,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;KAChF;AAEM,IAAA,aAAa,CAAC,KAAa,EAAA;QAC9B,IAAI,CAAC,KAAK,EAAE;AACR,YAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;AAC3B,SAAA;AAED,QAAA,IAAI,KAAK,CAAC,MAAM,GAAG,kBAAkB,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAE1B,OAAO;AACV,SAAA;AAED,QAAA,MAAM,CAAC,IAAI,GAAG,EAAE,EAAE,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;AAC3D,QAAA,MAAM,UAAU,GAAG,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AACrE,QAAA,MAAM,UAAU,GACZ,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,QAAQ,CAAC,MAAM;AACxC,cAAE,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC;cACxB,IAAI,CAAC;AAEf,QAAA,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;KACzC;AAED,IAAA,IAAc,IAAI,GAAA;AACd,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;KAClC;AAED,IAAA,IAAc,WAAW,GAAA;AACrB,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;KACpD;AAED,IAAA,IAAc,WAAW,GAAA;AACrB,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;KACpD;AAED,IAAA,IAAc,YAAY,GAAA;QACtB,OAAO,kBAAkB,GAAG,mBAAmB,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;KACjF;AAED,IAAA,IAAc,WAAW,GAAA;AACrB,QAAA,OAAO,IAAI,CAAC,aAAa,CACrB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,UAAU,CAAC,IAAI,EACpB,IAAI,CAAC,UAAU,CAAC,SAAS,CAC5B,CAAC;KACL;AAED,IAAA,IAAc,YAAY,GAAA;AACtB,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;KAC5B;AAED,IAAA,IAAc,gBAAgB,GAAA;QAC1B,OAAO,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,QAAQ,KAAK,OAAO,CAAC;KACzD;AAED,IAAA,IAAc,aAAa,GAAA;AACvB,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACxB;AAED,IAAA,IAAc,cAAc,GAAA;AACxB,QAAA,MAAM,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC;AAE7B,QAAA,OAAO,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;KAC5C;AAED,IAAA,IAAc,cAAc,GAAA;AACxB,QAAA,MAAM,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC;AAE7B,QAAA,OAAO,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;KAC5C;AAED,IAAA,IAAc,uBAAuB,GAAA;AACjC,QAAA,MAAM,EAAC,WAAW,EAAE,WAAW,EAAC,GAAG,IAAI,CAAC;QAExC,QACI,IAAI,CAAC,KAAK;AACV,YAAA,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AACb,YAAA,YAAY,CACR,IAAI,CAAC,sBAAsB,EAC3B,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,WAAW,EACzD,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,WAAW,CAC5D,EACH;KACL;AAED,IAAA,IAAc,WAAW,GAAA;AACrB,QAAA,OAAO,IAAI,CAAC,sBAAsB,EAAE,KAAK,IAAI,EAAE,CAAC;KACnD;IAED,IAAc,WAAW,CAAC,KAAa,EAAA;AACnC,QAAA,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE;YAC9B,OAAO;AACV,SAAA;AAED,QAAA,IAAI,CAAC,sBAAsB,CAAC,KAAK,GAAG,KAAK,CAAC;KAC7C;IAES,OAAO,GAAA;AACb,QAAA,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;KAC1B;AAES,IAAA,UAAU,CAAC,GAAW,EAAA;QAC5B,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AACzE,QAAA,MAAM,aAAa,GAAG,kBAAkB,GAAG,mBAAmB,CAAC,MAAM,CAAC;QAEtE,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;AACjC,QAAA,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,sBAAsB,EAAE,iBAAiB,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;AAC7E,QAAA,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;KACrB;AAES,IAAA,aAAa,CAAC,KAAe,EAAA;AACnC,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACtB;AAES,IAAA,YAAY,CAAC,IAAa,EAAA;AAChC,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KACpB;AAES,IAAA,SAAS,CAAC,OAAgB,EAAA;AAChC,QAAA,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AAE5B,QAAA,IAAI,OAAO,EAAE;YACT,OAAO;AACV,SAAA;QAED,KAAK,CAAC,CAAC,CAAC;AACH,aAAA,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACzC,SAAS,CAAC,MAAK;YACZ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACpE,SAAC,CAAC,CAAC;AAEP,QAAA,IACI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI;AACtB,YAAA,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI;AACtB,YAAA,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,IAAI,CAAC,YAAY;AAC7C,YAAA,IAAI,CAAC,QAAQ,KAAK,OAAO,EAC3B;YACE,OAAO;AACV,SAAA;AAED,QAAA,MAAM,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;QAE7D,IAAI,CAAC,IAAI,EAAE;YACP,OAAO;AACV,SAAA;QAED,MAAM,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAE5C,QAAA,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;KAC5C;IAES,gBAAgB,GAAA;AACtB,QAAA,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KACvB;IAEkB,wBAAwB,CACvC,QAAyC,EACzC,QAAyC,EAAA;QAEzC,QACI,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACjE,YAAA,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,EAC9E;KACL;AAED,IAAA,IAAY,YAAY,GAAA;QACpB,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,IAAI,IAAI,CAAC,QAAQ,CAAC;KACrD;IAGO,aAAa,CACjB,GAA+B,EAC/B,GAA+B,EAC/B,QAAqB,EACrB,UAAuB,EACvB,aAAqB,EAAA;AAErB,QAAA,OAAO,+BAA+B,CAAC;YACnC,QAAQ;YACR,aAAa;AACb,YAAA,QAAQ,EAAE,6BAA6B,CAAC,UAAU,CAAC;AACnD,YAAA,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC;AAC3B,YAAA,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC;AAC9B,SAAA,CAAC,CAAC;KACN;AAGO,IAAA,iBAAiB,CACrB,IAAqB,EACrB,IAA6B,EAC7B,WAAwB,OAAO,EAAA;AAE/B,QAAA,MAAM,UAAU,GACZ,IAAI,YAAY,MAAM;AAClB,cAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;cAC9D,IAAI,CAAC;QACf,MAAM,UAAU,GAAG,IAAI,YAAY,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC;AAElF,QAAA,OAAO,UAAU;AACb,cAAE,CAAG,EAAA,UAAU,GAAG,mBAAmB,CAAA,EAAG,UAAU,CAAE,CAAA;cAClD,UAAU,CAAC;KACpB;AAEO,IAAA,iBAAiB,CAAC,GAAW,EAAA;AACjC,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;QAElE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;KACxD;IAEO,SAAS,CAAC,IAAa,EAAE,GAAW,EAAA;AACxC,QAAA,MAAM,EAAC,WAAW,EAAE,WAAW,EAAC,GAAG,IAAI,CAAC;AAExC,QAAA,MAAM,EAAE,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;AACzC,QAAA,MAAM,GAAG,GACL,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC;AAC1D,cAAE,WAAW,CAAC,CAAC,CAAC,CAAC,sBAAsB,EAAE;cACvC,CAAC,QAAQ,CAAC;AACpB,QAAA,MAAM,GAAG,GACL,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC;AAC1D,cAAE,WAAW,CAAC,CAAC,CAAC,CAAC,sBAAsB,EAAE;cACvC,QAAQ,CAAC;AAEnB,QAAA,OAAO,OAAO,CAAC,wBAAwB,CAAC,QAAQ,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;KACnE;AAEO,IAAA,qBAAqB,CAAC,KAAa,EAAA;QACvC,OAAO,KAAK,CAAC,OAAO,CAChB,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,SAAS,IAAI,mBAAmB,CAAA,MAAA,CAAQ,CAAC,EAC1E,EAAE,CACL,CAAC;KACL;AAEO,IAAA,YAAY,CAAC,KAAiC,EAAA;AAClD,QAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AACvB,YAAA,OAAO,KAAK,CAAC,iBAAiB,EAAE,CAAC;AACpC,SAAA;QAED,MAAM,CAAC,EAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAC,EAAE,EAAC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE,EAAC,CAAC,GAAG,KAAK,CAAC;AAElE,QAAA,OAAO,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;KAClE;IAEO,QAAQ,CACZ,KAAsD,EACtD,QAAgB,EAAA;QAEhB,IAAI,CAAC,KAAK,EAAE;AACR,YAAA,OAAO,QAAQ,CAAC;AACnB,SAAA;AAED,QAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AACvB,YAAA,OAAO,KAAK,CAAC;AAChB,SAAA;AAED,QAAA,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,KAAK,CAAC;QAEhC,IAAI,CAAC,MAAM,EAAE;AACT,YAAA,OAAO,QAAQ,CAAC;AACnB,SAAA;QAED,IAAI,CAAC,OAAO,EAAE;AACV,YAAA,OAAO,MAAM,CAAC;AACjB,SAAA;AAED,QAAA,OAAO,KAA0B,CAAC;KACrC;+GA/WQ,yBAAyB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;AAAzB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,yBAAyB,EAVvB,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,EAAA,KAAA,EAAA,mBAAA,EAAA,qBAAA,EAAA,sBAAA,EAAA,wBAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,OAAA,EAAA,WAAA,EAAA,EAAA,UAAA,EAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,EAAA,EAAA,SAAA,EAAA;YACP,0BAA0B,CAAC,yBAAyB,CAAC;YACrD,YAAY,CAAC,yBAAyB,CAAC;YACvC,4BAA4B,CAAC,+BAA+B,CAAC;SAChE,EAUU,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,WAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,8BAA8B,uECvE7C,6lEAgEA,EAAA,MAAA,EAAA,CAAA,ueAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,EAAA,2BAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,qBAAA,EAAA,KAAA,EAAA,KAAA,EAAA,gBAAA,EAAA,gBAAA,EAAA,aAAA,EAAA,cAAA,EAAA,eAAA,EAAA,OAAA,EAAA,aAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,mBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,8BAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,UAAA,EAAA,SAAA,EAAA,UAAA,EAAA,OAAA,CAAA,EAAA,OAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,8BAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,2BAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,qCAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,oBAAA,EAAA,oBAAA,EAAA,mBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,kDAAA,EAAA,MAAA,EAAA,CAAA,aAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,qEAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,EAAA,iBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,uBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,0BAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA,EAAA;;ADmRY,UAAA,CAAA;IADP,OAAO;AAeP,CAAA,EAAA,yBAAA,CAAA,SAAA,EAAA,eAAA,EAAA,IAAA,CAAA,CAAA;AAGO,UAAA,CAAA;IADP,OAAO;AAeP,CAAA,EAAA,yBAAA,CAAA,SAAA,EAAA,mBAAA,EAAA,IAAA,CAAA,CAAA;4FA/SQ,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBAhBrC,SAAS;AACM,YAAA,IAAA,EAAA,CAAA,EAAA,UAAA,EAAA,KAAK,YACP,qBAAqB,EAAA,eAAA,EAGd,uBAAuB,CAAC,MAAM,EACpC,SAAA,EAAA;AACP,wBAAA,0BAA0B,CAA2B,yBAAA,CAAA;AACrD,wBAAA,YAAY,CAA2B,yBAAA,CAAA;wBACvC,4BAA4B,CAAC,+BAA+B,CAAC;qBAChE,EACK,IAAA,EAAA;AACF,wBAAA,kBAAkB,EAAE,MAAM;AAC1B,wBAAA,SAAS,EAAE,WAAW;AACzB,qBAAA,EAAA,QAAA,EAAA,6lEAAA,EAAA,MAAA,EAAA,CAAA,ueAAA,CAAA,EAAA,CAAA;8BAOgB,SAAS,EAAA,CAAA;sBADzB,SAAS;uBAAC,8BAA8B,CAAA;gBA0ClC,GAAG,EAAA,CAAA;sBADT,KAAK;gBAIC,GAAG,EAAA,CAAA;sBADT,KAAK;gBAIC,mBAAmB,EAAA,CAAA;sBADzB,KAAK;gBAIC,sBAAsB,EAAA,CAAA;sBAD5B,KAAK;gBAMK,QAAQ,EAAA,CAAA;sBADlB,KAAK;AAqNE,aAAA,CAAA,EAAA,aAAa,MAiBb,iBAAiB,EAAA,EAAA,EAAA,EAAA,CAAA;;AE7V7B,MAKa,yBAA0B,SAAQ,wBAAmD,CAAA;AAC9F,IAAA,IAAoB,KAAK,GAAA;AACrB,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;KAClC;AAED,IAAA,IAAW,QAAQ,GAAA;AACf,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;KAC1B;AAEM,IAAA,aAAa,CAAC,KAAa,EAAA;AAC9B,QAAA,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;KAClC;AAEM,IAAA,UAAU,CAAC,KAAsC,EAAA;AACpD,QAAA,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;KAC/B;AAEe,IAAA,OAAO,CAAC,KAAuB,EAAA;AAC3C,QAAA,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC;KAC/B;+GAnBQ,yBAAyB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;AAAzB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,yBAAyB,8CAFvB,CAAC,kBAAkB,CAAC,yBAAyB,CAAC,CAAC,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA;;4FAEjD,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBALrC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,UAAU,EAAE,KAAK;AACjB,oBAAA,QAAQ,EAAE,qBAAqB;AAC/B,oBAAA,SAAS,EAAE,CAAC,kBAAkB,CAAA,yBAAA,CAA2B,CAAC;AAC7D,iBAAA,CAAA;;;ACYD,MA4Ba,sBAAsB,CAAA;+GAAtB,sBAAsB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;AAAtB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,sBAAsB,iBAX3B,yBAAyB;YACzB,yBAAyB;AACzB,YAAA,0BAA0B,aAjB1B,YAAY;YACZ,gBAAgB;YAChB,kBAAkB;YAClB,oBAAoB;YACpB,WAAW;YACX,OAAO;YACP,2BAA2B;YAC3B,sBAAsB;YACtB,4BAA4B;YAC5B,qCAAqC;YACrC,OAAO;AACP,YAAA,aAAa,4WASb,yBAAyB;YACzB,yBAAyB;YACzB,qBAAqB,EAAAC,IAAA,CAAA,2BAAA,EAAAA,IAAA,CAAA,0BAAA,EAAAA,IAAA,CAAA,oBAAA,EAAAA,IAAA,CAAA,oBAAA,EAAAA,IAAA,CAAA,eAAA,EAAAA,IAAA,CAAA,qBAAA,EAAAA,IAAA,CAAA,iBAAA,EAAAA,IAAA,CAAA,iBAAA,EAAAA,IAAA,CAAA,gBAAA,EAAAA,IAAA,CAAA,kBAAA,EAAAA,IAAA,CAAA,mBAAA,EAAAA,IAAA,CAAA,wBAAA,EAAAA,IAAA,CAAA,oBAAA,CAAA,EAAA,CAAA,CAAA,EAAA;AAIhB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,sBAAsB,YA1B3B,YAAY;YAIZ,WAAW;YAEX,2BAA2B;YAC3B,sBAAsB;YACtB,4BAA4B;YAE5B,OAAO,EAAAA,IAAA,CAAA,oBAAA,CAAA,EAAA,CAAA,CAAA,EAAA;;4FAgBF,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBA5BlC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,gBAAgB;wBAChB,kBAAkB;wBAClB,oBAAoB;wBACpB,WAAW;wBACX,OAAO;wBACP,2BAA2B;wBAC3B,sBAAsB;wBACtB,4BAA4B;wBAC5B,qCAAqC;wBACrC,OAAO;wBACP,aAAa;AACb,wBAAA,GAAG,WAAW;AACjB,qBAAA;AACD,oBAAA,YAAY,EAAE;wBACV,yBAAyB;wBACzB,yBAAyB;wBACzB,0BAA0B;AAC7B,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,yBAAyB;wBACzB,yBAAyB;wBACzB,qBAAqB;AACrB,wBAAA,GAAG,WAAW;AACjB,qBAAA;AACJ,iBAAA,CAAA;;;AClDD;;AAEG;;;;"}