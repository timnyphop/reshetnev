import * as i0 from '@angular/core';
import { Injectable } from '@angular/core';
import { switchMap, shareReplay } from 'rxjs';
import { fromFetch } from 'rxjs/fetch';

/**
 * @deprecated: drop in v5.0
 */
class TuiStaticRequestService {
    constructor() {
        this.cache = new Map();
    }
    request(url) {
        const cache = this.cache.get(url);
        if (cache) {
            return cache;
        }
        const piped = fromFetch(url).pipe(switchMap(async (response) => {
            if (response.ok) {
                return response.text();
            }
            throw new Error(`Failed to load ${url} (${response.statusText})`);
        }), shareReplay({ bufferSize: 1, refCount: false }));
        this.cache.set(url, piped);
        return piped;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiStaticRequestService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }
    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiStaticRequestService, providedIn: 'root' }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiStaticRequestService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiStaticRequestService };
//# sourceMappingURL=taiga-ui-legacy-services.mjs.map
