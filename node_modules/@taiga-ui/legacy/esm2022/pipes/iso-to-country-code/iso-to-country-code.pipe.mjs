import { inject, Pipe } from '@angular/core';
import { TUI_COUNTRIES_MASKS } from '@taiga-ui/legacy/tokens';
import { tuiIsoToCountryCode } from '@taiga-ui/legacy/utils';
import * as i0 from "@angular/core";
/**
 * @deprecated: drop in v5.0
 * Use `getCountryCallingCode` from `libphonenumber-js/core` instead
 * ```ts
 * import {getCountryCallingCode} from 'libphonenumber-js/core';
 * import metadata from 'libphonenumber-js/max/metadata';
 *
 * getCountryCallingCode('US', metadata) // 1
 * getCountryCallingCode('GB', metadata) // 44
 * ```
 */
class TuiIsoToCountryCodePipe {
    constructor() {
        this.countriesMasks = inject(TUI_COUNTRIES_MASKS);
    }
    /**
     * @deprecated Use `getCountryCallingCode` from `libphonenumber-js/core` instead
     * ```ts
     * import {getCountryCallingCode} from 'libphonenumber-js/core';
     * import metadata from 'libphonenumber-js/max/metadata';
     *
     * getCountryCallingCode('US', metadata) // 1
     * getCountryCallingCode('GB', metadata) // 44
     * ```
     */
    transform(isoCode) {
        return tuiIsoToCountryCode(this.countriesMasks, isoCode);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiIsoToCountryCodePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe }); }
    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: TuiIsoToCountryCodePipe, isStandalone: true, name: "tuiIsoToCountryCode" }); }
}
export { TuiIsoToCountryCodePipe };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiIsoToCountryCodePipe, decorators: [{
            type: Pipe,
            args: [{
                    standalone: true,
                    name: 'tuiIsoToCountryCode',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXNvLXRvLWNvdW50cnktY29kZS5waXBlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbGVnYWN5L3BpcGVzL2lzby10by1jb3VudHJ5LWNvZGUvaXNvLXRvLWNvdW50cnktY29kZS5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBQyxNQUFNLEVBQUUsSUFBSSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTNDLE9BQU8sRUFBQyxtQkFBbUIsRUFBQyxNQUFNLHlCQUF5QixDQUFDO0FBQzVELE9BQU8sRUFBQyxtQkFBbUIsRUFBQyxNQUFNLHdCQUF3QixDQUFDOztBQUUzRDs7Ozs7Ozs7OztHQVVHO0FBQ0gsTUFJYSx1QkFBdUI7SUFKcEM7UUFLcUIsbUJBQWMsR0FBRyxNQUFNLENBQUMsbUJBQW1CLENBQUMsQ0FBQztLQWVqRTtJQWJHOzs7Ozs7Ozs7T0FTRztJQUNJLFNBQVMsQ0FBQyxPQUEwQjtRQUN2QyxPQUFPLG1CQUFtQixDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDN0QsQ0FBQzsrR0FmUSx1QkFBdUI7NkdBQXZCLHVCQUF1Qjs7U0FBdkIsdUJBQXVCOzRGQUF2Qix1QkFBdUI7a0JBSm5DLElBQUk7bUJBQUM7b0JBQ0YsVUFBVSxFQUFFLElBQUk7b0JBQ2hCLElBQUksRUFBRSxxQkFBcUI7aUJBQzlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUge1BpcGVUcmFuc2Zvcm19IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtpbmplY3QsIFBpcGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHR5cGUge1R1aUNvdW50cnlJc29Db2RlfSBmcm9tICdAdGFpZ2EtdWkvaTE4bi90eXBlcyc7XG5pbXBvcnQge1RVSV9DT1VOVFJJRVNfTUFTS1N9IGZyb20gJ0B0YWlnYS11aS9sZWdhY3kvdG9rZW5zJztcbmltcG9ydCB7dHVpSXNvVG9Db3VudHJ5Q29kZX0gZnJvbSAnQHRhaWdhLXVpL2xlZ2FjeS91dGlscyc7XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQ6IGRyb3AgaW4gdjUuMFxuICogVXNlIGBnZXRDb3VudHJ5Q2FsbGluZ0NvZGVgIGZyb20gYGxpYnBob25lbnVtYmVyLWpzL2NvcmVgIGluc3RlYWRcbiAqIGBgYHRzXG4gKiBpbXBvcnQge2dldENvdW50cnlDYWxsaW5nQ29kZX0gZnJvbSAnbGlicGhvbmVudW1iZXItanMvY29yZSc7XG4gKiBpbXBvcnQgbWV0YWRhdGEgZnJvbSAnbGlicGhvbmVudW1iZXItanMvbWF4L21ldGFkYXRhJztcbiAqXG4gKiBnZXRDb3VudHJ5Q2FsbGluZ0NvZGUoJ1VTJywgbWV0YWRhdGEpIC8vIDFcbiAqIGdldENvdW50cnlDYWxsaW5nQ29kZSgnR0InLCBtZXRhZGF0YSkgLy8gNDRcbiAqIGBgYFxuICovXG5AUGlwZSh7XG4gICAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgICBuYW1lOiAndHVpSXNvVG9Db3VudHJ5Q29kZScsXG59KVxuZXhwb3J0IGNsYXNzIFR1aUlzb1RvQ291bnRyeUNvZGVQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gICAgcHJpdmF0ZSByZWFkb25seSBjb3VudHJpZXNNYXNrcyA9IGluamVjdChUVUlfQ09VTlRSSUVTX01BU0tTKTtcblxuICAgIC8qKlxuICAgICAqIEBkZXByZWNhdGVkIFVzZSBgZ2V0Q291bnRyeUNhbGxpbmdDb2RlYCBmcm9tIGBsaWJwaG9uZW51bWJlci1qcy9jb3JlYCBpbnN0ZWFkXG4gICAgICogYGBgdHNcbiAgICAgKiBpbXBvcnQge2dldENvdW50cnlDYWxsaW5nQ29kZX0gZnJvbSAnbGlicGhvbmVudW1iZXItanMvY29yZSc7XG4gICAgICogaW1wb3J0IG1ldGFkYXRhIGZyb20gJ2xpYnBob25lbnVtYmVyLWpzL21heC9tZXRhZGF0YSc7XG4gICAgICpcbiAgICAgKiBnZXRDb3VudHJ5Q2FsbGluZ0NvZGUoJ1VTJywgbWV0YWRhdGEpIC8vIDFcbiAgICAgKiBnZXRDb3VudHJ5Q2FsbGluZ0NvZGUoJ0dCJywgbWV0YWRhdGEpIC8vIDQ0XG4gICAgICogYGBgXG4gICAgICovXG4gICAgcHVibGljIHRyYW5zZm9ybShpc29Db2RlOiBUdWlDb3VudHJ5SXNvQ29kZSk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiB0dWlJc29Ub0NvdW50cnlDb2RlKHRoaXMuY291bnRyaWVzTWFza3MsIGlzb0NvZGUpO1xuICAgIH1cbn1cbiJdfQ==