import { ChangeDetectionStrategy, Component } from '@angular/core';
import { tuiIsPresent } from '@taiga-ui/cdk/utils/miscellaneous';
import { TuiSelectOptionComponent } from '@taiga-ui/legacy/components/select-option';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@taiga-ui/kit/components/checkbox";
class TuiMultiSelectOptionComponent extends TuiSelectOptionComponent {
    get size() {
        return this.dataList?.size === 'l' ? 'm' : 's';
    }
    get selected() {
        const { value } = this.option;
        return (tuiIsPresent(value) &&
            tuiIsPresent(this.value) &&
            this.value.some((item) => this.matcher(item, value)));
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiMultiSelectOptionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiMultiSelectOptionComponent, selector: "tui-multi-select-option", usesInheritance: true, ngImport: i0, template: "<input\n    tuiCheckbox\n    type=\"checkbox\"\n    class=\"t-checkbox\"\n    [checked]=\"selected$ | async\"\n    [size]=\"size\"\n/>\n<ng-container [ngTemplateOutlet]=\"context.$implicit\" />\n", styles: ["@keyframes retrigger{0%{left:1px}to{left:2px}}:host{display:flex;flex:1;align-items:center;animation:retrigger 1s}.t-checkbox{margin-right:.75rem}\n"], dependencies: [{ kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "component", type: i2.TuiCheckbox, selector: "input[type=\"checkbox\"][tuiCheckbox]", inputs: ["size"] }, { kind: "pipe", type: i1.AsyncPipe, name: "async" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { TuiMultiSelectOptionComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiMultiSelectOptionComponent, decorators: [{
            type: Component,
            args: [{ selector: 'tui-multi-select-option', changeDetection: ChangeDetectionStrategy.OnPush, template: "<input\n    tuiCheckbox\n    type=\"checkbox\"\n    class=\"t-checkbox\"\n    [checked]=\"selected$ | async\"\n    [size]=\"size\"\n/>\n<ng-container [ngTemplateOutlet]=\"context.$implicit\" />\n", styles: ["@keyframes retrigger{0%{left:1px}to{left:2px}}:host{display:flex;flex:1;align-items:center;animation:retrigger 1s}.t-checkbox{margin-right:.75rem}\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGktc2VsZWN0LW9wdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9sZWdhY3kvY29tcG9uZW50cy9tdWx0aS1zZWxlY3Qtb3B0aW9uL211bHRpLXNlbGVjdC1vcHRpb24uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbGVnYWN5L2NvbXBvbmVudHMvbXVsdGktc2VsZWN0LW9wdGlvbi9tdWx0aS1zZWxlY3Qtb3B0aW9uLnRlbXBsYXRlLmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLHVCQUF1QixFQUFFLFNBQVMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNqRSxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sbUNBQW1DLENBQUM7QUFFL0QsT0FBTyxFQUFDLHdCQUF3QixFQUFDLE1BQU0sMkNBQTJDLENBQUM7Ozs7QUFFbkYsTUFNYSw2QkFFWCxTQUFRLHdCQUEyQjtJQUNqQyxJQUFjLElBQUk7UUFDZCxPQUFPLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUM7SUFDbkQsQ0FBQztJQUVELElBQXVCLFFBQVE7UUFDM0IsTUFBTSxFQUFDLEtBQUssRUFBQyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7UUFFNUIsT0FBTyxDQUNILFlBQVksQ0FBQyxLQUFLLENBQUM7WUFDbkIsWUFBWSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7WUFDeEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQ3ZELENBQUM7SUFDTixDQUFDOytHQWZRLDZCQUE2QjttR0FBN0IsNkJBQTZCLHNGQ1gxQyxxTUFRQTs7U0RHYSw2QkFBNkI7NEZBQTdCLDZCQUE2QjtrQkFOekMsU0FBUzsrQkFDSSx5QkFBeUIsbUJBR2xCLHVCQUF1QixDQUFDLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHt0dWlJc1ByZXNlbnR9IGZyb20gJ0B0YWlnYS11aS9jZGsvdXRpbHMvbWlzY2VsbGFuZW91cyc7XG5pbXBvcnQgdHlwZSB7VHVpU2l6ZVN9IGZyb20gJ0B0YWlnYS11aS9jb3JlL3R5cGVzJztcbmltcG9ydCB7VHVpU2VsZWN0T3B0aW9uQ29tcG9uZW50fSBmcm9tICdAdGFpZ2EtdWkvbGVnYWN5L2NvbXBvbmVudHMvc2VsZWN0LW9wdGlvbic7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndHVpLW11bHRpLXNlbGVjdC1vcHRpb24nLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9tdWx0aS1zZWxlY3Qtb3B0aW9uLnRlbXBsYXRlLmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL211bHRpLXNlbGVjdC1vcHRpb24uc3R5bGUubGVzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlNdWx0aVNlbGVjdE9wdGlvbkNvbXBvbmVudDxcbiAgICBUIGV4dGVuZHMgYW55W10sXG4+IGV4dGVuZHMgVHVpU2VsZWN0T3B0aW9uQ29tcG9uZW50PFQ+IHtcbiAgICBwcm90ZWN0ZWQgZ2V0IHNpemUoKTogVHVpU2l6ZVMge1xuICAgICAgICByZXR1cm4gdGhpcy5kYXRhTGlzdD8uc2l6ZSA9PT0gJ2wnID8gJ20nIDogJ3MnO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBvdmVycmlkZSBnZXQgc2VsZWN0ZWQoKTogYm9vbGVhbiB7XG4gICAgICAgIGNvbnN0IHt2YWx1ZX0gPSB0aGlzLm9wdGlvbjtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgdHVpSXNQcmVzZW50KHZhbHVlKSAmJlxuICAgICAgICAgICAgdHVpSXNQcmVzZW50KHRoaXMudmFsdWUpICYmXG4gICAgICAgICAgICB0aGlzLnZhbHVlLnNvbWUoKGl0ZW0pID0+IHRoaXMubWF0Y2hlcihpdGVtLCB2YWx1ZSkpXG4gICAgICAgICk7XG4gICAgfVxufVxuIiwiPGlucHV0XG4gICAgdHVpQ2hlY2tib3hcbiAgICB0eXBlPVwiY2hlY2tib3hcIlxuICAgIGNsYXNzPVwidC1jaGVja2JveFwiXG4gICAgW2NoZWNrZWRdPVwic2VsZWN0ZWQkIHwgYXN5bmNcIlxuICAgIFtzaXplXT1cInNpemVcIlxuLz5cbjxuZy1jb250YWluZXIgW25nVGVtcGxhdGVPdXRsZXRdPVwiY29udGV4dC4kaW1wbGljaXRcIiAvPlxuIl19