import { Directive, inject } from '@angular/core';
import { TuiDay, TuiTime } from '@taiga-ui/cdk/date-time';
import { TUI_TEXTFIELD_HOST } from '@taiga-ui/legacy/tokens';
import * as i0 from "@angular/core";
class TuiNativeDateTimeDirective {
    constructor() {
        this.host = inject(TUI_TEXTFIELD_HOST);
    }
    get value() {
        if (!this.host.rawValue[0] || !this.host.rawValue[1]) {
            return '';
        }
        return `${this.host.rawValue[0]?.toString('YMD', '-')}T${this.host.rawValue[1]?.toString('HH:MM')}`;
    }
    onChange(value) {
        if (!value) {
            this.host.writeValue([null, null]);
            return;
        }
        const date = new Date(value);
        const day = TuiDay.fromLocalNativeDate(date);
        const time = TuiTime.fromLocalNativeDate(date);
        this.host.writeValue([day, time]);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiNativeDateTimeDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: TuiNativeDateTimeDirective, selector: "input[tuiDateTime]", host: { attributes: { "type": "datetime-local" }, listeners: { "change.stop": "onChange($event.target.value)", "input.stop": "onChange($event.target.value)", "click.stop.silent": "0", "mousedown.stop.silent": "0" }, properties: { "tabIndex": "-1", "value": "value" } }, ngImport: i0 }); }
}
export { TuiNativeDateTimeDirective };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiNativeDateTimeDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'input[tuiDateTime]',
                    host: {
                        type: 'datetime-local',
                        '[tabIndex]': '-1',
                        '[value]': 'value',
                        '(change.stop)': 'onChange($event.target.value)',
                        '(input.stop)': 'onChange($event.target.value)',
                        '(click.stop.silent)': '0',
                        '(mousedown.stop.silent)': '0',
                    },
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF0aXZlLWRhdGUtdGltZS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9sZWdhY3kvY29tcG9uZW50cy9pbnB1dC1kYXRlLXRpbWUvbmF0aXZlLWRhdGUtdGltZS9uYXRpdmUtZGF0ZS10aW1lLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLE1BQU0sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNoRCxPQUFPLEVBQUMsTUFBTSxFQUFFLE9BQU8sRUFBQyxNQUFNLHlCQUF5QixDQUFDO0FBQ3hELE9BQU8sRUFBQyxrQkFBa0IsRUFBQyxNQUFNLHlCQUF5QixDQUFDOztBQUkzRCxNQVlhLDBCQUEwQjtJQVp2QztRQWF1QixTQUFJLEdBQUcsTUFBTSxDQUE0QixrQkFBa0IsQ0FBQyxDQUFDO0tBMEJuRjtJQXhCRyxJQUFjLEtBQUs7UUFDZixJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBRTtZQUNsRCxPQUFPLEVBQUUsQ0FBQztTQUNiO1FBRUQsT0FBTyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFFLFFBQVEsQ0FDckMsS0FBSyxFQUNMLEdBQUcsQ0FDTixJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFFLFFBQVEsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDO0lBQ3BELENBQUM7SUFFUyxRQUFRLENBQUMsS0FBYTtRQUM1QixJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ1IsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUVuQyxPQUFPO1NBQ1Y7UUFFRCxNQUFNLElBQUksR0FBRyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUM3QixNQUFNLEdBQUcsR0FBRyxNQUFNLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDN0MsTUFBTSxJQUFJLEdBQUcsT0FBTyxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxDQUFDO1FBRS9DLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDdEMsQ0FBQzsrR0ExQlEsMEJBQTBCO21HQUExQiwwQkFBMEI7O1NBQTFCLDBCQUEwQjs0RkFBMUIsMEJBQTBCO2tCQVp0QyxTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSxvQkFBb0I7b0JBQzlCLElBQUksRUFBRTt3QkFDRixJQUFJLEVBQUUsZ0JBQWdCO3dCQUN0QixZQUFZLEVBQUUsSUFBSTt3QkFDbEIsU0FBUyxFQUFFLE9BQU87d0JBQ2xCLGVBQWUsRUFBRSwrQkFBK0I7d0JBQ2hELGNBQWMsRUFBRSwrQkFBK0I7d0JBQy9DLHFCQUFxQixFQUFFLEdBQUc7d0JBQzFCLHlCQUF5QixFQUFFLEdBQUc7cUJBQ2pDO2lCQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEaXJlY3RpdmUsIGluamVjdH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1R1aURheSwgVHVpVGltZX0gZnJvbSAnQHRhaWdhLXVpL2Nkay9kYXRlLXRpbWUnO1xuaW1wb3J0IHtUVUlfVEVYVEZJRUxEX0hPU1R9IGZyb20gJ0B0YWlnYS11aS9sZWdhY3kvdG9rZW5zJztcblxuaW1wb3J0IHR5cGUge1R1aUlucHV0RGF0ZVRpbWVEaXJlY3RpdmV9IGZyb20gJy4uL2lucHV0LWRhdGUtdGltZS5kaXJlY3RpdmUnO1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ2lucHV0W3R1aURhdGVUaW1lXScsXG4gICAgaG9zdDoge1xuICAgICAgICB0eXBlOiAnZGF0ZXRpbWUtbG9jYWwnLFxuICAgICAgICAnW3RhYkluZGV4XSc6ICctMScsXG4gICAgICAgICdbdmFsdWVdJzogJ3ZhbHVlJyxcbiAgICAgICAgJyhjaGFuZ2Uuc3RvcCknOiAnb25DaGFuZ2UoJGV2ZW50LnRhcmdldC52YWx1ZSknLFxuICAgICAgICAnKGlucHV0LnN0b3ApJzogJ29uQ2hhbmdlKCRldmVudC50YXJnZXQudmFsdWUpJyxcbiAgICAgICAgJyhjbGljay5zdG9wLnNpbGVudCknOiAnMCcsXG4gICAgICAgICcobW91c2Vkb3duLnN0b3Auc2lsZW50KSc6ICcwJyxcbiAgICB9LFxufSlcbmV4cG9ydCBjbGFzcyBUdWlOYXRpdmVEYXRlVGltZURpcmVjdGl2ZSB7XG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IGhvc3QgPSBpbmplY3Q8VHVpSW5wdXREYXRlVGltZURpcmVjdGl2ZT4oVFVJX1RFWFRGSUVMRF9IT1NUKTtcblxuICAgIHByb3RlY3RlZCBnZXQgdmFsdWUoKTogc3RyaW5nIHtcbiAgICAgICAgaWYgKCF0aGlzLmhvc3QucmF3VmFsdWVbMF0gfHwgIXRoaXMuaG9zdC5yYXdWYWx1ZVsxXSkge1xuICAgICAgICAgICAgcmV0dXJuICcnO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGAke3RoaXMuaG9zdC5yYXdWYWx1ZVswXT8udG9TdHJpbmcoXG4gICAgICAgICAgICAnWU1EJyxcbiAgICAgICAgICAgICctJyxcbiAgICAgICAgKX1UJHt0aGlzLmhvc3QucmF3VmFsdWVbMV0/LnRvU3RyaW5nKCdISDpNTScpfWA7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uQ2hhbmdlKHZhbHVlOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgaWYgKCF2YWx1ZSkge1xuICAgICAgICAgICAgdGhpcy5ob3N0LndyaXRlVmFsdWUoW251bGwsIG51bGxdKTtcblxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKHZhbHVlKTtcbiAgICAgICAgY29uc3QgZGF5ID0gVHVpRGF5LmZyb21Mb2NhbE5hdGl2ZURhdGUoZGF0ZSk7XG4gICAgICAgIGNvbnN0IHRpbWUgPSBUdWlUaW1lLmZyb21Mb2NhbE5hdGl2ZURhdGUoZGF0ZSk7XG5cbiAgICAgICAgdGhpcy5ob3N0LndyaXRlVmFsdWUoW2RheSwgdGltZV0pO1xuICAgIH1cbn1cbiJdfQ==