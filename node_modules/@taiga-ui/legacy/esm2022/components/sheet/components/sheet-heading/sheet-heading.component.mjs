import { ChangeDetectionStrategy, Component, inject } from '@angular/core';
import { tuiInjectId } from '@taiga-ui/cdk/services';
import { tuiInjectElement } from '@taiga-ui/cdk/utils/dom';
import { TUI_CLOSE_WORD, TUI_COMMON_ICONS } from '@taiga-ui/core/tokens';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/core/components/button";
import * as i2 from "@angular/common";
export const TUI_SHEET_CLOSE = 'tui-sheet-close';
export const TUI_SHEET_ID = 'tui-sheet-id';
class TuiSheetHeadingComponent {
    constructor() {
        this.el = tuiInjectElement();
        this.closeWord$ = inject(TUI_CLOSE_WORD);
        this.icons = inject(TUI_COMMON_ICONS);
        this.autoId = tuiInjectId();
    }
    ngAfterViewInit() {
        this.el.dispatchEvent(new CustomEvent(TUI_SHEET_ID, { bubbles: true, detail: this.autoId }));
    }
    onClick() {
        this.el.dispatchEvent(new CustomEvent(TUI_SHEET_CLOSE, { bubbles: true }));
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiSheetHeadingComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiSheetHeadingComponent, selector: "[tuiSheetHeading]", ngImport: i0, template: "<button\n    appearance=\"icon\"\n    size=\"xs\"\n    tuiIconButton\n    type=\"button\"\n    class=\"t-close\"\n    [iconStart]=\"icons.close\"\n    (click)=\"onClick()\"\n>\n    {{ closeWord$ | async }}\n</button>\n<span [id]=\"autoId\">\n    <ng-content />\n</span>\n", styles: [":host{position:sticky;top:0;z-index:1;min-block-size:2rem;box-sizing:border-box;margin:-1.25rem -1rem 0;padding:1.5rem 1rem 1rem;background:var(--tui-background-elevation-1);border-radius:.75rem .75rem 0 0;font:var(--tui-font-heading-6);box-shadow:inset 0 1px #ffffff40}:host:after{content:\"\";position:absolute;top:100%;left:0;right:0;block-size:1px;background:var(--tui-border-normal);opacity:0}:host :host-context(._stuck):after{opacity:1}.t-close{display:none;float:inline-end;margin-right:-.25rem}:host-context(.t-wrapper_closeable) .t-close{display:block}\n"], dependencies: [{ kind: "directive", type: i1.TuiButton, selector: "a[tuiButton],button[tuiButton],a[tuiIconButton],button[tuiIconButton]", inputs: ["size"] }, { kind: "pipe", type: i2.AsyncPipe, name: "async" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { TuiSheetHeadingComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiSheetHeadingComponent, decorators: [{
            type: Component,
            args: [{ standalone: false, selector: '[tuiSheetHeading]', changeDetection: ChangeDetectionStrategy.OnPush, template: "<button\n    appearance=\"icon\"\n    size=\"xs\"\n    tuiIconButton\n    type=\"button\"\n    class=\"t-close\"\n    [iconStart]=\"icons.close\"\n    (click)=\"onClick()\"\n>\n    {{ closeWord$ | async }}\n</button>\n<span [id]=\"autoId\">\n    <ng-content />\n</span>\n", styles: [":host{position:sticky;top:0;z-index:1;min-block-size:2rem;box-sizing:border-box;margin:-1.25rem -1rem 0;padding:1.5rem 1rem 1rem;background:var(--tui-background-elevation-1);border-radius:.75rem .75rem 0 0;font:var(--tui-font-heading-6);box-shadow:inset 0 1px #ffffff40}:host:after{content:\"\";position:absolute;top:100%;left:0;right:0;block-size:1px;background:var(--tui-border-normal);opacity:0}:host :host-context(._stuck):after{opacity:1}.t-close{display:none;float:inline-end;margin-right:-.25rem}:host-context(.t-wrapper_closeable) .t-close{display:block}\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hlZXQtaGVhZGluZy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9sZWdhY3kvY29tcG9uZW50cy9zaGVldC9jb21wb25lbnRzL3NoZWV0LWhlYWRpbmcvc2hlZXQtaGVhZGluZy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9sZWdhY3kvY29tcG9uZW50cy9zaGVldC9jb21wb25lbnRzL3NoZWV0LWhlYWRpbmcvc2hlZXQtaGVhZGluZy50ZW1wbGF0ZS5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBQyx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3pFLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQUNuRCxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQztBQUN6RCxPQUFPLEVBQUMsY0FBYyxFQUFFLGdCQUFnQixFQUFDLE1BQU0sdUJBQXVCLENBQUM7Ozs7QUFFdkUsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFHLGlCQUFpQixDQUFDO0FBQ2pELE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBRyxjQUFjLENBQUM7QUFFM0MsTUFPYSx3QkFBd0I7SUFQckM7UUFRcUIsT0FBRSxHQUFHLGdCQUFnQixFQUFFLENBQUM7UUFDdEIsZUFBVSxHQUFHLE1BQU0sQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUNwQyxVQUFLLEdBQUcsTUFBTSxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFDakMsV0FBTSxHQUFHLFdBQVcsRUFBRSxDQUFDO0tBVzdDO0lBVFUsZUFBZTtRQUNsQixJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FDakIsSUFBSSxXQUFXLENBQUMsWUFBWSxFQUFFLEVBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBQyxDQUFDLENBQ3RFLENBQUM7SUFDTixDQUFDO0lBRVMsT0FBTztRQUNiLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLElBQUksV0FBVyxDQUFDLGVBQWUsRUFBRSxFQUFDLE9BQU8sRUFBRSxJQUFJLEVBQUMsQ0FBQyxDQUFDLENBQUM7SUFDN0UsQ0FBQzsrR0FkUSx3QkFBd0I7bUdBQXhCLHdCQUF3Qix5RENoQnJDLGlSQWNBOztTREVhLHdCQUF3Qjs0RkFBeEIsd0JBQXdCO2tCQVBwQyxTQUFTO2lDQUNNLEtBQUssWUFDUCxtQkFBbUIsbUJBR1osdUJBQXVCLENBQUMsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHtBZnRlclZpZXdJbml0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7Q2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgaW5qZWN0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7dHVpSW5qZWN0SWR9IGZyb20gJ0B0YWlnYS11aS9jZGsvc2VydmljZXMnO1xuaW1wb3J0IHt0dWlJbmplY3RFbGVtZW50fSBmcm9tICdAdGFpZ2EtdWkvY2RrL3V0aWxzL2RvbSc7XG5pbXBvcnQge1RVSV9DTE9TRV9XT1JELCBUVUlfQ09NTU9OX0lDT05TfSBmcm9tICdAdGFpZ2EtdWkvY29yZS90b2tlbnMnO1xuXG5leHBvcnQgY29uc3QgVFVJX1NIRUVUX0NMT1NFID0gJ3R1aS1zaGVldC1jbG9zZSc7XG5leHBvcnQgY29uc3QgVFVJX1NIRUVUX0lEID0gJ3R1aS1zaGVldC1pZCc7XG5cbkBDb21wb25lbnQoe1xuICAgIHN0YW5kYWxvbmU6IGZhbHNlLFxuICAgIHNlbGVjdG9yOiAnW3R1aVNoZWV0SGVhZGluZ10nLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9zaGVldC1oZWFkaW5nLnRlbXBsYXRlLmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL3NoZWV0LWhlYWRpbmcuc3R5bGUubGVzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlTaGVldEhlYWRpbmdDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcbiAgICBwcml2YXRlIHJlYWRvbmx5IGVsID0gdHVpSW5qZWN0RWxlbWVudCgpO1xuICAgIHByb3RlY3RlZCByZWFkb25seSBjbG9zZVdvcmQkID0gaW5qZWN0KFRVSV9DTE9TRV9XT1JEKTtcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgaWNvbnMgPSBpbmplY3QoVFVJX0NPTU1PTl9JQ09OUyk7XG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IGF1dG9JZCA9IHR1aUluamVjdElkKCk7XG5cbiAgICBwdWJsaWMgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQge1xuICAgICAgICB0aGlzLmVsLmRpc3BhdGNoRXZlbnQoXG4gICAgICAgICAgICBuZXcgQ3VzdG9tRXZlbnQoVFVJX1NIRUVUX0lELCB7YnViYmxlczogdHJ1ZSwgZGV0YWlsOiB0aGlzLmF1dG9JZH0pLFxuICAgICAgICApO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBvbkNsaWNrKCk6IHZvaWQge1xuICAgICAgICB0aGlzLmVsLmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KFRVSV9TSEVFVF9DTE9TRSwge2J1YmJsZXM6IHRydWV9KSk7XG4gICAgfVxufVxuIiwiPGJ1dHRvblxuICAgIGFwcGVhcmFuY2U9XCJpY29uXCJcbiAgICBzaXplPVwieHNcIlxuICAgIHR1aUljb25CdXR0b25cbiAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICBjbGFzcz1cInQtY2xvc2VcIlxuICAgIFtpY29uU3RhcnRdPVwiaWNvbnMuY2xvc2VcIlxuICAgIChjbGljayk9XCJvbkNsaWNrKClcIlxuPlxuICAgIHt7IGNsb3NlV29yZCQgfCBhc3luYyB9fVxuPC9idXR0b24+XG48c3BhbiBbaWRdPVwiYXV0b0lkXCI+XG4gICAgPG5nLWNvbnRlbnQgLz5cbjwvc3Bhbj5cbiJdfQ==