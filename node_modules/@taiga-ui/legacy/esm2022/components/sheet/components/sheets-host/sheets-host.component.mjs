import { ChangeDetectionStrategy, ChangeDetectorRef, Component, DestroyRef, inject, } from '@angular/core';
import { takeUntilDestroyed } from '@angular/core/rxjs-interop';
import { TUI_WINDOW_SIZE } from '@taiga-ui/cdk/tokens';
import { tuiFadeIn, tuiSlideInTop } from '@taiga-ui/core/animations';
import { TUI_ANIMATIONS_SPEED } from '@taiga-ui/core/tokens';
import { tuiToAnimationOptions } from '@taiga-ui/core/utils/miscellaneous';
import { map } from 'rxjs';
import { TuiSheetService } from '../../sheet.service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../sheet/sheet.component";
import * as i3 from "../../directives/sheet-wrapper/sheet-wrapper.directive";
import * as i4 from "../../directives/sheet-close/sheet-close.directive";
class TuiSheetsHostComponent {
    constructor() {
        this.service = inject(TuiSheetService);
        this.destroyRef = inject(DestroyRef);
        this.cdr = inject(ChangeDetectorRef);
        this.height$ = inject(TUI_WINDOW_SIZE).pipe(map(({ height }) => height));
        this.sheets = [];
        this.options = tuiToAnimationOptions(inject(TUI_ANIMATIONS_SPEED));
    }
    ngOnInit() {
        // Due to this view being parallel to app content, `markForCheck` from `async` pipe
        // can happen after view was checked, so calling `detectChanges` instead
        this.service.sheets$
            .pipe(takeUntilDestroyed(this.destroyRef))
            .subscribe((sheets) => {
            this.sheets = sheets;
            this.cdr.detectChanges();
        });
    }
    close({ closeable, $implicit }) {
        if (closeable) {
            $implicit.complete();
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiSheetsHostComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiSheetsHostComponent, selector: "tui-sheets-host", ngImport: i0, template: "<div\n    *ngFor=\"let item of sheets\"\n    #wrapper=\"tuiSheetWrapper\"\n    class=\"t-wrapper\"\n    [@tuiFadeIn]=\"options\"\n    [@tuiSlideInTop]=\"options\"\n    [class.t-wrapper_closeable]=\"item.closeable\"\n    [class.t-wrapper_overlay]=\"item.overlay || (wrapper.overlay$ | async)\"\n    [class.t-wrapper_visible]=\"wrapper.visible$ | async\"\n    [style.height.px]=\"wrapper.height$ | async\"\n    [tuiSheetWrapper]=\"item.offset\"\n    (click.self)=\"close(item)\"\n>\n    <tui-sheet\n        tuiScrollRef\n        [item]=\"item\"\n        [style.height.px]=\"((height$ | async) || 0) - item.offset\"\n        (close)=\"close(item)\"\n    />\n</div>\n<div\n    class=\"t-overlay\"\n    (click)=\"sheets[0] && close(sheets[0])\"\n></div>\n", styles: [":host{position:sticky;bottom:0;display:block;block-size:0}.t-overlay{transition-property:opacity;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:fixed;top:0;left:0;inline-size:100%;z-index:-1;block-size:100%;background:#000;opacity:.001;pointer-events:none}.t-wrapper_overlay~.t-overlay{opacity:.8;pointer-events:auto;touch-action:none}.t-wrapper{position:absolute;bottom:0;z-index:0;inline-size:100%;block-size:100vh;overflow:hidden}.t-wrapper_visible{overflow:visible}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "component", type: i2.TuiSheetComponent, selector: "tui-sheet", inputs: ["item"] }, { kind: "directive", type: i3.TuiSheetWrapperDirective, selector: "[tuiSheetWrapper]", inputs: ["tuiSheetWrapper"], exportAs: ["tuiSheetWrapper"] }, { kind: "directive", type: i4.TuiSheetCloseDirective, selector: "tui-sheet[close]", outputs: ["close"] }, { kind: "pipe", type: i1.AsyncPipe, name: "async" }], animations: [tuiSlideInTop, tuiFadeIn], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { TuiSheetsHostComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiSheetsHostComponent, decorators: [{
            type: Component,
            args: [{ standalone: false, selector: 'tui-sheets-host', changeDetection: ChangeDetectionStrategy.OnPush, animations: [tuiSlideInTop, tuiFadeIn], template: "<div\n    *ngFor=\"let item of sheets\"\n    #wrapper=\"tuiSheetWrapper\"\n    class=\"t-wrapper\"\n    [@tuiFadeIn]=\"options\"\n    [@tuiSlideInTop]=\"options\"\n    [class.t-wrapper_closeable]=\"item.closeable\"\n    [class.t-wrapper_overlay]=\"item.overlay || (wrapper.overlay$ | async)\"\n    [class.t-wrapper_visible]=\"wrapper.visible$ | async\"\n    [style.height.px]=\"wrapper.height$ | async\"\n    [tuiSheetWrapper]=\"item.offset\"\n    (click.self)=\"close(item)\"\n>\n    <tui-sheet\n        tuiScrollRef\n        [item]=\"item\"\n        [style.height.px]=\"((height$ | async) || 0) - item.offset\"\n        (close)=\"close(item)\"\n    />\n</div>\n<div\n    class=\"t-overlay\"\n    (click)=\"sheets[0] && close(sheets[0])\"\n></div>\n", styles: [":host{position:sticky;bottom:0;display:block;block-size:0}.t-overlay{transition-property:opacity;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:fixed;top:0;left:0;inline-size:100%;z-index:-1;block-size:100%;background:#000;opacity:.001;pointer-events:none}.t-wrapper_overlay~.t-overlay{opacity:.8;pointer-events:auto;touch-action:none}.t-wrapper{position:absolute;bottom:0;z-index:0;inline-size:100%;block-size:100vh;overflow:hidden}.t-wrapper_visible{overflow:visible}\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hlZXRzLWhvc3QuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbGVnYWN5L2NvbXBvbmVudHMvc2hlZXQvY29tcG9uZW50cy9zaGVldHMtaG9zdC9zaGVldHMtaG9zdC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9sZWdhY3kvY29tcG9uZW50cy9zaGVldC9jb21wb25lbnRzL3NoZWV0cy1ob3N0L3NoZWV0cy1ob3N0LnRlbXBsYXRlLmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUNILHVCQUF1QixFQUN2QixpQkFBaUIsRUFDakIsU0FBUyxFQUNULFVBQVUsRUFDVixNQUFNLEdBQ1QsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLGtCQUFrQixFQUFDLE1BQU0sNEJBQTRCLENBQUM7QUFDOUQsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBQ3JELE9BQU8sRUFBQyxTQUFTLEVBQUUsYUFBYSxFQUFDLE1BQU0sMkJBQTJCLENBQUM7QUFDbkUsT0FBTyxFQUFDLG9CQUFvQixFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFDM0QsT0FBTyxFQUFDLHFCQUFxQixFQUFDLE1BQU0sb0NBQW9DLENBQUM7QUFDekUsT0FBTyxFQUFDLEdBQUcsRUFBQyxNQUFNLE1BQU0sQ0FBQztBQUd6QixPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0scUJBQXFCLENBQUM7Ozs7OztBQUVwRCxNQVFhLHNCQUFzQjtJQVJuQztRQVNxQixZQUFPLEdBQUcsTUFBTSxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBQ2xDLGVBQVUsR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDaEMsUUFBRyxHQUFHLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBQzlCLFlBQU8sR0FBRyxNQUFNLENBQUMsZUFBZSxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUMsTUFBTSxFQUFDLEVBQUUsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFFM0UsV0FBTSxHQUFpQyxFQUFFLENBQUM7UUFFakMsWUFBTyxHQUFHLHFCQUFxQixDQUFDLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLENBQUM7S0FrQnBGO0lBaEJVLFFBQVE7UUFDWCxtRkFBbUY7UUFDbkYsd0VBQXdFO1FBQ3hFLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTzthQUNmLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7YUFDekMsU0FBUyxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUU7WUFDbEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7WUFDckIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUM3QixDQUFDLENBQUMsQ0FBQztJQUNYLENBQUM7SUFFUyxLQUFLLENBQUMsRUFBQyxTQUFTLEVBQUUsU0FBUyxFQUFvQjtRQUNyRCxJQUFJLFNBQVMsRUFBRTtZQUNYLFNBQVMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztTQUN4QjtJQUNMLENBQUM7K0dBekJRLHNCQUFzQjttR0FBdEIsc0JBQXNCLHVEQzFCbkMsZ3ZCQXdCQSw4akNEQWdCLENBQUMsYUFBYSxFQUFFLFNBQVMsQ0FBQzs7U0FFN0Isc0JBQXNCOzRGQUF0QixzQkFBc0I7a0JBUmxDLFNBQVM7aUNBQ00sS0FBSyxZQUNQLGlCQUFpQixtQkFHVix1QkFBdUIsQ0FBQyxNQUFNLGNBQ25DLENBQUMsYUFBYSxFQUFFLFNBQVMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHtPbkluaXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgICBDaGFuZ2VEZXRlY3RvclJlZixcbiAgICBDb21wb25lbnQsXG4gICAgRGVzdHJveVJlZixcbiAgICBpbmplY3QsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHt0YWtlVW50aWxEZXN0cm95ZWR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUvcnhqcy1pbnRlcm9wJztcbmltcG9ydCB7VFVJX1dJTkRPV19TSVpFfSBmcm9tICdAdGFpZ2EtdWkvY2RrL3Rva2Vucyc7XG5pbXBvcnQge3R1aUZhZGVJbiwgdHVpU2xpZGVJblRvcH0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvYW5pbWF0aW9ucyc7XG5pbXBvcnQge1RVSV9BTklNQVRJT05TX1NQRUVEfSBmcm9tICdAdGFpZ2EtdWkvY29yZS90b2tlbnMnO1xuaW1wb3J0IHt0dWlUb0FuaW1hdGlvbk9wdGlvbnN9IGZyb20gJ0B0YWlnYS11aS9jb3JlL3V0aWxzL21pc2NlbGxhbmVvdXMnO1xuaW1wb3J0IHttYXB9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQgdHlwZSB7VHVpU2hlZXR9IGZyb20gJy4uLy4uL3NoZWV0JztcbmltcG9ydCB7VHVpU2hlZXRTZXJ2aWNlfSBmcm9tICcuLi8uLi9zaGVldC5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gICAgc3RhbmRhbG9uZTogZmFsc2UsXG4gICAgc2VsZWN0b3I6ICd0dWktc2hlZXRzLWhvc3QnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9zaGVldHMtaG9zdC50ZW1wbGF0ZS5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9zaGVldHMtaG9zdC5zdHlsZS5sZXNzJ10sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgYW5pbWF0aW9uczogW3R1aVNsaWRlSW5Ub3AsIHR1aUZhZGVJbl0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aVNoZWV0c0hvc3RDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICAgIHByaXZhdGUgcmVhZG9ubHkgc2VydmljZSA9IGluamVjdChUdWlTaGVldFNlcnZpY2UpO1xuICAgIHByaXZhdGUgcmVhZG9ubHkgZGVzdHJveVJlZiA9IGluamVjdChEZXN0cm95UmVmKTtcbiAgICBwcml2YXRlIHJlYWRvbmx5IGNkciA9IGluamVjdChDaGFuZ2VEZXRlY3RvclJlZik7XG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IGhlaWdodCQgPSBpbmplY3QoVFVJX1dJTkRPV19TSVpFKS5waXBlKG1hcCgoe2hlaWdodH0pID0+IGhlaWdodCkpO1xuXG4gICAgcHJvdGVjdGVkIHNoZWV0czogUmVhZG9ubHlBcnJheTxUdWlTaGVldDxhbnk+PiA9IFtdO1xuXG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IG9wdGlvbnMgPSB0dWlUb0FuaW1hdGlvbk9wdGlvbnMoaW5qZWN0KFRVSV9BTklNQVRJT05TX1NQRUVEKSk7XG5cbiAgICBwdWJsaWMgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgICAgIC8vIER1ZSB0byB0aGlzIHZpZXcgYmVpbmcgcGFyYWxsZWwgdG8gYXBwIGNvbnRlbnQsIGBtYXJrRm9yQ2hlY2tgIGZyb20gYGFzeW5jYCBwaXBlXG4gICAgICAgIC8vIGNhbiBoYXBwZW4gYWZ0ZXIgdmlldyB3YXMgY2hlY2tlZCwgc28gY2FsbGluZyBgZGV0ZWN0Q2hhbmdlc2AgaW5zdGVhZFxuICAgICAgICB0aGlzLnNlcnZpY2Uuc2hlZXRzJFxuICAgICAgICAgICAgLnBpcGUodGFrZVVudGlsRGVzdHJveWVkKHRoaXMuZGVzdHJveVJlZikpXG4gICAgICAgICAgICAuc3Vic2NyaWJlKChzaGVldHMpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLnNoZWV0cyA9IHNoZWV0cztcbiAgICAgICAgICAgICAgICB0aGlzLmNkci5kZXRlY3RDaGFuZ2VzKCk7XG4gICAgICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgY2xvc2Uoe2Nsb3NlYWJsZSwgJGltcGxpY2l0fTogVHVpU2hlZXQ8dW5rbm93bj4pOiB2b2lkIHtcbiAgICAgICAgaWYgKGNsb3NlYWJsZSkge1xuICAgICAgICAgICAgJGltcGxpY2l0LmNvbXBsZXRlKCk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCI8ZGl2XG4gICAgKm5nRm9yPVwibGV0IGl0ZW0gb2Ygc2hlZXRzXCJcbiAgICAjd3JhcHBlcj1cInR1aVNoZWV0V3JhcHBlclwiXG4gICAgY2xhc3M9XCJ0LXdyYXBwZXJcIlxuICAgIFtAdHVpRmFkZUluXT1cIm9wdGlvbnNcIlxuICAgIFtAdHVpU2xpZGVJblRvcF09XCJvcHRpb25zXCJcbiAgICBbY2xhc3MudC13cmFwcGVyX2Nsb3NlYWJsZV09XCJpdGVtLmNsb3NlYWJsZVwiXG4gICAgW2NsYXNzLnQtd3JhcHBlcl9vdmVybGF5XT1cIml0ZW0ub3ZlcmxheSB8fCAod3JhcHBlci5vdmVybGF5JCB8IGFzeW5jKVwiXG4gICAgW2NsYXNzLnQtd3JhcHBlcl92aXNpYmxlXT1cIndyYXBwZXIudmlzaWJsZSQgfCBhc3luY1wiXG4gICAgW3N0eWxlLmhlaWdodC5weF09XCJ3cmFwcGVyLmhlaWdodCQgfCBhc3luY1wiXG4gICAgW3R1aVNoZWV0V3JhcHBlcl09XCJpdGVtLm9mZnNldFwiXG4gICAgKGNsaWNrLnNlbGYpPVwiY2xvc2UoaXRlbSlcIlxuPlxuICAgIDx0dWktc2hlZXRcbiAgICAgICAgdHVpU2Nyb2xsUmVmXG4gICAgICAgIFtpdGVtXT1cIml0ZW1cIlxuICAgICAgICBbc3R5bGUuaGVpZ2h0LnB4XT1cIigoaGVpZ2h0JCB8IGFzeW5jKSB8fCAwKSAtIGl0ZW0ub2Zmc2V0XCJcbiAgICAgICAgKGNsb3NlKT1cImNsb3NlKGl0ZW0pXCJcbiAgICAvPlxuPC9kaXY+XG48ZGl2XG4gICAgY2xhc3M9XCJ0LW92ZXJsYXlcIlxuICAgIChjbGljayk9XCJzaGVldHNbMF0gJiYgY2xvc2Uoc2hlZXRzWzBdKVwiXG4+PC9kaXY+XG4iXX0=