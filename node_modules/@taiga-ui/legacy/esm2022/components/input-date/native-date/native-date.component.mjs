import { Directive, inject } from '@angular/core';
import { DATE_FILLER_LENGTH, TuiDay } from '@taiga-ui/cdk/date-time';
import { TUI_TEXTFIELD_HOST, tuiAsTextfieldHost } from '@taiga-ui/legacy/tokens';
import { TuiInputDateDirective } from '../input-date.directive';
import * as i0 from "@angular/core";
class TuiNativeDateDirective {
    constructor() {
        this.host = inject(TUI_TEXTFIELD_HOST);
    }
    get value() {
        return this.host.value.length === DATE_FILLER_LENGTH
            ? TuiDay.normalizeParse(this.host.value, this.host.format.mode).toString('YMD', '-')
            : '';
    }
    get max() {
        return this.host.max.toJSON();
    }
    get min() {
        return this.host.min.toJSON();
    }
    onChange(value) {
        this.host.onValueChange(value
            ? TuiDay.normalizeParse(value, 'YMD').toString(this.host.format.mode)
            : '');
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiNativeDateDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: TuiNativeDateDirective, selector: "input[tuiDate]", host: { attributes: { "type": "date" }, listeners: { "change": "onChange($event.target.value)", "click.stop.silent": "0", "input.stop.silent": "0", "mousedown.stop.silent": "0" }, properties: { "tabIndex": "-1", "value": "value", "max": "max", "min": "min" } }, providers: [tuiAsTextfieldHost(TuiInputDateDirective)], ngImport: i0 }); }
}
export { TuiNativeDateDirective };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiNativeDateDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'input[tuiDate]',
                    providers: [tuiAsTextfieldHost(TuiInputDateDirective)],
                    host: {
                        type: 'date',
                        '[tabIndex]': '-1',
                        '[value]': 'value',
                        '(change)': 'onChange($event.target.value)',
                        '[max]': 'max',
                        '[min]': 'min',
                        '(click.stop.silent)': '0',
                        '(input.stop.silent)': '0',
                        '(mousedown.stop.silent)': '0',
                    },
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF0aXZlLWRhdGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbGVnYWN5L2NvbXBvbmVudHMvaW5wdXQtZGF0ZS9uYXRpdmUtZGF0ZS9uYXRpdmUtZGF0ZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDaEQsT0FBTyxFQUFDLGtCQUFrQixFQUFFLE1BQU0sRUFBQyxNQUFNLHlCQUF5QixDQUFDO0FBQ25FLE9BQU8sRUFBQyxrQkFBa0IsRUFBRSxrQkFBa0IsRUFBQyxNQUFNLHlCQUF5QixDQUFDO0FBRS9FLE9BQU8sRUFBQyxxQkFBcUIsRUFBQyxNQUFNLHlCQUF5QixDQUFDOztBQUU5RCxNQWVhLHNCQUFzQjtJQWZuQztRQWdCdUIsU0FBSSxHQUFHLE1BQU0sQ0FBd0Isa0JBQWtCLENBQUMsQ0FBQztLQTBCL0U7SUF4QkcsSUFBYyxLQUFLO1FBQ2YsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEtBQUssa0JBQWtCO1lBQ2hELENBQUMsQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLFFBQVEsQ0FDbEUsS0FBSyxFQUNMLEdBQUcsQ0FDTjtZQUNILENBQUMsQ0FBQyxFQUFFLENBQUM7SUFDYixDQUFDO0lBRUQsSUFBYyxHQUFHO1FBQ2IsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUNsQyxDQUFDO0lBRUQsSUFBYyxHQUFHO1FBQ2IsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUNsQyxDQUFDO0lBRVMsUUFBUSxDQUFDLEtBQWE7UUFDNUIsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQ25CLEtBQUs7WUFDRCxDQUFDLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQztZQUNyRSxDQUFDLENBQUMsRUFBRSxDQUNYLENBQUM7SUFDTixDQUFDOytHQTFCUSxzQkFBc0I7bUdBQXRCLHNCQUFzQiwrU0FicEIsQ0FBQyxrQkFBa0IsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDOztTQWE3QyxzQkFBc0I7NEZBQXRCLHNCQUFzQjtrQkFmbEMsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsZ0JBQWdCO29CQUMxQixTQUFTLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO29CQUN0RCxJQUFJLEVBQUU7d0JBQ0YsSUFBSSxFQUFFLE1BQU07d0JBQ1osWUFBWSxFQUFFLElBQUk7d0JBQ2xCLFNBQVMsRUFBRSxPQUFPO3dCQUNsQixVQUFVLEVBQUUsK0JBQStCO3dCQUMzQyxPQUFPLEVBQUUsS0FBSzt3QkFDZCxPQUFPLEVBQUUsS0FBSzt3QkFDZCxxQkFBcUIsRUFBRSxHQUFHO3dCQUMxQixxQkFBcUIsRUFBRSxHQUFHO3dCQUMxQix5QkFBeUIsRUFBRSxHQUFHO3FCQUNqQztpQkFDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RGlyZWN0aXZlLCBpbmplY3R9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtEQVRFX0ZJTExFUl9MRU5HVEgsIFR1aURheX0gZnJvbSAnQHRhaWdhLXVpL2Nkay9kYXRlLXRpbWUnO1xuaW1wb3J0IHtUVUlfVEVYVEZJRUxEX0hPU1QsIHR1aUFzVGV4dGZpZWxkSG9zdH0gZnJvbSAnQHRhaWdhLXVpL2xlZ2FjeS90b2tlbnMnO1xuXG5pbXBvcnQge1R1aUlucHV0RGF0ZURpcmVjdGl2ZX0gZnJvbSAnLi4vaW5wdXQtZGF0ZS5kaXJlY3RpdmUnO1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ2lucHV0W3R1aURhdGVdJyxcbiAgICBwcm92aWRlcnM6IFt0dWlBc1RleHRmaWVsZEhvc3QoVHVpSW5wdXREYXRlRGlyZWN0aXZlKV0sXG4gICAgaG9zdDoge1xuICAgICAgICB0eXBlOiAnZGF0ZScsXG4gICAgICAgICdbdGFiSW5kZXhdJzogJy0xJyxcbiAgICAgICAgJ1t2YWx1ZV0nOiAndmFsdWUnLFxuICAgICAgICAnKGNoYW5nZSknOiAnb25DaGFuZ2UoJGV2ZW50LnRhcmdldC52YWx1ZSknLFxuICAgICAgICAnW21heF0nOiAnbWF4JyxcbiAgICAgICAgJ1ttaW5dJzogJ21pbicsXG4gICAgICAgICcoY2xpY2suc3RvcC5zaWxlbnQpJzogJzAnLFxuICAgICAgICAnKGlucHV0LnN0b3Auc2lsZW50KSc6ICcwJyxcbiAgICAgICAgJyhtb3VzZWRvd24uc3RvcC5zaWxlbnQpJzogJzAnLFxuICAgIH0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aU5hdGl2ZURhdGVEaXJlY3RpdmUge1xuICAgIHByb3RlY3RlZCByZWFkb25seSBob3N0ID0gaW5qZWN0PFR1aUlucHV0RGF0ZURpcmVjdGl2ZT4oVFVJX1RFWFRGSUVMRF9IT1NUKTtcblxuICAgIHByb3RlY3RlZCBnZXQgdmFsdWUoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaG9zdC52YWx1ZS5sZW5ndGggPT09IERBVEVfRklMTEVSX0xFTkdUSFxuICAgICAgICAgICAgPyBUdWlEYXkubm9ybWFsaXplUGFyc2UodGhpcy5ob3N0LnZhbHVlLCB0aGlzLmhvc3QuZm9ybWF0Lm1vZGUpLnRvU3RyaW5nKFxuICAgICAgICAgICAgICAgICAgJ1lNRCcsXG4gICAgICAgICAgICAgICAgICAnLScsXG4gICAgICAgICAgICAgIClcbiAgICAgICAgICAgIDogJyc7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIGdldCBtYXgoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaG9zdC5tYXgudG9KU09OKCk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIGdldCBtaW4oKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaG9zdC5taW4udG9KU09OKCk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uQ2hhbmdlKHZhbHVlOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5ob3N0Lm9uVmFsdWVDaGFuZ2UoXG4gICAgICAgICAgICB2YWx1ZVxuICAgICAgICAgICAgICAgID8gVHVpRGF5Lm5vcm1hbGl6ZVBhcnNlKHZhbHVlLCAnWU1EJykudG9TdHJpbmcodGhpcy5ob3N0LmZvcm1hdC5tb2RlKVxuICAgICAgICAgICAgICAgIDogJycsXG4gICAgICAgICk7XG4gICAgfVxufVxuIl19