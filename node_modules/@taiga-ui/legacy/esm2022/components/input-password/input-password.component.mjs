import { ChangeDetectionStrategy, Component, inject, ViewChild } from '@angular/core';
import { TuiHintOptionsDirective } from '@taiga-ui/core/directives/hint';
import { TUI_PASSWORD_TEXTS } from '@taiga-ui/kit/tokens';
import { AbstractTuiControl, tuiAsControl } from '@taiga-ui/legacy/classes';
import { TuiPrimitiveTextfieldComponent } from '@taiga-ui/legacy/components/primitive-textfield';
import { TUI_TEXTFIELD_SIZE } from '@taiga-ui/legacy/directives';
import { tuiAsFocusableItemAccessor } from '@taiga-ui/legacy/tokens';
import { EMPTY, map, startWith } from 'rxjs';
import { TUI_INPUT_PASSWORD_OPTIONS } from './input-password.options';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/core/directives/hint";
import * as i2 from "@angular/common";
import * as i3 from "@taiga-ui/polymorpheus";
import * as i4 from "@taiga-ui/legacy/components/primitive-textfield";
import * as i5 from "@taiga-ui/legacy/directives";
import * as i6 from "@taiga-ui/core/directives/appearance";
import * as i7 from "@taiga-ui/core/components/icon";
/**
 * @deprecated use {@link TuiInputPassword} instead
 */
class TuiInputPasswordComponent extends AbstractTuiControl {
    constructor() {
        super(...arguments);
        this.textfieldSize = inject(TUI_TEXTFIELD_SIZE);
        this.hintOptions = inject(TuiHintOptionsDirective, { optional: true });
        this.directive$ = this.hintOptions?.change$ || EMPTY;
        this.isPasswordHidden = true;
        this.computedAppearance$ = this.directive$.pipe(startWith(null), map(() => this.hintOptions?.appearance || ''), startWith(''));
        this.passwordTexts$ = inject(TUI_PASSWORD_TEXTS);
        this.options = inject(TUI_INPUT_PASSWORD_OPTIONS);
    }
    get nativeFocusableElement() {
        return this.computedDisabled || !this.textfield
            ? null
            : this.textfield.nativeFocusableElement;
    }
    get focused() {
        return !!this.textfield?.focused;
    }
    get inputType() {
        return this.isPasswordHidden || this.computedDisabled ? 'password' : 'text';
    }
    onValueChange(textValue) {
        this.value = textValue;
    }
    get size() {
        return this.textfieldSize.size;
    }
    get icon() {
        return this.isPasswordHidden ? this.options.icons.show : this.options.icons.hide;
    }
    onFocused(focused) {
        this.updateFocused(focused);
    }
    togglePasswordVisibility() {
        this.isPasswordHidden = !this.isPasswordHidden;
    }
    getFallbackValue() {
        return '';
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiInputPasswordComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiInputPasswordComponent, selector: "tui-input-password", host: { properties: { "attr.data-size": "size" } }, providers: [
            tuiAsFocusableItemAccessor(TuiInputPasswordComponent),
            tuiAsControl(TuiInputPasswordComponent),
        ], viewQueries: [{ propertyName: "textfield", first: true, predicate: TuiPrimitiveTextfieldComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: "<tui-primitive-textfield\n    class=\"t-textfield\"\n    [disabled]=\"computedDisabled\"\n    [focusable]=\"focusable\"\n    [invalid]=\"computedInvalid\"\n    [nativeId]=\"nativeId\"\n    [pseudoActive]=\"pseudoActive\"\n    [pseudoFocus]=\"pseudoFocus\"\n    [pseudoHover]=\"pseudoHover\"\n    [readOnly]=\"readOnly\"\n    [tuiTextfieldIcon]=\"!computedDisabled ? iconContent : ''\"\n    [(value)]=\"value\"\n    (focusedChange)=\"onFocused($event)\"\n>\n    <ng-content />\n    <ng-content\n        ngProjectAs=\"input\"\n        select=\"input\"\n    />\n</tui-primitive-textfield>\n\n<ng-template\n    #iconContent=\"polymorpheus\"\n    [polymorpheus]=\"type\"\n>\n    <ng-container *ngIf=\"passwordTexts$ | async as texts\">\n        <tui-icon\n            *polymorpheusOutlet=\"icon as src; context: {$implicit: size}\"\n            automation-id=\"tui-password__icon\"\n            tuiAppearance=\"icon\"\n            class=\"t-icon\"\n            [class.t-icon_small]=\"size === 's'\"\n            [icon]=\"src.toString()\"\n            [tuiHint]=\"texts[0] && texts[1] && hintContent\"\n            [tuiHintAppearance]=\"(computedAppearance$ | async) || ''\"\n            [tuiHintDirection]=\"hintOptions?.direction || 'bottom-left'\"\n            (click)=\"togglePasswordVisibility()\"\n            (mousedown.silent.prevent)=\"(0)\"\n            (mouseup.silent.prevent)=\"(0)\"\n        />\n\n        <ng-template\n            #hintContent=\"polymorpheus\"\n            polymorpheus\n        >\n            {{ isPasswordHidden ? texts[0] : texts[1] }}\n        </ng-template>\n    </ng-container>\n</ng-template>\n", styles: [":host{display:block;border-radius:var(--tui-radius-m);text-align:start}.t-icon{cursor:pointer;pointer-events:auto}.t-icon_small{border:.25rem solid transparent}.t-textfield{border-radius:inherit;text-align:inherit}\n"], dependencies: [{ kind: "directive", type: i1.TuiHintDirective, selector: "[tuiHint]:not(ng-container):not(ng-template)", inputs: ["tuiHintContext", "tuiHintAppearance", "tuiHint"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i3.PolymorpheusOutlet, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { kind: "directive", type: i3.PolymorpheusTemplate, selector: "ng-template[polymorpheus]", inputs: ["polymorpheus"], exportAs: ["polymorpheus"] }, { kind: "component", type: i4.TuiPrimitiveTextfieldComponent, selector: "tui-primitive-textfield", inputs: ["editable", "iconCleaner", "readOnly", "invalid", "disabled", "value"], outputs: ["valueChange"] }, { kind: "directive", type: i4.TuiPrimitiveTextfieldDirective, selector: "tui-primitive-textfield" }, { kind: "directive", type: i5.TuiTextfieldIconDirective, selector: "[tuiTextfieldIcon]", inputs: ["tuiTextfieldIcon"] }, { kind: "directive", type: i6.TuiAppearance, selector: "[tuiAppearance]", inputs: ["tuiAppearance", "tuiAppearanceState", "tuiAppearanceFocus"] }, { kind: "component", type: i7.TuiIcon, selector: "tui-icon", inputs: ["icon", "background"] }, { kind: "pipe", type: i2.AsyncPipe, name: "async" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { TuiInputPasswordComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiInputPasswordComponent, decorators: [{
            type: Component,
            args: [{ selector: 'tui-input-password', changeDetection: ChangeDetectionStrategy.OnPush, providers: [
                        tuiAsFocusableItemAccessor(TuiInputPasswordComponent),
                        tuiAsControl(TuiInputPasswordComponent),
                    ], host: {
                        '[attr.data-size]': 'size',
                    }, template: "<tui-primitive-textfield\n    class=\"t-textfield\"\n    [disabled]=\"computedDisabled\"\n    [focusable]=\"focusable\"\n    [invalid]=\"computedInvalid\"\n    [nativeId]=\"nativeId\"\n    [pseudoActive]=\"pseudoActive\"\n    [pseudoFocus]=\"pseudoFocus\"\n    [pseudoHover]=\"pseudoHover\"\n    [readOnly]=\"readOnly\"\n    [tuiTextfieldIcon]=\"!computedDisabled ? iconContent : ''\"\n    [(value)]=\"value\"\n    (focusedChange)=\"onFocused($event)\"\n>\n    <ng-content />\n    <ng-content\n        ngProjectAs=\"input\"\n        select=\"input\"\n    />\n</tui-primitive-textfield>\n\n<ng-template\n    #iconContent=\"polymorpheus\"\n    [polymorpheus]=\"type\"\n>\n    <ng-container *ngIf=\"passwordTexts$ | async as texts\">\n        <tui-icon\n            *polymorpheusOutlet=\"icon as src; context: {$implicit: size}\"\n            automation-id=\"tui-password__icon\"\n            tuiAppearance=\"icon\"\n            class=\"t-icon\"\n            [class.t-icon_small]=\"size === 's'\"\n            [icon]=\"src.toString()\"\n            [tuiHint]=\"texts[0] && texts[1] && hintContent\"\n            [tuiHintAppearance]=\"(computedAppearance$ | async) || ''\"\n            [tuiHintDirection]=\"hintOptions?.direction || 'bottom-left'\"\n            (click)=\"togglePasswordVisibility()\"\n            (mousedown.silent.prevent)=\"(0)\"\n            (mouseup.silent.prevent)=\"(0)\"\n        />\n\n        <ng-template\n            #hintContent=\"polymorpheus\"\n            polymorpheus\n        >\n            {{ isPasswordHidden ? texts[0] : texts[1] }}\n        </ng-template>\n    </ng-container>\n</ng-template>\n", styles: [":host{display:block;border-radius:var(--tui-radius-m);text-align:start}.t-icon{cursor:pointer;pointer-events:auto}.t-icon_small{border:.25rem solid transparent}.t-textfield{border-radius:inherit;text-align:inherit}\n"] }]
        }], propDecorators: { textfield: [{
                type: ViewChild,
                args: [TuiPrimitiveTextfieldComponent]
            }] } });
//# sourceMappingURL=data:application/json;base64,