import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, } from '@angular/core';
import { tuiHexToRgb, tuiRgbToHex } from '@taiga-ui/cdk/utils/color';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/forms";
import * as i3 from "@maskito/angular";
import * as i4 from "@taiga-ui/legacy/components/primitive-textfield";
import * as i5 from "@taiga-ui/legacy/directives/textfield-controller";
import * as i6 from "@taiga-ui/legacy/components/input-number";
import * as i7 from "@taiga-ui/legacy/components/select";
import * as i8 from "@taiga-ui/core/directives/dropdown";
import * as i9 from "@taiga-ui/core/components/data-list";
const HEX_MODE_LENGTH = 6;
class TuiColorEditComponent {
    constructor() {
        this.color = [0, 0, 0, 1];
        this.colorChange = new EventEmitter();
        this.hexMask = {
            mask: new RegExp(`^[A-F\\d]{0,${HEX_MODE_LENGTH}}$`, 'gi'),
        };
        this.modes = ['HEX', 'RGB'];
        this.mode = this.modes[0];
    }
    get isHex() {
        return this.mode === this.modes[0];
    }
    get hex() {
        return tuiRgbToHex(this.color[0], this.color[1], this.color[2]).replace('#', '');
    }
    get opacity() {
        return Math.round(this.color[3] * 100);
    }
    onHexChange(hex) {
        if (hex.length !== HEX_MODE_LENGTH) {
            return;
        }
        const rgb = tuiHexToRgb(hex);
        this.updateColor([rgb[0], rgb[1], rgb[2], this.color[3]]);
    }
    onRgbChange(...rgba) {
        this.updateColor(rgba);
    }
    updateColor(color) {
        this.color = color;
        this.colorChange.emit(color);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiColorEditComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiColorEditComponent, selector: "tui-color-edit", inputs: { color: "color" }, outputs: { colorChange: "colorChange" }, ngImport: i0, template: "<tui-select\n    tuiDropdownAlign=\"left\"\n    tuiDropdownLimitWidth=\"min\"\n    tuiTextfieldSize=\"m\"\n    class=\"t-select\"\n    [ngModelOptions]=\"{standalone: true}\"\n    [style.flex]=\"'0 0 auto'\"\n    [tuiTextfieldLabelOutside]=\"true\"\n    [(ngModel)]=\"mode\"\n>\n    <tui-data-list\n        *tuiDataList\n        size=\"s\"\n    >\n        <button\n            *ngFor=\"let item of modes\"\n            tuiOption\n            type=\"button\"\n            [value]=\"item\"\n        >\n            {{ item }}\n        </button>\n    </tui-data-list>\n</tui-select>\n<tui-primitive-textfield\n    *ngIf=\"isHex; else rgb\"\n    tuiTextfieldSize=\"m\"\n    [maskito]=\"hexMask\"\n    [tuiTextfieldLabelOutside]=\"true\"\n    [value]=\"hex\"\n    (valueChange)=\"onHexChange($event)\"\n/>\n<ng-template #rgb>\n    <tui-input-number\n        tuiTextfieldSize=\"m\"\n        class=\"t-rgb\"\n        [max]=\"255\"\n        [min]=\"0\"\n        [ngModel]=\"color[0]\"\n        [ngModelOptions]=\"{standalone: true}\"\n        [tuiTextfieldLabelOutside]=\"true\"\n        (ngModelChange)=\"onRgbChange($event, color[1], color[2], color[3])\"\n    />\n    <tui-input-number\n        tuiTextfieldSize=\"m\"\n        class=\"t-rgb\"\n        [max]=\"255\"\n        [min]=\"0\"\n        [ngModel]=\"color[1]\"\n        [ngModelOptions]=\"{standalone: true}\"\n        [tuiTextfieldLabelOutside]=\"true\"\n        (ngModelChange)=\"onRgbChange(color[0], $event, color[2], color[3])\"\n    />\n    <tui-input-number\n        tuiTextfieldSize=\"m\"\n        class=\"t-rgb\"\n        [max]=\"255\"\n        [min]=\"0\"\n        [ngModel]=\"color[2]\"\n        [ngModelOptions]=\"{standalone: true}\"\n        [tuiTextfieldLabelOutside]=\"true\"\n        (ngModelChange)=\"onRgbChange(color[0], color[1], $event, color[3])\"\n    />\n</ng-template>\n<tui-input-number\n    tuiTextfieldPostfix=\"%\"\n    tuiTextfieldSize=\"m\"\n    class=\"t-opacity\"\n    [max]=\"100\"\n    [min]=\"0\"\n    [ngModel]=\"opacity\"\n    [ngModelOptions]=\"{standalone: true}\"\n    [style.flex]=\"'0 0 auto'\"\n    [tuiTextfieldLabelOutside]=\"true\"\n    (ngModelChange)=\"onRgbChange(color[0], color[1], color[2], $event / 100)\"\n/>\n", styles: [":host{display:flex}.t-select{inline-size:5.875rem}.t-opacity{inline-size:4.275rem}.t-rgb,.t-opacity{text-align:center}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i3.MaskitoDirective, selector: "[maskito]", inputs: ["maskito", "maskitoElement"] }, { kind: "component", type: i4.TuiPrimitiveTextfieldComponent, selector: "tui-primitive-textfield", inputs: ["editable", "iconCleaner", "readOnly", "invalid", "disabled", "value"], outputs: ["valueChange"] }, { kind: "directive", type: i4.TuiPrimitiveTextfieldDirective, selector: "tui-primitive-textfield" }, { kind: "directive", type: i5.TuiTextfieldLabelOutsideDirective, selector: "[tuiTextfieldLabelOutside]", inputs: ["tuiTextfieldLabelOutside"] }, { kind: "directive", type: i5.TuiTextfieldSizeDirective, selector: "[tuiTextfieldSize]", inputs: ["tuiTextfieldSize"] }, { kind: "directive", type: i5.TuiTextfieldPostfixDirective, selector: "[tuiTextfieldPostfix]", inputs: ["tuiTextfieldPostfix"] }, { kind: "component", type: i6.TuiInputNumberComponent, selector: "tui-input-number", inputs: ["min", "max", "step"] }, { kind: "directive", type: i6.TuiInputNumberDirective, selector: "tui-input-number" }, { kind: "component", type: i7.TuiSelectComponent, selector: "tui-select", inputs: ["stringify", "identityMatcher", "valueContent"] }, { kind: "directive", type: i7.TuiSelectDirective, selector: "tui-select" }, { kind: "directive", type: i8.TuiDropdownOptionsDirective, selector: "[tuiDropdownAlign], [tuiDropdownAppearance], [tuiDropdownDirection], [tuiDropdownLimitWidth], [tuiDropdownMinHeight], [tuiDropdownMaxHeight], [tuiDropdownOffset]", inputs: ["tuiDropdownAlign", "tuiDropdownAppearance", "tuiDropdownDirection", "tuiDropdownLimitWidth", "tuiDropdownMinHeight", "tuiDropdownMaxHeight", "tuiDropdownOffset"] }, { kind: "component", type: i9.TuiDataListComponent, selector: "tui-data-list", inputs: ["emptyContent", "size"] }, { kind: "directive", type: i9.TuiDataListDirective, selector: "ng-template[tuiDataList]" }, { kind: "component", type: i9.TuiOption, selector: "button[tuiOption], a[tuiOption], label[tuiOption]", inputs: ["disabled", "value"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { TuiColorEditComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiColorEditComponent, decorators: [{
            type: Component,
            args: [{ standalone: false, selector: 'tui-color-edit', changeDetection: ChangeDetectionStrategy.OnPush, template: "<tui-select\n    tuiDropdownAlign=\"left\"\n    tuiDropdownLimitWidth=\"min\"\n    tuiTextfieldSize=\"m\"\n    class=\"t-select\"\n    [ngModelOptions]=\"{standalone: true}\"\n    [style.flex]=\"'0 0 auto'\"\n    [tuiTextfieldLabelOutside]=\"true\"\n    [(ngModel)]=\"mode\"\n>\n    <tui-data-list\n        *tuiDataList\n        size=\"s\"\n    >\n        <button\n            *ngFor=\"let item of modes\"\n            tuiOption\n            type=\"button\"\n            [value]=\"item\"\n        >\n            {{ item }}\n        </button>\n    </tui-data-list>\n</tui-select>\n<tui-primitive-textfield\n    *ngIf=\"isHex; else rgb\"\n    tuiTextfieldSize=\"m\"\n    [maskito]=\"hexMask\"\n    [tuiTextfieldLabelOutside]=\"true\"\n    [value]=\"hex\"\n    (valueChange)=\"onHexChange($event)\"\n/>\n<ng-template #rgb>\n    <tui-input-number\n        tuiTextfieldSize=\"m\"\n        class=\"t-rgb\"\n        [max]=\"255\"\n        [min]=\"0\"\n        [ngModel]=\"color[0]\"\n        [ngModelOptions]=\"{standalone: true}\"\n        [tuiTextfieldLabelOutside]=\"true\"\n        (ngModelChange)=\"onRgbChange($event, color[1], color[2], color[3])\"\n    />\n    <tui-input-number\n        tuiTextfieldSize=\"m\"\n        class=\"t-rgb\"\n        [max]=\"255\"\n        [min]=\"0\"\n        [ngModel]=\"color[1]\"\n        [ngModelOptions]=\"{standalone: true}\"\n        [tuiTextfieldLabelOutside]=\"true\"\n        (ngModelChange)=\"onRgbChange(color[0], $event, color[2], color[3])\"\n    />\n    <tui-input-number\n        tuiTextfieldSize=\"m\"\n        class=\"t-rgb\"\n        [max]=\"255\"\n        [min]=\"0\"\n        [ngModel]=\"color[2]\"\n        [ngModelOptions]=\"{standalone: true}\"\n        [tuiTextfieldLabelOutside]=\"true\"\n        (ngModelChange)=\"onRgbChange(color[0], color[1], $event, color[3])\"\n    />\n</ng-template>\n<tui-input-number\n    tuiTextfieldPostfix=\"%\"\n    tuiTextfieldSize=\"m\"\n    class=\"t-opacity\"\n    [max]=\"100\"\n    [min]=\"0\"\n    [ngModel]=\"opacity\"\n    [ngModelOptions]=\"{standalone: true}\"\n    [style.flex]=\"'0 0 auto'\"\n    [tuiTextfieldLabelOutside]=\"true\"\n    (ngModelChange)=\"onRgbChange(color[0], color[1], color[2], $event / 100)\"\n/>\n", styles: [":host{display:flex}.t-select{inline-size:5.875rem}.t-opacity{inline-size:4.275rem}.t-rgb,.t-opacity{text-align:center}\n"] }]
        }], propDecorators: { color: [{
                type: Input
            }], colorChange: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sb3ItZWRpdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9sZWdhY3kvY29tcG9uZW50cy9jb2xvci1zZWxlY3Rvci9jb2xvci1lZGl0L2NvbG9yLWVkaXQuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbGVnYWN5L2NvbXBvbmVudHMvY29sb3Itc2VsZWN0b3IvY29sb3ItZWRpdC9jb2xvci1lZGl0LnRlbXBsYXRlLmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNILHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsWUFBWSxFQUNaLEtBQUssRUFDTCxNQUFNLEdBQ1QsTUFBTSxlQUFlLENBQUM7QUFFdkIsT0FBTyxFQUFDLFdBQVcsRUFBRSxXQUFXLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQzs7Ozs7Ozs7Ozs7QUFFbkUsTUFBTSxlQUFlLEdBQUcsQ0FBQyxDQUFDO0FBRTFCLE1BT2EscUJBQXFCO0lBUGxDO1FBU1csVUFBSyxHQUFxQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBRzlDLGdCQUFXLEdBQUcsSUFBSSxZQUFZLEVBQW9DLENBQUM7UUFFbkUsWUFBTyxHQUFtQjtZQUN0QyxJQUFJLEVBQUUsSUFBSSxNQUFNLENBQUMsZUFBZSxlQUFlLElBQUksRUFBRSxJQUFJLENBQUM7U0FDN0QsQ0FBQztRQUVjLFVBQUssR0FBRyxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQztRQUVoQyxTQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztLQWdDL0I7SUE5QkcsSUFBVyxLQUFLO1FBQ1osT0FBTyxJQUFJLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDdkMsQ0FBQztJQUVELElBQVcsR0FBRztRQUNWLE9BQU8sV0FBVyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUNyRixDQUFDO0lBRUQsSUFBVyxPQUFPO1FBQ2QsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUM7SUFDM0MsQ0FBQztJQUVNLFdBQVcsQ0FBQyxHQUFXO1FBQzFCLElBQUksR0FBRyxDQUFDLE1BQU0sS0FBSyxlQUFlLEVBQUU7WUFDaEMsT0FBTztTQUNWO1FBRUQsTUFBTSxHQUFHLEdBQUcsV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRTdCLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUM5RCxDQUFDO0lBRU0sV0FBVyxDQUFDLEdBQUcsSUFBc0M7UUFDeEQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMzQixDQUFDO0lBRU8sV0FBVyxDQUFDLEtBQXVDO1FBQ3ZELElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ25CLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2pDLENBQUM7K0dBNUNRLHFCQUFxQjttR0FBckIscUJBQXFCLDJIQ25CbEMsNHFFQTRFQTs7U0R6RGEscUJBQXFCOzRGQUFyQixxQkFBcUI7a0JBUGpDLFNBQVM7aUNBQ00sS0FBSyxZQUNQLGdCQUFnQixtQkFHVCx1QkFBdUIsQ0FBQyxNQUFNOzhCQUl4QyxLQUFLO3NCQURYLEtBQUs7Z0JBSVUsV0FBVztzQkFEMUIsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gICAgQ29tcG9uZW50LFxuICAgIEV2ZW50RW1pdHRlcixcbiAgICBJbnB1dCxcbiAgICBPdXRwdXQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHR5cGUge01hc2tpdG9PcHRpb25zfSBmcm9tICdAbWFza2l0by9jb3JlJztcbmltcG9ydCB7dHVpSGV4VG9SZ2IsIHR1aVJnYlRvSGV4fSBmcm9tICdAdGFpZ2EtdWkvY2RrL3V0aWxzL2NvbG9yJztcblxuY29uc3QgSEVYX01PREVfTEVOR1RIID0gNjtcblxuQENvbXBvbmVudCh7XG4gICAgc3RhbmRhbG9uZTogZmFsc2UsXG4gICAgc2VsZWN0b3I6ICd0dWktY29sb3ItZWRpdCcsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2NvbG9yLWVkaXQudGVtcGxhdGUuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vY29sb3ItZWRpdC5zdHlsZS5sZXNzJ10sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIFR1aUNvbG9yRWRpdENvbXBvbmVudCB7XG4gICAgQElucHV0KClcbiAgICBwdWJsaWMgY29sb3I6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXJdID0gWzAsIDAsIDAsIDFdO1xuXG4gICAgQE91dHB1dCgpXG4gICAgcHVibGljIHJlYWRvbmx5IGNvbG9yQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxbbnVtYmVyLCBudW1iZXIsIG51bWJlciwgbnVtYmVyXT4oKTtcblxuICAgIHB1YmxpYyByZWFkb25seSBoZXhNYXNrOiBNYXNraXRvT3B0aW9ucyA9IHtcbiAgICAgICAgbWFzazogbmV3IFJlZ0V4cChgXltBLUZcXFxcZF17MCwke0hFWF9NT0RFX0xFTkdUSH19JGAsICdnaScpLFxuICAgIH07XG5cbiAgICBwdWJsaWMgcmVhZG9ubHkgbW9kZXMgPSBbJ0hFWCcsICdSR0InXTtcblxuICAgIHB1YmxpYyBtb2RlID0gdGhpcy5tb2Rlc1swXTtcblxuICAgIHB1YmxpYyBnZXQgaXNIZXgoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLm1vZGUgPT09IHRoaXMubW9kZXNbMF07XG4gICAgfVxuXG4gICAgcHVibGljIGdldCBoZXgoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHR1aVJnYlRvSGV4KHRoaXMuY29sb3JbMF0sIHRoaXMuY29sb3JbMV0sIHRoaXMuY29sb3JbMl0pLnJlcGxhY2UoJyMnLCAnJyk7XG4gICAgfVxuXG4gICAgcHVibGljIGdldCBvcGFjaXR5KCk6IG51bWJlciB7XG4gICAgICAgIHJldHVybiBNYXRoLnJvdW5kKHRoaXMuY29sb3JbM10gKiAxMDApO1xuICAgIH1cblxuICAgIHB1YmxpYyBvbkhleENoYW5nZShoZXg6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICBpZiAoaGV4Lmxlbmd0aCAhPT0gSEVYX01PREVfTEVOR1RIKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCByZ2IgPSB0dWlIZXhUb1JnYihoZXgpO1xuXG4gICAgICAgIHRoaXMudXBkYXRlQ29sb3IoW3JnYlswXSwgcmdiWzFdLCByZ2JbMl0sIHRoaXMuY29sb3JbM11dKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgb25SZ2JDaGFuZ2UoLi4ucmdiYTogW251bWJlciwgbnVtYmVyLCBudW1iZXIsIG51bWJlcl0pOiB2b2lkIHtcbiAgICAgICAgdGhpcy51cGRhdGVDb2xvcihyZ2JhKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHVwZGF0ZUNvbG9yKGNvbG9yOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlciwgbnVtYmVyXSk6IHZvaWQge1xuICAgICAgICB0aGlzLmNvbG9yID0gY29sb3I7XG4gICAgICAgIHRoaXMuY29sb3JDaGFuZ2UuZW1pdChjb2xvcik7XG4gICAgfVxufVxuIiwiPHR1aS1zZWxlY3RcbiAgICB0dWlEcm9wZG93bkFsaWduPVwibGVmdFwiXG4gICAgdHVpRHJvcGRvd25MaW1pdFdpZHRoPVwibWluXCJcbiAgICB0dWlUZXh0ZmllbGRTaXplPVwibVwiXG4gICAgY2xhc3M9XCJ0LXNlbGVjdFwiXG4gICAgW25nTW9kZWxPcHRpb25zXT1cIntzdGFuZGFsb25lOiB0cnVlfVwiXG4gICAgW3N0eWxlLmZsZXhdPVwiJzAgMCBhdXRvJ1wiXG4gICAgW3R1aVRleHRmaWVsZExhYmVsT3V0c2lkZV09XCJ0cnVlXCJcbiAgICBbKG5nTW9kZWwpXT1cIm1vZGVcIlxuPlxuICAgIDx0dWktZGF0YS1saXN0XG4gICAgICAgICp0dWlEYXRhTGlzdFxuICAgICAgICBzaXplPVwic1wiXG4gICAgPlxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAqbmdGb3I9XCJsZXQgaXRlbSBvZiBtb2Rlc1wiXG4gICAgICAgICAgICB0dWlPcHRpb25cbiAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgW3ZhbHVlXT1cIml0ZW1cIlxuICAgICAgICA+XG4gICAgICAgICAgICB7eyBpdGVtIH19XG4gICAgICAgIDwvYnV0dG9uPlxuICAgIDwvdHVpLWRhdGEtbGlzdD5cbjwvdHVpLXNlbGVjdD5cbjx0dWktcHJpbWl0aXZlLXRleHRmaWVsZFxuICAgICpuZ0lmPVwiaXNIZXg7IGVsc2UgcmdiXCJcbiAgICB0dWlUZXh0ZmllbGRTaXplPVwibVwiXG4gICAgW21hc2tpdG9dPVwiaGV4TWFza1wiXG4gICAgW3R1aVRleHRmaWVsZExhYmVsT3V0c2lkZV09XCJ0cnVlXCJcbiAgICBbdmFsdWVdPVwiaGV4XCJcbiAgICAodmFsdWVDaGFuZ2UpPVwib25IZXhDaGFuZ2UoJGV2ZW50KVwiXG4vPlxuPG5nLXRlbXBsYXRlICNyZ2I+XG4gICAgPHR1aS1pbnB1dC1udW1iZXJcbiAgICAgICAgdHVpVGV4dGZpZWxkU2l6ZT1cIm1cIlxuICAgICAgICBjbGFzcz1cInQtcmdiXCJcbiAgICAgICAgW21heF09XCIyNTVcIlxuICAgICAgICBbbWluXT1cIjBcIlxuICAgICAgICBbbmdNb2RlbF09XCJjb2xvclswXVwiXG4gICAgICAgIFtuZ01vZGVsT3B0aW9uc109XCJ7c3RhbmRhbG9uZTogdHJ1ZX1cIlxuICAgICAgICBbdHVpVGV4dGZpZWxkTGFiZWxPdXRzaWRlXT1cInRydWVcIlxuICAgICAgICAobmdNb2RlbENoYW5nZSk9XCJvblJnYkNoYW5nZSgkZXZlbnQsIGNvbG9yWzFdLCBjb2xvclsyXSwgY29sb3JbM10pXCJcbiAgICAvPlxuICAgIDx0dWktaW5wdXQtbnVtYmVyXG4gICAgICAgIHR1aVRleHRmaWVsZFNpemU9XCJtXCJcbiAgICAgICAgY2xhc3M9XCJ0LXJnYlwiXG4gICAgICAgIFttYXhdPVwiMjU1XCJcbiAgICAgICAgW21pbl09XCIwXCJcbiAgICAgICAgW25nTW9kZWxdPVwiY29sb3JbMV1cIlxuICAgICAgICBbbmdNb2RlbE9wdGlvbnNdPVwie3N0YW5kYWxvbmU6IHRydWV9XCJcbiAgICAgICAgW3R1aVRleHRmaWVsZExhYmVsT3V0c2lkZV09XCJ0cnVlXCJcbiAgICAgICAgKG5nTW9kZWxDaGFuZ2UpPVwib25SZ2JDaGFuZ2UoY29sb3JbMF0sICRldmVudCwgY29sb3JbMl0sIGNvbG9yWzNdKVwiXG4gICAgLz5cbiAgICA8dHVpLWlucHV0LW51bWJlclxuICAgICAgICB0dWlUZXh0ZmllbGRTaXplPVwibVwiXG4gICAgICAgIGNsYXNzPVwidC1yZ2JcIlxuICAgICAgICBbbWF4XT1cIjI1NVwiXG4gICAgICAgIFttaW5dPVwiMFwiXG4gICAgICAgIFtuZ01vZGVsXT1cImNvbG9yWzJdXCJcbiAgICAgICAgW25nTW9kZWxPcHRpb25zXT1cIntzdGFuZGFsb25lOiB0cnVlfVwiXG4gICAgICAgIFt0dWlUZXh0ZmllbGRMYWJlbE91dHNpZGVdPVwidHJ1ZVwiXG4gICAgICAgIChuZ01vZGVsQ2hhbmdlKT1cIm9uUmdiQ2hhbmdlKGNvbG9yWzBdLCBjb2xvclsxXSwgJGV2ZW50LCBjb2xvclszXSlcIlxuICAgIC8+XG48L25nLXRlbXBsYXRlPlxuPHR1aS1pbnB1dC1udW1iZXJcbiAgICB0dWlUZXh0ZmllbGRQb3N0Zml4PVwiJVwiXG4gICAgdHVpVGV4dGZpZWxkU2l6ZT1cIm1cIlxuICAgIGNsYXNzPVwidC1vcGFjaXR5XCJcbiAgICBbbWF4XT1cIjEwMFwiXG4gICAgW21pbl09XCIwXCJcbiAgICBbbmdNb2RlbF09XCJvcGFjaXR5XCJcbiAgICBbbmdNb2RlbE9wdGlvbnNdPVwie3N0YW5kYWxvbmU6IHRydWV9XCJcbiAgICBbc3R5bGUuZmxleF09XCInMCAwIGF1dG8nXCJcbiAgICBbdHVpVGV4dGZpZWxkTGFiZWxPdXRzaWRlXT1cInRydWVcIlxuICAgIChuZ01vZGVsQ2hhbmdlKT1cIm9uUmdiQ2hhbmdlKGNvbG9yWzBdLCBjb2xvclsxXSwgY29sb3JbMl0sICRldmVudCAvIDEwMClcIlxuLz5cbiJdfQ==