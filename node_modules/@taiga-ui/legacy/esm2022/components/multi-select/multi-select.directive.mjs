import { Directive } from '@angular/core';
import { AbstractTuiTextfieldHost } from '@taiga-ui/legacy/classes';
import { tuiAsTextfieldHost } from '@taiga-ui/legacy/tokens';
import * as i0 from "@angular/core";
class TuiMultiSelectDirective extends AbstractTuiTextfieldHost {
    constructor() {
        super(...arguments);
        this.disableItemHandler = (item) => this.host.disabledItemHandler(item);
    }
    get readOnly() {
        return true;
    }
    get stringify() {
        return this.host.stringify;
    }
    onValueChange() { }
    onSelectionChange(value) {
        this.host.onValueChange(value);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiMultiSelectDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: TuiMultiSelectDirective, selector: "tui-multi-select", providers: [tuiAsTextfieldHost(TuiMultiSelectDirective)], usesInheritance: true, ngImport: i0 }); }
}
export { TuiMultiSelectDirective };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiMultiSelectDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'tui-multi-select',
                    providers: [tuiAsTextfieldHost(TuiMultiSelectDirective)],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGktc2VsZWN0LmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2xlZ2FjeS9jb21wb25lbnRzL211bHRpLXNlbGVjdC9tdWx0aS1zZWxlY3QuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFHeEMsT0FBTyxFQUFDLHdCQUF3QixFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDbEUsT0FBTyxFQUFDLGtCQUFrQixFQUFDLE1BQU0seUJBQXlCLENBQUM7O0FBSTNELE1BSWEsdUJBQW9DLFNBQVEsd0JBRXhEO0lBTkQ7O1FBZVcsdUJBQWtCLEdBQXlCLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FDdkQsSUFBSSxDQUFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsQ0FBQztLQU8zQztJQWhCRyxJQUFvQixRQUFRO1FBQ3hCLE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFFRCxJQUFXLFNBQVM7UUFDaEIsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUMvQixDQUFDO0lBS00sYUFBYSxLQUFVLENBQUM7SUFFeEIsaUJBQWlCLENBQUMsS0FBVTtRQUMvQixJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNuQyxDQUFDOytHQWxCUSx1QkFBdUI7bUdBQXZCLHVCQUF1QiwyQ0FGckIsQ0FBQyxrQkFBa0IsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDOztTQUUvQyx1QkFBdUI7NEZBQXZCLHVCQUF1QjtrQkFKbkMsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsa0JBQWtCO29CQUM1QixTQUFTLEVBQUUsQ0FBQyxrQkFBa0IseUJBQXlCLENBQUM7aUJBQzNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEaXJlY3RpdmV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHR5cGUge1R1aUJvb2xlYW5IYW5kbGVyfSBmcm9tICdAdGFpZ2EtdWkvY2RrL3R5cGVzJztcbmltcG9ydCB0eXBlIHtUdWlJdGVtc0hhbmRsZXJzfSBmcm9tICdAdGFpZ2EtdWkva2l0L3Rva2Vucyc7XG5pbXBvcnQge0Fic3RyYWN0VHVpVGV4dGZpZWxkSG9zdH0gZnJvbSAnQHRhaWdhLXVpL2xlZ2FjeS9jbGFzc2VzJztcbmltcG9ydCB7dHVpQXNUZXh0ZmllbGRIb3N0fSBmcm9tICdAdGFpZ2EtdWkvbGVnYWN5L3Rva2Vucyc7XG5cbmltcG9ydCB0eXBlIHtUdWlNdWx0aVNlbGVjdENvbXBvbmVudH0gZnJvbSAnLi9tdWx0aS1zZWxlY3QuY29tcG9uZW50JztcblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICd0dWktbXVsdGktc2VsZWN0JyxcbiAgICBwcm92aWRlcnM6IFt0dWlBc1RleHRmaWVsZEhvc3QoVHVpTXVsdGlTZWxlY3REaXJlY3RpdmUpXSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpTXVsdGlTZWxlY3REaXJlY3RpdmU8VCA9IHN0cmluZz4gZXh0ZW5kcyBBYnN0cmFjdFR1aVRleHRmaWVsZEhvc3Q8XG4gICAgVHVpTXVsdGlTZWxlY3RDb21wb25lbnQ8VD5cbj4ge1xuICAgIHB1YmxpYyBvdmVycmlkZSBnZXQgcmVhZE9ubHkoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgc3RyaW5naWZ5KCk6IFR1aUl0ZW1zSGFuZGxlcnM8VD5bJ3N0cmluZ2lmeSddIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaG9zdC5zdHJpbmdpZnk7XG4gICAgfVxuXG4gICAgcHVibGljIGRpc2FibGVJdGVtSGFuZGxlcjogVHVpQm9vbGVhbkhhbmRsZXI8VD4gPSAoaXRlbSkgPT5cbiAgICAgICAgdGhpcy5ob3N0LmRpc2FibGVkSXRlbUhhbmRsZXIoaXRlbSk7XG5cbiAgICBwdWJsaWMgb25WYWx1ZUNoYW5nZSgpOiB2b2lkIHt9XG5cbiAgICBwdWJsaWMgb25TZWxlY3Rpb25DaGFuZ2UodmFsdWU6IFRbXSk6IHZvaWQge1xuICAgICAgICB0aGlzLmhvc3Qub25WYWx1ZUNoYW5nZSh2YWx1ZSk7XG4gICAgfVxufVxuIl19