import { Directive, forwardRef, Optional } from '@angular/core';
import { NG_VALUE_ACCESSOR, NgControl } from '@angular/forms';
import { EMPTY_FUNCTION } from '@taiga-ui/cdk/constants';
import { tuiArrayToggle } from '@taiga-ui/cdk/utils/miscellaneous';
import { TUI_DATA_LIST_HOST, tuiAsOptionContent, } from '@taiga-ui/core/components/data-list';
import { TuiMultiSelectOptionComponent } from '@taiga-ui/legacy/components/multi-select-option';
import { PolymorpheusComponent } from '@taiga-ui/polymorpheus';
import { TuiMultiSelectComponent } from '../multi-select.component';
import * as i0 from "@angular/core";
export const TUI_MULTI_SELECT_OPTION = new PolymorpheusComponent(TuiMultiSelectOptionComponent);
class TuiMultiSelectGroupDirective {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiMultiSelectGroupDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: TuiMultiSelectGroupDirective, selector: "[tuiMultiSelectGroup]", providers: [
            tuiAsOptionContent(TUI_MULTI_SELECT_OPTION),
            {
                provide: TUI_DATA_LIST_HOST,
                deps: [
                    NgControl,
                    [new Optional(), forwardRef(() => TuiMultiSelectComponent)],
                ],
                useFactory: (control, host) => host || {
                    handleOption: (option) => control.control?.setValue(tuiArrayToggle(control.value || [], option)),
                },
            },
            {
                provide: NG_VALUE_ACCESSOR,
                multi: true,
                useValue: {
                    writeValue: EMPTY_FUNCTION,
                    registerOnChange: EMPTY_FUNCTION,
                    registerOnTouched: EMPTY_FUNCTION,
                },
            },
        ], ngImport: i0 }); }
}
export { TuiMultiSelectGroupDirective };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiMultiSelectGroupDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiMultiSelectGroup]',
                    providers: [
                        tuiAsOptionContent(TUI_MULTI_SELECT_OPTION),
                        {
                            provide: TUI_DATA_LIST_HOST,
                            deps: [
                                NgControl,
                                [new Optional(), forwardRef(() => TuiMultiSelectComponent)],
                            ],
                            useFactory: (control, host) => host || {
                                handleOption: (option) => control.control?.setValue(tuiArrayToggle(control.value || [], option)),
                            },
                        },
                        {
                            provide: NG_VALUE_ACCESSOR,
                            multi: true,
                            useValue: {
                                writeValue: EMPTY_FUNCTION,
                                registerOnChange: EMPTY_FUNCTION,
                                registerOnTouched: EMPTY_FUNCTION,
                            },
                        },
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGktc2VsZWN0LWdyb3VwLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2xlZ2FjeS9jb21wb25lbnRzL211bHRpLXNlbGVjdC9tdWx0aS1zZWxlY3QtZ3JvdXAvbXVsdGktc2VsZWN0LWdyb3VwLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFDLGlCQUFpQixFQUFFLFNBQVMsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQzVELE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQztBQUN2RCxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sbUNBQW1DLENBQUM7QUFFakUsT0FBTyxFQUNILGtCQUFrQixFQUNsQixrQkFBa0IsR0FDckIsTUFBTSxxQ0FBcUMsQ0FBQztBQUM3QyxPQUFPLEVBQUMsNkJBQTZCLEVBQUMsTUFBTSxpREFBaUQsQ0FBQztBQUM5RixPQUFPLEVBQUMscUJBQXFCLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQUU3RCxPQUFPLEVBQUMsdUJBQXVCLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQzs7QUFFbEUsTUFBTSxDQUFDLE1BQU0sdUJBQXVCLEdBQUcsSUFBSSxxQkFBcUIsQ0FDNUQsNkJBQTZCLENBQ2hDLENBQUM7QUFFRixNQWdDYSw0QkFBNEI7K0dBQTVCLDRCQUE0QjttR0FBNUIsNEJBQTRCLGdEQTlCMUI7WUFDUCxrQkFBa0IsQ0FBQyx1QkFBdUIsQ0FBQztZQUMzQztnQkFDSSxPQUFPLEVBQUUsa0JBQWtCO2dCQUMzQixJQUFJLEVBQUU7b0JBQ0YsU0FBUztvQkFDVCxDQUFDLElBQUksUUFBUSxFQUFFLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLENBQUM7aUJBQzlEO2dCQUNELFVBQVUsRUFBRSxDQUNSLE9BQWtCLEVBQ2xCLElBQStCLEVBQ2IsRUFBRSxDQUNwQixJQUFJLElBQUk7b0JBQ0osWUFBWSxFQUFFLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FDckIsT0FBTyxDQUFDLE9BQU8sRUFBRSxRQUFRLENBQ3JCLGNBQWMsQ0FBQyxPQUFPLENBQUMsS0FBSyxJQUFJLEVBQUUsRUFBRSxNQUFNLENBQUMsQ0FDOUM7aUJBQ1I7YUFDUjtZQUNEO2dCQUNJLE9BQU8sRUFBRSxpQkFBaUI7Z0JBQzFCLEtBQUssRUFBRSxJQUFJO2dCQUNYLFFBQVEsRUFBRTtvQkFDTixVQUFVLEVBQUUsY0FBYztvQkFDMUIsZ0JBQWdCLEVBQUUsY0FBYztvQkFDaEMsaUJBQWlCLEVBQUUsY0FBYztpQkFDcEM7YUFDSjtTQUNKOztTQUVRLDRCQUE0Qjs0RkFBNUIsNEJBQTRCO2tCQWhDeEMsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsdUJBQXVCO29CQUNqQyxTQUFTLEVBQUU7d0JBQ1Asa0JBQWtCLENBQUMsdUJBQXVCLENBQUM7d0JBQzNDOzRCQUNJLE9BQU8sRUFBRSxrQkFBa0I7NEJBQzNCLElBQUksRUFBRTtnQ0FDRixTQUFTO2dDQUNULENBQUMsSUFBSSxRQUFRLEVBQUUsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsdUJBQXVCLENBQUMsQ0FBQzs2QkFDOUQ7NEJBQ0QsVUFBVSxFQUFFLENBQ1IsT0FBa0IsRUFDbEIsSUFBK0IsRUFDYixFQUFFLENBQ3BCLElBQUksSUFBSTtnQ0FDSixZQUFZLEVBQUUsQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUNyQixPQUFPLENBQUMsT0FBTyxFQUFFLFFBQVEsQ0FDckIsY0FBYyxDQUFDLE9BQU8sQ0FBQyxLQUFLLElBQUksRUFBRSxFQUFFLE1BQU0sQ0FBQyxDQUM5Qzs2QkFDUjt5QkFDUjt3QkFDRDs0QkFDSSxPQUFPLEVBQUUsaUJBQWlCOzRCQUMxQixLQUFLLEVBQUUsSUFBSTs0QkFDWCxRQUFRLEVBQUU7Z0NBQ04sVUFBVSxFQUFFLGNBQWM7Z0NBQzFCLGdCQUFnQixFQUFFLGNBQWM7Z0NBQ2hDLGlCQUFpQixFQUFFLGNBQWM7NkJBQ3BDO3lCQUNKO3FCQUNKO2lCQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEaXJlY3RpdmUsIGZvcndhcmRSZWYsIE9wdGlvbmFsfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7TkdfVkFMVUVfQUNDRVNTT1IsIE5nQ29udHJvbH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHtFTVBUWV9GVU5DVElPTn0gZnJvbSAnQHRhaWdhLXVpL2Nkay9jb25zdGFudHMnO1xuaW1wb3J0IHt0dWlBcnJheVRvZ2dsZX0gZnJvbSAnQHRhaWdhLXVpL2Nkay91dGlscy9taXNjZWxsYW5lb3VzJztcbmltcG9ydCB0eXBlIHtUdWlEYXRhTGlzdEhvc3R9IGZyb20gJ0B0YWlnYS11aS9jb3JlL2NvbXBvbmVudHMvZGF0YS1saXN0JztcbmltcG9ydCB7XG4gICAgVFVJX0RBVEFfTElTVF9IT1NULFxuICAgIHR1aUFzT3B0aW9uQ29udGVudCxcbn0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvY29tcG9uZW50cy9kYXRhLWxpc3QnO1xuaW1wb3J0IHtUdWlNdWx0aVNlbGVjdE9wdGlvbkNvbXBvbmVudH0gZnJvbSAnQHRhaWdhLXVpL2xlZ2FjeS9jb21wb25lbnRzL211bHRpLXNlbGVjdC1vcHRpb24nO1xuaW1wb3J0IHtQb2x5bW9ycGhldXNDb21wb25lbnR9IGZyb20gJ0B0YWlnYS11aS9wb2x5bW9ycGhldXMnO1xuXG5pbXBvcnQge1R1aU11bHRpU2VsZWN0Q29tcG9uZW50fSBmcm9tICcuLi9tdWx0aS1zZWxlY3QuY29tcG9uZW50JztcblxuZXhwb3J0IGNvbnN0IFRVSV9NVUxUSV9TRUxFQ1RfT1BUSU9OID0gbmV3IFBvbHltb3JwaGV1c0NvbXBvbmVudChcbiAgICBUdWlNdWx0aVNlbGVjdE9wdGlvbkNvbXBvbmVudCxcbik7XG5cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAnW3R1aU11bHRpU2VsZWN0R3JvdXBdJyxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgdHVpQXNPcHRpb25Db250ZW50KFRVSV9NVUxUSV9TRUxFQ1RfT1BUSU9OKSxcbiAgICAgICAge1xuICAgICAgICAgICAgcHJvdmlkZTogVFVJX0RBVEFfTElTVF9IT1NULFxuICAgICAgICAgICAgZGVwczogW1xuICAgICAgICAgICAgICAgIE5nQ29udHJvbCxcbiAgICAgICAgICAgICAgICBbbmV3IE9wdGlvbmFsKCksIGZvcndhcmRSZWYoKCkgPT4gVHVpTXVsdGlTZWxlY3RDb21wb25lbnQpXSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICB1c2VGYWN0b3J5OiA8VD4oXG4gICAgICAgICAgICAgICAgY29udHJvbDogTmdDb250cm9sLFxuICAgICAgICAgICAgICAgIGhvc3Q6IFR1aURhdGFMaXN0SG9zdDxUPiB8IG51bGwsXG4gICAgICAgICAgICApOiBUdWlEYXRhTGlzdEhvc3Q8VD4gPT5cbiAgICAgICAgICAgICAgICBob3N0IHx8IHtcbiAgICAgICAgICAgICAgICAgICAgaGFuZGxlT3B0aW9uOiAob3B0aW9uKSA9PlxuICAgICAgICAgICAgICAgICAgICAgICAgY29udHJvbC5jb250cm9sPy5zZXRWYWx1ZShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0dWlBcnJheVRvZ2dsZShjb250cm9sLnZhbHVlIHx8IFtdLCBvcHRpb24pLFxuICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBwcm92aWRlOiBOR19WQUxVRV9BQ0NFU1NPUixcbiAgICAgICAgICAgIG11bHRpOiB0cnVlLFxuICAgICAgICAgICAgdXNlVmFsdWU6IHtcbiAgICAgICAgICAgICAgICB3cml0ZVZhbHVlOiBFTVBUWV9GVU5DVElPTixcbiAgICAgICAgICAgICAgICByZWdpc3Rlck9uQ2hhbmdlOiBFTVBUWV9GVU5DVElPTixcbiAgICAgICAgICAgICAgICByZWdpc3Rlck9uVG91Y2hlZDogRU1QVFlfRlVOQ1RJT04sXG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgIF0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aU11bHRpU2VsZWN0R3JvdXBEaXJlY3RpdmUge31cbiJdfQ==