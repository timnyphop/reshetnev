import { Directive, forwardRef, Optional } from '@angular/core';
import { NG_VALUE_ACCESSOR, NgControl } from '@angular/forms';
import { EMPTY_FUNCTION } from '@taiga-ui/cdk/constants';
import { tuiArrayToggle } from '@taiga-ui/cdk/utils/miscellaneous';
import { TUI_DATA_LIST_HOST, tuiAsOptionContent, } from '@taiga-ui/core/components/data-list';
import { TuiMultiSelectOptionComponent } from '@taiga-ui/legacy/components/multi-select-option';
import { PolymorpheusComponent } from '@taiga-ui/polymorpheus';
import { TuiMultiSelectComponent } from '../multi-select.component';
import * as i0 from "@angular/core";
export const TUI_MULTI_SELECT_OPTION = new PolymorpheusComponent(TuiMultiSelectOptionComponent);
class TuiMultiSelectGroupDirective {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiMultiSelectGroupDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: TuiMultiSelectGroupDirective, selector: "[tuiMultiSelectGroup]", providers: [
            tuiAsOptionContent(TUI_MULTI_SELECT_OPTION),
            {
                provide: TUI_DATA_LIST_HOST,
                deps: [
                    NgControl,
                    [new Optional(), forwardRef(() => TuiMultiSelectComponent)],
                ],
                useFactory: (control, host) => host || {
                    handleOption: (option) => control.control?.setValue(tuiArrayToggle(control.value || [], option)),
                },
            },
            {
                provide: NG_VALUE_ACCESSOR,
                multi: true,
                useValue: {
                    writeValue: EMPTY_FUNCTION,
                    registerOnChange: EMPTY_FUNCTION,
                    registerOnTouched: EMPTY_FUNCTION,
                },
            },
        ], ngImport: i0 }); }
}
export { TuiMultiSelectGroupDirective };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiMultiSelectGroupDirective, decorators: [{
            type: Directive,
            args: [{
                    standalone: false,
                    selector: '[tuiMultiSelectGroup]',
                    providers: [
                        tuiAsOptionContent(TUI_MULTI_SELECT_OPTION),
                        {
                            provide: TUI_DATA_LIST_HOST,
                            deps: [
                                NgControl,
                                [new Optional(), forwardRef(() => TuiMultiSelectComponent)],
                            ],
                            useFactory: (control, host) => host || {
                                handleOption: (option) => control.control?.setValue(tuiArrayToggle(control.value || [], option)),
                            },
                        },
                        {
                            provide: NG_VALUE_ACCESSOR,
                            multi: true,
                            useValue: {
                                writeValue: EMPTY_FUNCTION,
                                registerOnChange: EMPTY_FUNCTION,
                                registerOnTouched: EMPTY_FUNCTION,
                            },
                        },
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGktc2VsZWN0LWdyb3VwLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2xlZ2FjeS9jb21wb25lbnRzL211bHRpLXNlbGVjdC9tdWx0aS1zZWxlY3QtZ3JvdXAvbXVsdGktc2VsZWN0LWdyb3VwLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFDLGlCQUFpQixFQUFFLFNBQVMsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQzVELE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQztBQUN2RCxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sbUNBQW1DLENBQUM7QUFFakUsT0FBTyxFQUNILGtCQUFrQixFQUNsQixrQkFBa0IsR0FDckIsTUFBTSxxQ0FBcUMsQ0FBQztBQUM3QyxPQUFPLEVBQUMsNkJBQTZCLEVBQUMsTUFBTSxpREFBaUQsQ0FBQztBQUM5RixPQUFPLEVBQUMscUJBQXFCLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQUU3RCxPQUFPLEVBQUMsdUJBQXVCLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQzs7QUFFbEUsTUFBTSxDQUFDLE1BQU0sdUJBQXVCLEdBQUcsSUFBSSxxQkFBcUIsQ0FDNUQsNkJBQTZCLENBQ2hDLENBQUM7QUFFRixNQWlDYSw0QkFBNEI7K0dBQTVCLDRCQUE0QjttR0FBNUIsNEJBQTRCLGdEQTlCMUI7WUFDUCxrQkFBa0IsQ0FBQyx1QkFBdUIsQ0FBQztZQUMzQztnQkFDSSxPQUFPLEVBQUUsa0JBQWtCO2dCQUMzQixJQUFJLEVBQUU7b0JBQ0YsU0FBUztvQkFDVCxDQUFDLElBQUksUUFBUSxFQUFFLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLENBQUM7aUJBQzlEO2dCQUNELFVBQVUsRUFBRSxDQUNSLE9BQWtCLEVBQ2xCLElBQStCLEVBQ2IsRUFBRSxDQUNwQixJQUFJLElBQUk7b0JBQ0osWUFBWSxFQUFFLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FDckIsT0FBTyxDQUFDLE9BQU8sRUFBRSxRQUFRLENBQ3JCLGNBQWMsQ0FBQyxPQUFPLENBQUMsS0FBSyxJQUFJLEVBQUUsRUFBRSxNQUFNLENBQUMsQ0FDOUM7aUJBQ1I7YUFDUjtZQUNEO2dCQUNJLE9BQU8sRUFBRSxpQkFBaUI7Z0JBQzFCLEtBQUssRUFBRSxJQUFJO2dCQUNYLFFBQVEsRUFBRTtvQkFDTixVQUFVLEVBQUUsY0FBYztvQkFDMUIsZ0JBQWdCLEVBQUUsY0FBYztvQkFDaEMsaUJBQWlCLEVBQUUsY0FBYztpQkFDcEM7YUFDSjtTQUNKOztTQUVRLDRCQUE0Qjs0RkFBNUIsNEJBQTRCO2tCQWpDeEMsU0FBUzttQkFBQztvQkFDUCxVQUFVLEVBQUUsS0FBSztvQkFDakIsUUFBUSxFQUFFLHVCQUF1QjtvQkFDakMsU0FBUyxFQUFFO3dCQUNQLGtCQUFrQixDQUFDLHVCQUF1QixDQUFDO3dCQUMzQzs0QkFDSSxPQUFPLEVBQUUsa0JBQWtCOzRCQUMzQixJQUFJLEVBQUU7Z0NBQ0YsU0FBUztnQ0FDVCxDQUFDLElBQUksUUFBUSxFQUFFLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLHVCQUF1QixDQUFDLENBQUM7NkJBQzlEOzRCQUNELFVBQVUsRUFBRSxDQUNSLE9BQWtCLEVBQ2xCLElBQStCLEVBQ2IsRUFBRSxDQUNwQixJQUFJLElBQUk7Z0NBQ0osWUFBWSxFQUFFLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FDckIsT0FBTyxDQUFDLE9BQU8sRUFBRSxRQUFRLENBQ3JCLGNBQWMsQ0FBQyxPQUFPLENBQUMsS0FBSyxJQUFJLEVBQUUsRUFBRSxNQUFNLENBQUMsQ0FDOUM7NkJBQ1I7eUJBQ1I7d0JBQ0Q7NEJBQ0ksT0FBTyxFQUFFLGlCQUFpQjs0QkFDMUIsS0FBSyxFQUFFLElBQUk7NEJBQ1gsUUFBUSxFQUFFO2dDQUNOLFVBQVUsRUFBRSxjQUFjO2dDQUMxQixnQkFBZ0IsRUFBRSxjQUFjO2dDQUNoQyxpQkFBaUIsRUFBRSxjQUFjOzZCQUNwQzt5QkFDSjtxQkFDSjtpQkFDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RGlyZWN0aXZlLCBmb3J3YXJkUmVmLCBPcHRpb25hbH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge05HX1ZBTFVFX0FDQ0VTU09SLCBOZ0NvbnRyb2x9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7RU1QVFlfRlVOQ1RJT059IGZyb20gJ0B0YWlnYS11aS9jZGsvY29uc3RhbnRzJztcbmltcG9ydCB7dHVpQXJyYXlUb2dnbGV9IGZyb20gJ0B0YWlnYS11aS9jZGsvdXRpbHMvbWlzY2VsbGFuZW91cyc7XG5pbXBvcnQgdHlwZSB7VHVpRGF0YUxpc3RIb3N0fSBmcm9tICdAdGFpZ2EtdWkvY29yZS9jb21wb25lbnRzL2RhdGEtbGlzdCc7XG5pbXBvcnQge1xuICAgIFRVSV9EQVRBX0xJU1RfSE9TVCxcbiAgICB0dWlBc09wdGlvbkNvbnRlbnQsXG59IGZyb20gJ0B0YWlnYS11aS9jb3JlL2NvbXBvbmVudHMvZGF0YS1saXN0JztcbmltcG9ydCB7VHVpTXVsdGlTZWxlY3RPcHRpb25Db21wb25lbnR9IGZyb20gJ0B0YWlnYS11aS9sZWdhY3kvY29tcG9uZW50cy9tdWx0aS1zZWxlY3Qtb3B0aW9uJztcbmltcG9ydCB7UG9seW1vcnBoZXVzQ29tcG9uZW50fSBmcm9tICdAdGFpZ2EtdWkvcG9seW1vcnBoZXVzJztcblxuaW1wb3J0IHtUdWlNdWx0aVNlbGVjdENvbXBvbmVudH0gZnJvbSAnLi4vbXVsdGktc2VsZWN0LmNvbXBvbmVudCc7XG5cbmV4cG9ydCBjb25zdCBUVUlfTVVMVElfU0VMRUNUX09QVElPTiA9IG5ldyBQb2x5bW9ycGhldXNDb21wb25lbnQoXG4gICAgVHVpTXVsdGlTZWxlY3RPcHRpb25Db21wb25lbnQsXG4pO1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzdGFuZGFsb25lOiBmYWxzZSxcbiAgICBzZWxlY3RvcjogJ1t0dWlNdWx0aVNlbGVjdEdyb3VwXScsXG4gICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHR1aUFzT3B0aW9uQ29udGVudChUVUlfTVVMVElfU0VMRUNUX09QVElPTiksXG4gICAgICAgIHtcbiAgICAgICAgICAgIHByb3ZpZGU6IFRVSV9EQVRBX0xJU1RfSE9TVCxcbiAgICAgICAgICAgIGRlcHM6IFtcbiAgICAgICAgICAgICAgICBOZ0NvbnRyb2wsXG4gICAgICAgICAgICAgICAgW25ldyBPcHRpb25hbCgpLCBmb3J3YXJkUmVmKCgpID0+IFR1aU11bHRpU2VsZWN0Q29tcG9uZW50KV0sXG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgdXNlRmFjdG9yeTogPFQ+KFxuICAgICAgICAgICAgICAgIGNvbnRyb2w6IE5nQ29udHJvbCxcbiAgICAgICAgICAgICAgICBob3N0OiBUdWlEYXRhTGlzdEhvc3Q8VD4gfCBudWxsLFxuICAgICAgICAgICAgKTogVHVpRGF0YUxpc3RIb3N0PFQ+ID0+XG4gICAgICAgICAgICAgICAgaG9zdCB8fCB7XG4gICAgICAgICAgICAgICAgICAgIGhhbmRsZU9wdGlvbjogKG9wdGlvbikgPT5cbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRyb2wuY29udHJvbD8uc2V0VmFsdWUoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHVpQXJyYXlUb2dnbGUoY29udHJvbC52YWx1ZSB8fCBbXSwgb3B0aW9uKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgcHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsXG4gICAgICAgICAgICBtdWx0aTogdHJ1ZSxcbiAgICAgICAgICAgIHVzZVZhbHVlOiB7XG4gICAgICAgICAgICAgICAgd3JpdGVWYWx1ZTogRU1QVFlfRlVOQ1RJT04sXG4gICAgICAgICAgICAgICAgcmVnaXN0ZXJPbkNoYW5nZTogRU1QVFlfRlVOQ1RJT04sXG4gICAgICAgICAgICAgICAgcmVnaXN0ZXJPblRvdWNoZWQ6IEVNUFRZX0ZVTkNUSU9OLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICBdLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlNdWx0aVNlbGVjdEdyb3VwRGlyZWN0aXZlIHt9XG4iXX0=