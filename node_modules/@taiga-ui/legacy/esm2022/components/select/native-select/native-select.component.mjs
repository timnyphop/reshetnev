import { ChangeDetectionStrategy, Component, Input, TemplateRef } from '@angular/core';
import { tuiProvide } from '@taiga-ui/cdk/utils/miscellaneous';
import { tuiAsDataList } from '@taiga-ui/core/components/data-list';
import { AbstractTuiNativeSelect } from '@taiga-ui/legacy/classes';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@taiga-ui/core/components/data-list";
import * as i3 from "@taiga-ui/kit/components/data-list-wrapper";
import * as i4 from "@taiga-ui/kit/pipes/stringify-content";
class TuiNativeSelectComponent extends AbstractTuiNativeSelect {
    constructor() {
        super(...arguments);
        this.items = [];
    }
    get stringify() {
        return this.host.stringify;
    }
    selected(option) {
        return this.control.value === option;
    }
    onValueChange(index) {
        this.host.onValueChange(this.items?.[index] || null);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiNativeSelectComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiNativeSelectComponent, selector: "select[tuiSelect]:not([labels]):not([multiple])", inputs: { items: "items" }, host: { listeners: { "change": "onValueChange($event.target.options.selectedIndex - (emptyOption ? 1 : 0))" }, properties: { "attr.aria-invalid": "host.invalid", "disabled": "host.disabled || control.readOnly", "tabIndex": "host.focusable ? 0 : -1", "value": "host.value" } }, providers: [
            tuiAsDataList(TuiNativeSelectComponent),
            tuiProvide(AbstractTuiNativeSelect, TuiNativeSelectComponent),
            {
                provide: TemplateRef,
                deps: [TuiNativeSelectComponent],
                useFactory: ({ datalist }) => datalist,
            },
        ], usesInheritance: true, ngImport: i0, template: "<tui-data-list-wrapper\n    *tuiDataList\n    [disabledItemHandler]=\"disabledItemHandler || itemsHandlers.disabledItemHandler\"\n    [itemContent]=\"stringify | tuiStringifyContent\"\n    [items]=\"items\"\n/>\n<ng-container *ngIf=\"control.control?.valueChanges | async\" />\n<option\n    *ngIf=\"emptyOption\"\n    disabled\n    selected\n    value=\"\"\n>\n    {{ placeholder }}\n</option>\n<option\n    *ngFor=\"let option of items; let index = index\"\n    [disabled]=\"disabledItemHandler ? disabledItemHandler(option) : itemsHandlers.disabledItemHandler(option)\"\n    [selected]=\"selected(option)\"\n    [value]=\"stringify(option)\"\n>\n    {{ stringify(option) }}\n</option>\n", styles: [":host{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;opacity:0}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.TuiDataListDirective, selector: "ng-template[tuiDataList]" }, { kind: "component", type: i3.TuiDataListWrapperComponent, selector: "tui-data-list-wrapper:not([labels])", inputs: ["items", "disabledItemHandler", "emptyContent", "size", "itemContent"], outputs: ["itemClick"] }, { kind: "pipe", type: i1.AsyncPipe, name: "async" }, { kind: "pipe", type: i4.TuiStringifyContentPipe, name: "tuiStringifyContent" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { TuiNativeSelectComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiNativeSelectComponent, decorators: [{
            type: Component,
            args: [{ standalone: false, selector: 'select[tuiSelect]:not([labels]):not([multiple])', changeDetection: ChangeDetectionStrategy.OnPush, providers: [
                        tuiAsDataList(TuiNativeSelectComponent),
                        tuiProvide(AbstractTuiNativeSelect, TuiNativeSelectComponent),
                        {
                            provide: TemplateRef,
                            deps: [TuiNativeSelectComponent],
                            useFactory: ({ datalist }) => datalist,
                        },
                    ], host: {
                        '[attr.aria-invalid]': 'host.invalid',
                        '[disabled]': 'host.disabled || control.readOnly',
                        '[tabIndex]': 'host.focusable ? 0 : -1',
                        '[value]': 'host.value',
                        '(change)': 'onValueChange($event.target.options.selectedIndex - (emptyOption ? 1 : 0))',
                    }, template: "<tui-data-list-wrapper\n    *tuiDataList\n    [disabledItemHandler]=\"disabledItemHandler || itemsHandlers.disabledItemHandler\"\n    [itemContent]=\"stringify | tuiStringifyContent\"\n    [items]=\"items\"\n/>\n<ng-container *ngIf=\"control.control?.valueChanges | async\" />\n<option\n    *ngIf=\"emptyOption\"\n    disabled\n    selected\n    value=\"\"\n>\n    {{ placeholder }}\n</option>\n<option\n    *ngFor=\"let option of items; let index = index\"\n    [disabled]=\"disabledItemHandler ? disabledItemHandler(option) : itemsHandlers.disabledItemHandler(option)\"\n    [selected]=\"selected(option)\"\n    [value]=\"stringify(option)\"\n>\n    {{ stringify(option) }}\n</option>\n", styles: [":host{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;opacity:0}\n"] }]
        }], propDecorators: { items: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF0aXZlLXNlbGVjdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9sZWdhY3kvY29tcG9uZW50cy9zZWxlY3QvbmF0aXZlLXNlbGVjdC9uYXRpdmUtc2VsZWN0LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2xlZ2FjeS9jb21wb25lbnRzL3NlbGVjdC9uYXRpdmUtc2VsZWN0L25hdGl2ZS1zZWxlY3QudGVtcGxhdGUuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDckYsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLG1DQUFtQyxDQUFDO0FBQzdELE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSxxQ0FBcUMsQ0FBQztBQUVsRSxPQUFPLEVBQUMsdUJBQXVCLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQzs7Ozs7O0FBSWpFLE1Bd0JhLHdCQUE0QixTQUFRLHVCQUdoRDtJQTNCRDs7UUE2QlcsVUFBSyxHQUF3QixFQUFFLENBQUM7S0FhMUM7SUFYRyxJQUFjLFNBQVM7UUFDbkIsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUMvQixDQUFDO0lBRVMsUUFBUSxDQUFDLE1BQVM7UUFDeEIsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssS0FBSyxNQUFNLENBQUM7SUFDekMsQ0FBQztJQUVTLGFBQWEsQ0FBQyxLQUFhO1FBQ2pDLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQyxLQUFLLENBQUMsSUFBSSxJQUFJLENBQUMsQ0FBQztJQUN6RCxDQUFDOytHQWpCUSx3QkFBd0I7bUdBQXhCLHdCQUF3QiwyWEFsQnRCO1lBQ1AsYUFBYSxDQUFDLHdCQUF3QixDQUFDO1lBQ3ZDLFVBQVUsQ0FBQyx1QkFBdUIsRUFBRSx3QkFBd0IsQ0FBQztZQUM3RDtnQkFDSSxPQUFPLEVBQUUsV0FBVztnQkFDcEIsSUFBSSxFQUFFLENBQUMsd0JBQXdCLENBQUM7Z0JBQ2hDLFVBQVUsRUFBRSxDQUFDLEVBQUMsUUFBUSxFQUFvQyxFQUFFLEVBQUUsQ0FBQyxRQUFRO2FBQzFFO1NBQ0osaURDdEJMLGtyQkF1QkE7O1NEU2Esd0JBQXdCOzRGQUF4Qix3QkFBd0I7a0JBeEJwQyxTQUFTO2lDQUNNLEtBQUssWUFDUCxpREFBaUQsbUJBRzFDLHVCQUF1QixDQUFDLE1BQU0sYUFDcEM7d0JBQ1AsYUFBYSwwQkFBMEI7d0JBQ3ZDLFVBQVUsQ0FBQyx1QkFBdUIsMkJBQTJCO3dCQUM3RDs0QkFDSSxPQUFPLEVBQUUsV0FBVzs0QkFDcEIsSUFBSSxFQUFFLDBCQUEwQjs0QkFDaEMsVUFBVSxFQUFFLENBQUMsRUFBQyxRQUFRLEVBQW9DLEVBQUUsRUFBRSxDQUFDLFFBQVE7eUJBQzFFO3FCQUNKLFFBQ0s7d0JBQ0YscUJBQXFCLEVBQUUsY0FBYzt3QkFDckMsWUFBWSxFQUFFLG1DQUFtQzt3QkFDakQsWUFBWSxFQUFFLHlCQUF5Qjt3QkFDdkMsU0FBUyxFQUFFLFlBQVk7d0JBQ3ZCLFVBQVUsRUFDTiw0RUFBNEU7cUJBQ25GOzhCQU9NLEtBQUs7c0JBRFgsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSW5wdXQsIFRlbXBsYXRlUmVmfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7dHVpUHJvdmlkZX0gZnJvbSAnQHRhaWdhLXVpL2Nkay91dGlscy9taXNjZWxsYW5lb3VzJztcbmltcG9ydCB7dHVpQXNEYXRhTGlzdH0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvY29tcG9uZW50cy9kYXRhLWxpc3QnO1xuaW1wb3J0IHR5cGUge1R1aUl0ZW1zSGFuZGxlcnN9IGZyb20gJ0B0YWlnYS11aS9raXQvdG9rZW5zJztcbmltcG9ydCB7QWJzdHJhY3RUdWlOYXRpdmVTZWxlY3R9IGZyb20gJ0B0YWlnYS11aS9sZWdhY3kvY2xhc3Nlcyc7XG5cbmltcG9ydCB0eXBlIHtUdWlTZWxlY3REaXJlY3RpdmV9IGZyb20gJy4uL3NlbGVjdC5kaXJlY3RpdmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzdGFuZGFsb25lOiBmYWxzZSxcbiAgICBzZWxlY3RvcjogJ3NlbGVjdFt0dWlTZWxlY3RdOm5vdChbbGFiZWxzXSk6bm90KFttdWx0aXBsZV0pJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vbmF0aXZlLXNlbGVjdC50ZW1wbGF0ZS5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9uYXRpdmUtc2VsZWN0LnN0eWxlLmxlc3MnXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgdHVpQXNEYXRhTGlzdChUdWlOYXRpdmVTZWxlY3RDb21wb25lbnQpLFxuICAgICAgICB0dWlQcm92aWRlKEFic3RyYWN0VHVpTmF0aXZlU2VsZWN0LCBUdWlOYXRpdmVTZWxlY3RDb21wb25lbnQpLFxuICAgICAgICB7XG4gICAgICAgICAgICBwcm92aWRlOiBUZW1wbGF0ZVJlZixcbiAgICAgICAgICAgIGRlcHM6IFtUdWlOYXRpdmVTZWxlY3RDb21wb25lbnRdLFxuICAgICAgICAgICAgdXNlRmFjdG9yeTogKHtkYXRhbGlzdH06IFR1aU5hdGl2ZVNlbGVjdENvbXBvbmVudDx1bmtub3duPikgPT4gZGF0YWxpc3QsXG4gICAgICAgIH0sXG4gICAgXSxcbiAgICBob3N0OiB7XG4gICAgICAgICdbYXR0ci5hcmlhLWludmFsaWRdJzogJ2hvc3QuaW52YWxpZCcsXG4gICAgICAgICdbZGlzYWJsZWRdJzogJ2hvc3QuZGlzYWJsZWQgfHwgY29udHJvbC5yZWFkT25seScsXG4gICAgICAgICdbdGFiSW5kZXhdJzogJ2hvc3QuZm9jdXNhYmxlID8gMCA6IC0xJyxcbiAgICAgICAgJ1t2YWx1ZV0nOiAnaG9zdC52YWx1ZScsXG4gICAgICAgICcoY2hhbmdlKSc6XG4gICAgICAgICAgICAnb25WYWx1ZUNoYW5nZSgkZXZlbnQudGFyZ2V0Lm9wdGlvbnMuc2VsZWN0ZWRJbmRleCAtIChlbXB0eU9wdGlvbiA/IDEgOiAwKSknLFxuICAgIH0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aU5hdGl2ZVNlbGVjdENvbXBvbmVudDxUPiBleHRlbmRzIEFic3RyYWN0VHVpTmF0aXZlU2VsZWN0PFxuICAgIFR1aVNlbGVjdERpcmVjdGl2ZSxcbiAgICBUXG4+IHtcbiAgICBASW5wdXQoKVxuICAgIHB1YmxpYyBpdGVtczogcmVhZG9ubHkgVFtdIHwgbnVsbCA9IFtdO1xuXG4gICAgcHJvdGVjdGVkIGdldCBzdHJpbmdpZnkoKTogVHVpSXRlbXNIYW5kbGVyczxUPlsnc3RyaW5naWZ5J10ge1xuICAgICAgICByZXR1cm4gdGhpcy5ob3N0LnN0cmluZ2lmeTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgc2VsZWN0ZWQob3B0aW9uOiBUKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbnRyb2wudmFsdWUgPT09IG9wdGlvbjtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgb25WYWx1ZUNoYW5nZShpbmRleDogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIHRoaXMuaG9zdC5vblZhbHVlQ2hhbmdlKHRoaXMuaXRlbXM/LltpbmRleF0gfHwgbnVsbCk7XG4gICAgfVxufVxuIiwiPHR1aS1kYXRhLWxpc3Qtd3JhcHBlclxuICAgICp0dWlEYXRhTGlzdFxuICAgIFtkaXNhYmxlZEl0ZW1IYW5kbGVyXT1cImRpc2FibGVkSXRlbUhhbmRsZXIgfHwgaXRlbXNIYW5kbGVycy5kaXNhYmxlZEl0ZW1IYW5kbGVyXCJcbiAgICBbaXRlbUNvbnRlbnRdPVwic3RyaW5naWZ5IHwgdHVpU3RyaW5naWZ5Q29udGVudFwiXG4gICAgW2l0ZW1zXT1cIml0ZW1zXCJcbi8+XG48bmctY29udGFpbmVyICpuZ0lmPVwiY29udHJvbC5jb250cm9sPy52YWx1ZUNoYW5nZXMgfCBhc3luY1wiIC8+XG48b3B0aW9uXG4gICAgKm5nSWY9XCJlbXB0eU9wdGlvblwiXG4gICAgZGlzYWJsZWRcbiAgICBzZWxlY3RlZFxuICAgIHZhbHVlPVwiXCJcbj5cbiAgICB7eyBwbGFjZWhvbGRlciB9fVxuPC9vcHRpb24+XG48b3B0aW9uXG4gICAgKm5nRm9yPVwibGV0IG9wdGlvbiBvZiBpdGVtczsgbGV0IGluZGV4ID0gaW5kZXhcIlxuICAgIFtkaXNhYmxlZF09XCJkaXNhYmxlZEl0ZW1IYW5kbGVyID8gZGlzYWJsZWRJdGVtSGFuZGxlcihvcHRpb24pIDogaXRlbXNIYW5kbGVycy5kaXNhYmxlZEl0ZW1IYW5kbGVyKG9wdGlvbilcIlxuICAgIFtzZWxlY3RlZF09XCJzZWxlY3RlZChvcHRpb24pXCJcbiAgICBbdmFsdWVdPVwic3RyaW5naWZ5KG9wdGlvbilcIlxuPlxuICAgIHt7IHN0cmluZ2lmeShvcHRpb24pIH19XG48L29wdGlvbj5cbiJdfQ==