import { ChangeDetectionStrategy, Component, inject, Input, ViewChild, } from '@angular/core';
import { TUI_IS_MOBILE } from '@taiga-ui/cdk/tokens';
import { TuiHintHover, TuiHintOptionsDirective } from '@taiga-ui/core/directives/hint';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/core/components/icon";
import * as i2 from "@taiga-ui/polymorpheus";
import * as i3 from "@taiga-ui/core/directives/appearance";
import * as i4 from "@taiga-ui/core/directives/hint";
import * as i5 from "@angular/common";
/**
 * @deprecated: drop in v5.0 use {@link TuiTooltip}
 * https://taiga-ui.dev/components/tooltip
 */
class TuiTooltipComponent extends TuiHintOptionsDirective {
    constructor() {
        super(...arguments);
        this.isMobile = inject(TUI_IS_MOBILE);
        this.describeId = '';
    }
    get computedAppearance() {
        return this.appearance || '';
    }
    stopOnMobile(event) {
        if (this.isMobile) {
            event.preventDefault();
            event.stopPropagation();
        }
        this.driver$?.toggle();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiTooltipComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiTooltipComponent, selector: "tui-tooltip", inputs: { content: "content", direction: "direction", appearance: "appearance", showDelay: "showDelay", hideDelay: "hideDelay", describeId: "describeId", context: "context" }, host: { listeners: { "mousedown": "stopOnMobile($event)" }, properties: { "attr.data-appearance": "computedAppearance" } }, viewQueries: [{ propertyName: "driver$", first: true, predicate: TuiHintHover, descendants: true }], usesInheritance: true, ngImport: i0, template: "<span\n    #driver=\"tuiHintHover\"\n    automation-id=\"tui-tooltip__icon\"\n    tuiAppearance=\"icon\"\n    class=\"t-tooltip-icon\"\n    [tuiAppearanceState]=\"(driver | async) ? 'hover' : null\"\n    [tuiHint]=\"content\"\n    [tuiHintAppearance]=\"computedAppearance\"\n    [tuiHintContext]=\"context\"\n    [tuiHintDescribe]=\"describeId\"\n    [tuiHintDirection]=\"direction\"\n    [tuiHintHideDelay]=\"hideDelay\"\n    [tuiHintShowDelay]=\"showDelay\"\n>\n    <tui-icon\n        *polymorpheusOutlet=\"icon as src\"\n        class=\"t-icon\"\n        [icon]=\"src\"\n    />\n</span>\n", styles: [":host{transition-property:color;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:relative;display:inline-block;inline-size:1.5rem;block-size:1.5rem;vertical-align:middle;font-size:0;line-height:0;pointer-events:auto;cursor:pointer;color:var(--tui-text-primary)}:host[data-appearance=error]{color:var(--tui-text-negative)}.t-tooltip-icon{display:inline-block;inline-size:100%;block-size:100%}.t-icon{border:.25rem solid transparent}\n"], dependencies: [{ kind: "component", type: i1.TuiIcon, selector: "tui-icon", inputs: ["icon", "background"] }, { kind: "directive", type: i2.PolymorpheusOutlet, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { kind: "directive", type: i3.TuiAppearance, selector: "[tuiAppearance]", inputs: ["tuiAppearance", "tuiAppearanceState", "tuiAppearanceFocus"] }, { kind: "directive", type: i4.TuiHintDirective, selector: "[tuiHint]:not(ng-container):not(ng-template)", inputs: ["tuiHintContext", "tuiHintAppearance", "tuiHint"] }, { kind: "directive", type: i4.TuiHintDescribe, selector: "[tuiHintDescribe]", inputs: ["tuiHintDescribe"] }, { kind: "pipe", type: i5.AsyncPipe, name: "async" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { TuiTooltipComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiTooltipComponent, decorators: [{
            type: Component,
            args: [{ selector: 'tui-tooltip', changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['content', 'direction', 'appearance', 'showDelay', 'hideDelay'], host: {
                        '[attr.data-appearance]': 'computedAppearance',
                        '(mousedown)': 'stopOnMobile($event)',
                    }, template: "<span\n    #driver=\"tuiHintHover\"\n    automation-id=\"tui-tooltip__icon\"\n    tuiAppearance=\"icon\"\n    class=\"t-tooltip-icon\"\n    [tuiAppearanceState]=\"(driver | async) ? 'hover' : null\"\n    [tuiHint]=\"content\"\n    [tuiHintAppearance]=\"computedAppearance\"\n    [tuiHintContext]=\"context\"\n    [tuiHintDescribe]=\"describeId\"\n    [tuiHintDirection]=\"direction\"\n    [tuiHintHideDelay]=\"hideDelay\"\n    [tuiHintShowDelay]=\"showDelay\"\n>\n    <tui-icon\n        *polymorpheusOutlet=\"icon as src\"\n        class=\"t-icon\"\n        [icon]=\"src\"\n    />\n</span>\n", styles: [":host{transition-property:color;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:relative;display:inline-block;inline-size:1.5rem;block-size:1.5rem;vertical-align:middle;font-size:0;line-height:0;pointer-events:auto;cursor:pointer;color:var(--tui-text-primary)}:host[data-appearance=error]{color:var(--tui-text-negative)}.t-tooltip-icon{display:inline-block;inline-size:100%;block-size:100%}.t-icon{border:.25rem solid transparent}\n"] }]
        }], propDecorators: { driver$: [{
                type: ViewChild,
                args: [TuiHintHover]
            }], describeId: [{
                type: Input
            }], context: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbHRpcC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9sZWdhY3kvY29tcG9uZW50cy90b29sdGlwL3Rvb2x0aXAuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbGVnYWN5L2NvbXBvbmVudHMvdG9vbHRpcC90b29sdGlwLnRlbXBsYXRlLmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNILHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsTUFBTSxFQUNOLEtBQUssRUFDTCxTQUFTLEdBQ1osTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBQ25ELE9BQU8sRUFBQyxZQUFZLEVBQUUsdUJBQXVCLEVBQUMsTUFBTSxnQ0FBZ0MsQ0FBQzs7Ozs7OztBQUVyRjs7O0dBR0c7QUFDSCxNQVdhLG1CQUE2QixTQUFRLHVCQUF1QjtJQVh6RTs7UUFZcUIsYUFBUSxHQUFHLE1BQU0sQ0FBQyxhQUFhLENBQUMsQ0FBQztRQU0zQyxlQUFVLEdBQUcsRUFBRSxDQUFDO0tBaUIxQjtJQVpHLElBQWMsa0JBQWtCO1FBQzVCLE9BQU8sSUFBSSxDQUFDLFVBQVUsSUFBSSxFQUFFLENBQUM7SUFDakMsQ0FBQztJQUVTLFlBQVksQ0FBQyxLQUFpQjtRQUNwQyxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDZixLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7WUFDdkIsS0FBSyxDQUFDLGVBQWUsRUFBRSxDQUFDO1NBQzNCO1FBRUQsSUFBSSxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsQ0FBQztJQUMzQixDQUFDOytHQXZCUSxtQkFBbUI7bUdBQW5CLG1CQUFtQix3WUFHakIsWUFBWSx1RUM1QjNCLGlsQkFvQkE7O1NES2EsbUJBQW1COzRGQUFuQixtQkFBbUI7a0JBWC9CLFNBQVM7K0JBQ0ksYUFBYSxtQkFHTix1QkFBdUIsQ0FBQyxNQUFNLFVBQ3ZDLENBQUMsU0FBUyxFQUFFLFdBQVcsRUFBRSxZQUFZLEVBQUUsV0FBVyxFQUFFLFdBQVcsQ0FBQyxRQUNsRTt3QkFDRix3QkFBd0IsRUFBRSxvQkFBb0I7d0JBQzlDLGFBQWEsRUFBRSxzQkFBc0I7cUJBQ3hDOzhCQU1rQixPQUFPO3NCQUR6QixTQUFTO3VCQUFDLFlBQVk7Z0JBSWhCLFVBQVU7c0JBRGhCLEtBQUs7Z0JBSUMsT0FBTztzQkFEYixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgICBDb21wb25lbnQsXG4gICAgaW5qZWN0LFxuICAgIElucHV0LFxuICAgIFZpZXdDaGlsZCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1RVSV9JU19NT0JJTEV9IGZyb20gJ0B0YWlnYS11aS9jZGsvdG9rZW5zJztcbmltcG9ydCB7VHVpSGludEhvdmVyLCBUdWlIaW50T3B0aW9uc0RpcmVjdGl2ZX0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvZGlyZWN0aXZlcy9oaW50JztcblxuLyoqXG4gKiBAZGVwcmVjYXRlZDogZHJvcCBpbiB2NS4wIHVzZSB7QGxpbmsgVHVpVG9vbHRpcH1cbiAqIGh0dHBzOi8vdGFpZ2EtdWkuZGV2L2NvbXBvbmVudHMvdG9vbHRpcFxuICovXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3R1aS10b29sdGlwJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vdG9vbHRpcC50ZW1wbGF0ZS5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi90b29sdGlwLnN0eWxlLmxlc3MnXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICBpbnB1dHM6IFsnY29udGVudCcsICdkaXJlY3Rpb24nLCAnYXBwZWFyYW5jZScsICdzaG93RGVsYXknLCAnaGlkZURlbGF5J10sXG4gICAgaG9zdDoge1xuICAgICAgICAnW2F0dHIuZGF0YS1hcHBlYXJhbmNlXSc6ICdjb21wdXRlZEFwcGVhcmFuY2UnLFxuICAgICAgICAnKG1vdXNlZG93biknOiAnc3RvcE9uTW9iaWxlKCRldmVudCknLFxuICAgIH0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aVRvb2x0aXBDb21wb25lbnQ8QyA9IGFueT4gZXh0ZW5kcyBUdWlIaW50T3B0aW9uc0RpcmVjdGl2ZSB7XG4gICAgcHJpdmF0ZSByZWFkb25seSBpc01vYmlsZSA9IGluamVjdChUVUlfSVNfTU9CSUxFKTtcblxuICAgIEBWaWV3Q2hpbGQoVHVpSGludEhvdmVyKVxuICAgIHByb3RlY3RlZCByZWFkb25seSBkcml2ZXIkPzogVHVpSGludEhvdmVyO1xuXG4gICAgQElucHV0KClcbiAgICBwdWJsaWMgZGVzY3JpYmVJZCA9ICcnO1xuXG4gICAgQElucHV0KClcbiAgICBwdWJsaWMgY29udGV4dD86IEM7XG5cbiAgICBwcm90ZWN0ZWQgZ2V0IGNvbXB1dGVkQXBwZWFyYW5jZSgpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5hcHBlYXJhbmNlIHx8ICcnO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBzdG9wT25Nb2JpbGUoZXZlbnQ6IE1vdXNlRXZlbnQpOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMuaXNNb2JpbGUpIHtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuZHJpdmVyJD8udG9nZ2xlKCk7XG4gICAgfVxufVxuIiwiPHNwYW5cbiAgICAjZHJpdmVyPVwidHVpSGludEhvdmVyXCJcbiAgICBhdXRvbWF0aW9uLWlkPVwidHVpLXRvb2x0aXBfX2ljb25cIlxuICAgIHR1aUFwcGVhcmFuY2U9XCJpY29uXCJcbiAgICBjbGFzcz1cInQtdG9vbHRpcC1pY29uXCJcbiAgICBbdHVpQXBwZWFyYW5jZVN0YXRlXT1cIihkcml2ZXIgfCBhc3luYykgPyAnaG92ZXInIDogbnVsbFwiXG4gICAgW3R1aUhpbnRdPVwiY29udGVudFwiXG4gICAgW3R1aUhpbnRBcHBlYXJhbmNlXT1cImNvbXB1dGVkQXBwZWFyYW5jZVwiXG4gICAgW3R1aUhpbnRDb250ZXh0XT1cImNvbnRleHRcIlxuICAgIFt0dWlIaW50RGVzY3JpYmVdPVwiZGVzY3JpYmVJZFwiXG4gICAgW3R1aUhpbnREaXJlY3Rpb25dPVwiZGlyZWN0aW9uXCJcbiAgICBbdHVpSGludEhpZGVEZWxheV09XCJoaWRlRGVsYXlcIlxuICAgIFt0dWlIaW50U2hvd0RlbGF5XT1cInNob3dEZWxheVwiXG4+XG4gICAgPHR1aS1pY29uXG4gICAgICAgICpwb2x5bW9ycGhldXNPdXRsZXQ9XCJpY29uIGFzIHNyY1wiXG4gICAgICAgIGNsYXNzPVwidC1pY29uXCJcbiAgICAgICAgW2ljb25dPVwic3JjXCJcbiAgICAvPlxuPC9zcGFuPlxuIl19