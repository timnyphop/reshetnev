import { Directive, inject } from '@angular/core';
import { AbstractTuiControl } from './control';
import * as i0 from "@angular/core";
/**
 * @deprecated: drop in v5.0
 */
class AbstractTuiTextfieldHost {
    constructor() {
        this.host = inject(AbstractTuiControl, { optional: true });
    }
    get readOnly() {
        return this.host.readOnly;
    }
    get disabled() {
        return this.host.computedDisabled;
    }
    get invalid() {
        return this.host.computedInvalid;
    }
    get focusable() {
        return this.host.computedFocusable;
    }
    get inputMode() {
        return 'text';
    }
    get value() {
        return this.host.value?.toString() || '';
    }
    process(_input) { }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: AbstractTuiTextfieldHost, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: AbstractTuiTextfieldHost, ngImport: i0 }); }
}
export { AbstractTuiTextfieldHost };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: AbstractTuiTextfieldHost, decorators: [{
            type: Directive
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJzdHJhY3QtdGV4dGZpZWxkLWhvc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9sZWdhY3kvY2xhc3Nlcy9hYnN0cmFjdC10ZXh0ZmllbGQtaG9zdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLE1BQU0sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUdoRCxPQUFPLEVBQUMsa0JBQWtCLEVBQUMsTUFBTSxXQUFXLENBQUM7O0FBRTdDOztHQUVHO0FBQ0gsTUFDc0Isd0JBQXdCO0lBRDlDO1FBSXVCLFNBQUksR0FBTSxNQUFNLENBQU0sa0JBQWtCLEVBQUUsRUFBQyxRQUFRLEVBQUUsSUFBSSxFQUFDLENBQUMsQ0FBQztLQTZCbEY7SUF6QkcsSUFBVyxRQUFRO1FBQ2YsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUM5QixDQUFDO0lBRUQsSUFBVyxRQUFRO1FBQ2YsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDO0lBQ3RDLENBQUM7SUFFRCxJQUFXLE9BQU87UUFDZCxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDO0lBQ3JDLENBQUM7SUFFRCxJQUFXLFNBQVM7UUFDaEIsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDO0lBQ3ZDLENBQUM7SUFFRCxJQUFXLFNBQVM7UUFDaEIsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUVELElBQVcsS0FBSztRQUNaLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDO0lBQzdDLENBQUM7SUFFTSxPQUFPLENBQUMsTUFBd0IsSUFBUyxDQUFDOytHQS9CL0Isd0JBQXdCO21HQUF4Qix3QkFBd0I7O1NBQXhCLHdCQUF3Qjs0RkFBeEIsd0JBQXdCO2tCQUQ3QyxTQUFTIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEaXJlY3RpdmUsIGluamVjdH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgdHlwZSB7VHVpVGV4dGZpZWxkSG9zdH0gZnJvbSAnQHRhaWdhLXVpL2xlZ2FjeS90b2tlbnMnO1xuXG5pbXBvcnQge0Fic3RyYWN0VHVpQ29udHJvbH0gZnJvbSAnLi9jb250cm9sJztcblxuLyoqXG4gKiBAZGVwcmVjYXRlZDogZHJvcCBpbiB2NS4wXG4gKi9cbkBEaXJlY3RpdmUoKVxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEFic3RyYWN0VHVpVGV4dGZpZWxkSG9zdDxUIGV4dGVuZHMgQWJzdHJhY3RUdWlDb250cm9sPGFueT4+XG4gICAgaW1wbGVtZW50cyBUdWlUZXh0ZmllbGRIb3N0XG57XG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IGhvc3Q6IFQgPSBpbmplY3Q8YW55PihBYnN0cmFjdFR1aUNvbnRyb2wsIHtvcHRpb25hbDogdHJ1ZX0pO1xuXG4gICAgcHVibGljIGFic3RyYWN0IG9uVmFsdWVDaGFuZ2UodmFsdWU6IHN0cmluZyk6IHZvaWQ7XG5cbiAgICBwdWJsaWMgZ2V0IHJlYWRPbmx5KCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5ob3N0LnJlYWRPbmx5O1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgZGlzYWJsZWQoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmhvc3QuY29tcHV0ZWREaXNhYmxlZDtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IGludmFsaWQoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmhvc3QuY29tcHV0ZWRJbnZhbGlkO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgZm9jdXNhYmxlKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5ob3N0LmNvbXB1dGVkRm9jdXNhYmxlO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgaW5wdXRNb2RlKCk6IFR1aVRleHRmaWVsZEhvc3RbJ2lucHV0TW9kZSddIHtcbiAgICAgICAgcmV0dXJuICd0ZXh0JztcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IHZhbHVlKCk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiB0aGlzLmhvc3QudmFsdWU/LnRvU3RyaW5nKCkgfHwgJyc7XG4gICAgfVxuXG4gICAgcHVibGljIHByb2Nlc3MoX2lucHV0OiBIVE1MSW5wdXRFbGVtZW50KTogdm9pZCB7fVxufVxuIl19