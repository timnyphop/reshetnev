import { Directive, Input } from '@angular/core';
import { tuiCreateTokenFromFactory, tuiProvide } from '@taiga-ui/cdk/utils/miscellaneous';
import { AbstractTuiController } from '@taiga-ui/legacy/classes';
import * as i0 from "@angular/core";
export const TUI_TEXTFIELD_PREFIX = tuiCreateTokenFromFactory(() => new TuiTextfieldPrefixDirective());
class TuiTextfieldPrefixDirective extends AbstractTuiController {
    constructor() {
        super(...arguments);
        this.prefix = '';
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiTextfieldPrefixDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: TuiTextfieldPrefixDirective, selector: "[tuiTextfieldPrefix]", inputs: { prefix: ["tuiTextfieldPrefix", "prefix"] }, providers: [tuiProvide(TUI_TEXTFIELD_PREFIX, TuiTextfieldPrefixDirective)], usesInheritance: true, ngImport: i0 }); }
}
export { TuiTextfieldPrefixDirective };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiTextfieldPrefixDirective, decorators: [{
            type: Directive,
            args: [{
                    standalone: false,
                    selector: '[tuiTextfieldPrefix]',
                    providers: [tuiProvide(TUI_TEXTFIELD_PREFIX, TuiTextfieldPrefixDirective)],
                }]
        }], propDecorators: { prefix: [{
                type: Input,
                args: ['tuiTextfieldPrefix']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dGZpZWxkLXByZWZpeC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9sZWdhY3kvZGlyZWN0aXZlcy90ZXh0ZmllbGQtY29udHJvbGxlci90ZXh0ZmllbGQtcHJlZml4LmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUMvQyxPQUFPLEVBQUMseUJBQXlCLEVBQUUsVUFBVSxFQUFDLE1BQU0sbUNBQW1DLENBQUM7QUFDeEYsT0FBTyxFQUFDLHFCQUFxQixFQUFDLE1BQU0sMEJBQTBCLENBQUM7O0FBRS9ELE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFHLHlCQUF5QixDQUN6RCxHQUFHLEVBQUUsQ0FBQyxJQUFJLDJCQUEyQixFQUFFLENBQzFDLENBQUM7QUFFRixNQUthLDJCQUE0QixTQUFRLHFCQUFxQjtJQUx0RTs7UUFPVyxXQUFNLEdBQUcsRUFBRSxDQUFDO0tBQ3RCOytHQUhZLDJCQUEyQjttR0FBM0IsMkJBQTJCLHFHQUZ6QixDQUFDLFVBQVUsQ0FBQyxvQkFBb0IsRUFBRSwyQkFBMkIsQ0FBQyxDQUFDOztTQUVqRSwyQkFBMkI7NEZBQTNCLDJCQUEyQjtrQkFMdkMsU0FBUzttQkFBQztvQkFDUCxVQUFVLEVBQUUsS0FBSztvQkFDakIsUUFBUSxFQUFFLHNCQUFzQjtvQkFDaEMsU0FBUyxFQUFFLENBQUMsVUFBVSxDQUFDLG9CQUFvQiw4QkFBOEIsQ0FBQztpQkFDN0U7OEJBR1UsTUFBTTtzQkFEWixLQUFLO3VCQUFDLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RGlyZWN0aXZlLCBJbnB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge3R1aUNyZWF0ZVRva2VuRnJvbUZhY3RvcnksIHR1aVByb3ZpZGV9IGZyb20gJ0B0YWlnYS11aS9jZGsvdXRpbHMvbWlzY2VsbGFuZW91cyc7XG5pbXBvcnQge0Fic3RyYWN0VHVpQ29udHJvbGxlcn0gZnJvbSAnQHRhaWdhLXVpL2xlZ2FjeS9jbGFzc2VzJztcblxuZXhwb3J0IGNvbnN0IFRVSV9URVhURklFTERfUFJFRklYID0gdHVpQ3JlYXRlVG9rZW5Gcm9tRmFjdG9yeShcbiAgICAoKSA9PiBuZXcgVHVpVGV4dGZpZWxkUHJlZml4RGlyZWN0aXZlKCksXG4pO1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzdGFuZGFsb25lOiBmYWxzZSxcbiAgICBzZWxlY3RvcjogJ1t0dWlUZXh0ZmllbGRQcmVmaXhdJyxcbiAgICBwcm92aWRlcnM6IFt0dWlQcm92aWRlKFRVSV9URVhURklFTERfUFJFRklYLCBUdWlUZXh0ZmllbGRQcmVmaXhEaXJlY3RpdmUpXSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpVGV4dGZpZWxkUHJlZml4RGlyZWN0aXZlIGV4dGVuZHMgQWJzdHJhY3RUdWlDb250cm9sbGVyIHtcbiAgICBASW5wdXQoJ3R1aVRleHRmaWVsZFByZWZpeCcpXG4gICAgcHVibGljIHByZWZpeCA9ICcnO1xufVxuIl19