import { Directive, Input } from '@angular/core';
import { tuiCreateTokenFromFactory, tuiProvide } from '@taiga-ui/cdk/utils/miscellaneous';
import { AbstractTuiController } from '@taiga-ui/legacy/classes';
import * as i0 from "@angular/core";
export const TUI_TEXTFIELD_APPEARANCE_DIRECTIVE = tuiCreateTokenFromFactory(() => new TuiTextfieldAppearanceDirective());
class TuiTextfieldAppearanceDirective extends AbstractTuiController {
    constructor() {
        super(...arguments);
        // it's an empty string by default for backward compatibility
        // (see comment https://github.com/taiga-family/taiga-ui/pull/3007#issuecomment-1315179508)
        this.appearance = '';
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiTextfieldAppearanceDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: TuiTextfieldAppearanceDirective, selector: "[tuiTextfieldAppearance]", inputs: { appearance: ["tuiTextfieldAppearance", "appearance"] }, providers: [
            tuiProvide(TUI_TEXTFIELD_APPEARANCE_DIRECTIVE, TuiTextfieldAppearanceDirective),
        ], usesInheritance: true, ngImport: i0 }); }
}
export { TuiTextfieldAppearanceDirective };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiTextfieldAppearanceDirective, decorators: [{
            type: Directive,
            args: [{
                    standalone: false,
                    selector: '[tuiTextfieldAppearance]',
                    providers: [
                        tuiProvide(TUI_TEXTFIELD_APPEARANCE_DIRECTIVE, TuiTextfieldAppearanceDirective),
                    ],
                }]
        }], propDecorators: { appearance: [{
                type: Input,
                args: ['tuiTextfieldAppearance']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dGZpZWxkLWFwcGVhcmFuY2UuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbGVnYWN5L2RpcmVjdGl2ZXMvdGV4dGZpZWxkLWNvbnRyb2xsZXIvdGV4dGZpZWxkLWFwcGVhcmFuY2UuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsS0FBSyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQy9DLE9BQU8sRUFBQyx5QkFBeUIsRUFBRSxVQUFVLEVBQUMsTUFBTSxtQ0FBbUMsQ0FBQztBQUN4RixPQUFPLEVBQUMscUJBQXFCLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQzs7QUFFL0QsTUFBTSxDQUFDLE1BQU0sa0NBQWtDLEdBQUcseUJBQXlCLENBQ3ZFLEdBQUcsRUFBRSxDQUFDLElBQUksK0JBQStCLEVBQUUsQ0FDOUMsQ0FBQztBQUVGLE1BT2EsK0JBQWdDLFNBQVEscUJBQXFCO0lBUDFFOztRQVFJLDZEQUE2RDtRQUM3RCwyRkFBMkY7UUFFcEYsZUFBVSxHQUFHLEVBQUUsQ0FBQztLQUMxQjsrR0FMWSwrQkFBK0I7bUdBQS9CLCtCQUErQixxSEFKN0I7WUFDUCxVQUFVLENBQUMsa0NBQWtDLEVBQUUsK0JBQStCLENBQUM7U0FDbEY7O1NBRVEsK0JBQStCOzRGQUEvQiwrQkFBK0I7a0JBUDNDLFNBQVM7bUJBQUM7b0JBQ1AsVUFBVSxFQUFFLEtBQUs7b0JBQ2pCLFFBQVEsRUFBRSwwQkFBMEI7b0JBQ3BDLFNBQVMsRUFBRTt3QkFDUCxVQUFVLENBQUMsa0NBQWtDLGtDQUFrQztxQkFDbEY7aUJBQ0o7OEJBS1UsVUFBVTtzQkFEaEIsS0FBSzt1QkFBQyx3QkFBd0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RpcmVjdGl2ZSwgSW5wdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHt0dWlDcmVhdGVUb2tlbkZyb21GYWN0b3J5LCB0dWlQcm92aWRlfSBmcm9tICdAdGFpZ2EtdWkvY2RrL3V0aWxzL21pc2NlbGxhbmVvdXMnO1xuaW1wb3J0IHtBYnN0cmFjdFR1aUNvbnRyb2xsZXJ9IGZyb20gJ0B0YWlnYS11aS9sZWdhY3kvY2xhc3Nlcyc7XG5cbmV4cG9ydCBjb25zdCBUVUlfVEVYVEZJRUxEX0FQUEVBUkFOQ0VfRElSRUNUSVZFID0gdHVpQ3JlYXRlVG9rZW5Gcm9tRmFjdG9yeShcbiAgICAoKSA9PiBuZXcgVHVpVGV4dGZpZWxkQXBwZWFyYW5jZURpcmVjdGl2ZSgpLFxuKTtcblxuQERpcmVjdGl2ZSh7XG4gICAgc3RhbmRhbG9uZTogZmFsc2UsXG4gICAgc2VsZWN0b3I6ICdbdHVpVGV4dGZpZWxkQXBwZWFyYW5jZV0nLFxuICAgIHByb3ZpZGVyczogW1xuICAgICAgICB0dWlQcm92aWRlKFRVSV9URVhURklFTERfQVBQRUFSQU5DRV9ESVJFQ1RJVkUsIFR1aVRleHRmaWVsZEFwcGVhcmFuY2VEaXJlY3RpdmUpLFxuICAgIF0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aVRleHRmaWVsZEFwcGVhcmFuY2VEaXJlY3RpdmUgZXh0ZW5kcyBBYnN0cmFjdFR1aUNvbnRyb2xsZXIge1xuICAgIC8vIGl0J3MgYW4gZW1wdHkgc3RyaW5nIGJ5IGRlZmF1bHQgZm9yIGJhY2t3YXJkIGNvbXBhdGliaWxpdHlcbiAgICAvLyAoc2VlIGNvbW1lbnQgaHR0cHM6Ly9naXRodWIuY29tL3RhaWdhLWZhbWlseS90YWlnYS11aS9wdWxsLzMwMDcjaXNzdWVjb21tZW50LTEzMTUxNzk1MDgpXG4gICAgQElucHV0KCd0dWlUZXh0ZmllbGRBcHBlYXJhbmNlJylcbiAgICBwdWJsaWMgYXBwZWFyYW5jZSA9ICcnO1xufVxuIl19