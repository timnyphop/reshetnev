import { Directive, Input } from '@angular/core';
import { tuiCreateTokenFromFactory, tuiProvide } from '@taiga-ui/cdk/utils/miscellaneous';
import { AbstractTuiController } from '@taiga-ui/legacy/classes';
import * as i0 from "@angular/core";
export const TUI_TEXTFIELD_CLEANER = tuiCreateTokenFromFactory(() => new TuiTextfieldCleanerDirective());
class TuiTextfieldCleanerDirective extends AbstractTuiController {
    constructor() {
        super(...arguments);
        this.cleaner = false;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiTextfieldCleanerDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: TuiTextfieldCleanerDirective, selector: "[tuiTextfieldCleaner]", inputs: { cleaner: ["tuiTextfieldCleaner", "cleaner"] }, providers: [tuiProvide(TUI_TEXTFIELD_CLEANER, TuiTextfieldCleanerDirective)], usesInheritance: true, ngImport: i0 }); }
}
export { TuiTextfieldCleanerDirective };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiTextfieldCleanerDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiTextfieldCleaner]',
                    providers: [tuiProvide(TUI_TEXTFIELD_CLEANER, TuiTextfieldCleanerDirective)],
                }]
        }], propDecorators: { cleaner: [{
                type: Input,
                args: ['tuiTextfieldCleaner']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dGZpZWxkLWNsZWFuZXIuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbGVnYWN5L2RpcmVjdGl2ZXMvdGV4dGZpZWxkLWNvbnRyb2xsZXIvdGV4dGZpZWxkLWNsZWFuZXIuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsS0FBSyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQy9DLE9BQU8sRUFBQyx5QkFBeUIsRUFBRSxVQUFVLEVBQUMsTUFBTSxtQ0FBbUMsQ0FBQztBQUN4RixPQUFPLEVBQUMscUJBQXFCLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQzs7QUFFL0QsTUFBTSxDQUFDLE1BQU0scUJBQXFCLEdBQUcseUJBQXlCLENBQzFELEdBQUcsRUFBRSxDQUFDLElBQUksNEJBQTRCLEVBQUUsQ0FDM0MsQ0FBQztBQUVGLE1BSWEsNEJBQTZCLFNBQVEscUJBQXFCO0lBSnZFOztRQU1XLFlBQU8sR0FBRyxLQUFLLENBQUM7S0FDMUI7K0dBSFksNEJBQTRCO21HQUE1Qiw0QkFBNEIseUdBRjFCLENBQUMsVUFBVSxDQUFDLHFCQUFxQixFQUFFLDRCQUE0QixDQUFDLENBQUM7O1NBRW5FLDRCQUE0Qjs0RkFBNUIsNEJBQTRCO2tCQUp4QyxTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSx1QkFBdUI7b0JBQ2pDLFNBQVMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxxQkFBcUIsK0JBQStCLENBQUM7aUJBQy9FOzhCQUdVLE9BQU87c0JBRGIsS0FBSzt1QkFBQyxxQkFBcUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RpcmVjdGl2ZSwgSW5wdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHt0dWlDcmVhdGVUb2tlbkZyb21GYWN0b3J5LCB0dWlQcm92aWRlfSBmcm9tICdAdGFpZ2EtdWkvY2RrL3V0aWxzL21pc2NlbGxhbmVvdXMnO1xuaW1wb3J0IHtBYnN0cmFjdFR1aUNvbnRyb2xsZXJ9IGZyb20gJ0B0YWlnYS11aS9sZWdhY3kvY2xhc3Nlcyc7XG5cbmV4cG9ydCBjb25zdCBUVUlfVEVYVEZJRUxEX0NMRUFORVIgPSB0dWlDcmVhdGVUb2tlbkZyb21GYWN0b3J5KFxuICAgICgpID0+IG5ldyBUdWlUZXh0ZmllbGRDbGVhbmVyRGlyZWN0aXZlKCksXG4pO1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1t0dWlUZXh0ZmllbGRDbGVhbmVyXScsXG4gICAgcHJvdmlkZXJzOiBbdHVpUHJvdmlkZShUVUlfVEVYVEZJRUxEX0NMRUFORVIsIFR1aVRleHRmaWVsZENsZWFuZXJEaXJlY3RpdmUpXSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpVGV4dGZpZWxkQ2xlYW5lckRpcmVjdGl2ZSBleHRlbmRzIEFic3RyYWN0VHVpQ29udHJvbGxlciB7XG4gICAgQElucHV0KCd0dWlUZXh0ZmllbGRDbGVhbmVyJylcbiAgICBwdWJsaWMgY2xlYW5lciA9IGZhbHNlO1xufVxuIl19