import { Directive, Input } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * @deprecated: drop in v5.0
 */
class TuiWrapperDirective {
    constructor() {
        this.disabled = false;
        this.readOnly = false;
        this.hover = null;
        this.active = null;
        this.focus = false;
        this.invalid = false;
        this.appearance = '';
    }
    get computedInvalid() {
        return !this.disabled && !this.readOnly && this.invalid;
    }
    get computedFocused() {
        return this.focus && !this.disabled;
    }
    get interactiveState() {
        if (this.disabled) {
            return 'disabled';
        }
        if (this.readOnly) {
            return 'readonly';
        }
        if (this.active) {
            return 'active';
        }
        if (this.hover) {
            return 'hover';
        }
        return null;
    }
    get noHover() {
        return this.readOnly || this.hover === false;
    }
    get noActive() {
        return this.readOnly || this.active === false;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiWrapperDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: TuiWrapperDirective, selector: "[tuiWrapper]", inputs: { disabled: "disabled", readOnly: "readOnly", hover: "hover", active: "active", focus: "focus", invalid: "invalid", appearance: "appearance" }, host: { properties: { "attr.data-appearance": "appearance", "class._invalid": "computedInvalid", "class._focused": "computedFocused", "attr.data-state": "interactiveState", "class._no-hover": "noHover", "class._no-active": "noActive" } }, ngImport: i0 }); }
}
export { TuiWrapperDirective };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiWrapperDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiWrapper]',
                    host: {
                        '[attr.data-appearance]': 'appearance',
                        '[class._invalid]': 'computedInvalid',
                        '[class._focused]': 'computedFocused',
                        '[attr.data-state]': 'interactiveState',
                        '[class._no-hover]': 'noHover',
                        '[class._no-active]': 'noActive',
                    },
                }]
        }], propDecorators: { disabled: [{
                type: Input
            }], readOnly: [{
                type: Input
            }], hover: [{
                type: Input
            }], active: [{
                type: Input
            }], focus: [{
                type: Input
            }], invalid: [{
                type: Input
            }], appearance: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid3JhcHBlci5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9sZWdhY3kvZGlyZWN0aXZlcy93cmFwcGVyL3dyYXBwZXIuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsS0FBSyxFQUFDLE1BQU0sZUFBZSxDQUFDOztBQUcvQzs7R0FFRztBQUNILE1BV2EsbUJBQW1CO0lBWGhDO1FBYVcsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUdqQixhQUFRLEdBQUcsS0FBSyxDQUFDO1FBR2pCLFVBQUssR0FBbUIsSUFBSSxDQUFDO1FBRzdCLFdBQU0sR0FBbUIsSUFBSSxDQUFDO1FBRzlCLFVBQUssR0FBRyxLQUFLLENBQUM7UUFHZCxZQUFPLEdBQUcsS0FBSyxDQUFDO1FBR2hCLGVBQVUsR0FBRyxFQUFFLENBQUM7S0FxQzFCO0lBbkNHLElBQWMsZUFBZTtRQUN6QixPQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUM1RCxDQUFDO0lBRUQsSUFBYyxlQUFlO1FBQ3pCLE9BQU8sSUFBSSxDQUFDLEtBQUssSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDeEMsQ0FBQztJQUVELElBQWMsZ0JBQWdCO1FBQzFCLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNmLE9BQU8sVUFBVSxDQUFDO1NBQ3JCO1FBRUQsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2YsT0FBTyxVQUFVLENBQUM7U0FDckI7UUFFRCxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDYixPQUFPLFFBQVEsQ0FBQztTQUNuQjtRQUVELElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNaLE9BQU8sT0FBTyxDQUFDO1NBQ2xCO1FBRUQsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQUVELElBQWMsT0FBTztRQUNqQixPQUFPLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLEtBQUssS0FBSyxLQUFLLENBQUM7SUFDakQsQ0FBQztJQUVELElBQWMsUUFBUTtRQUNsQixPQUFPLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLE1BQU0sS0FBSyxLQUFLLENBQUM7SUFDbEQsQ0FBQzsrR0F4RFEsbUJBQW1CO21HQUFuQixtQkFBbUI7O1NBQW5CLG1CQUFtQjs0RkFBbkIsbUJBQW1CO2tCQVgvQixTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSxjQUFjO29CQUN4QixJQUFJLEVBQUU7d0JBQ0Ysd0JBQXdCLEVBQUUsWUFBWTt3QkFDdEMsa0JBQWtCLEVBQUUsaUJBQWlCO3dCQUNyQyxrQkFBa0IsRUFBRSxpQkFBaUI7d0JBQ3JDLG1CQUFtQixFQUFFLGtCQUFrQjt3QkFDdkMsbUJBQW1CLEVBQUUsU0FBUzt3QkFDOUIsb0JBQW9CLEVBQUUsVUFBVTtxQkFDbkM7aUJBQ0o7OEJBR1UsUUFBUTtzQkFEZCxLQUFLO2dCQUlDLFFBQVE7c0JBRGQsS0FBSztnQkFJQyxLQUFLO3NCQURYLEtBQUs7Z0JBSUMsTUFBTTtzQkFEWixLQUFLO2dCQUlDLEtBQUs7c0JBRFgsS0FBSztnQkFJQyxPQUFPO3NCQURiLEtBQUs7Z0JBSUMsVUFBVTtzQkFEaEIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RGlyZWN0aXZlLCBJbnB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgdHlwZSB7VHVpSW50ZXJhY3RpdmVTdGF0ZX0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvdHlwZXMnO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkOiBkcm9wIGluIHY1LjBcbiAqL1xuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbdHVpV3JhcHBlcl0nLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgJ1thdHRyLmRhdGEtYXBwZWFyYW5jZV0nOiAnYXBwZWFyYW5jZScsXG4gICAgICAgICdbY2xhc3MuX2ludmFsaWRdJzogJ2NvbXB1dGVkSW52YWxpZCcsXG4gICAgICAgICdbY2xhc3MuX2ZvY3VzZWRdJzogJ2NvbXB1dGVkRm9jdXNlZCcsXG4gICAgICAgICdbYXR0ci5kYXRhLXN0YXRlXSc6ICdpbnRlcmFjdGl2ZVN0YXRlJyxcbiAgICAgICAgJ1tjbGFzcy5fbm8taG92ZXJdJzogJ25vSG92ZXInLFxuICAgICAgICAnW2NsYXNzLl9uby1hY3RpdmVdJzogJ25vQWN0aXZlJyxcbiAgICB9LFxufSlcbmV4cG9ydCBjbGFzcyBUdWlXcmFwcGVyRGlyZWN0aXZlIHtcbiAgICBASW5wdXQoKVxuICAgIHB1YmxpYyBkaXNhYmxlZCA9IGZhbHNlO1xuXG4gICAgQElucHV0KClcbiAgICBwdWJsaWMgcmVhZE9ubHkgPSBmYWxzZTtcblxuICAgIEBJbnB1dCgpXG4gICAgcHVibGljIGhvdmVyOiBib29sZWFuIHwgbnVsbCA9IG51bGw7XG5cbiAgICBASW5wdXQoKVxuICAgIHB1YmxpYyBhY3RpdmU6IGJvb2xlYW4gfCBudWxsID0gbnVsbDtcblxuICAgIEBJbnB1dCgpXG4gICAgcHVibGljIGZvY3VzID0gZmFsc2U7XG5cbiAgICBASW5wdXQoKVxuICAgIHB1YmxpYyBpbnZhbGlkID0gZmFsc2U7XG5cbiAgICBASW5wdXQoKVxuICAgIHB1YmxpYyBhcHBlYXJhbmNlID0gJyc7XG5cbiAgICBwcm90ZWN0ZWQgZ2V0IGNvbXB1dGVkSW52YWxpZCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuICF0aGlzLmRpc2FibGVkICYmICF0aGlzLnJlYWRPbmx5ICYmIHRoaXMuaW52YWxpZDtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgZ2V0IGNvbXB1dGVkRm9jdXNlZCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZm9jdXMgJiYgIXRoaXMuZGlzYWJsZWQ7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIGdldCBpbnRlcmFjdGl2ZVN0YXRlKCk6IFR1aUludGVyYWN0aXZlU3RhdGUgfCBzdHJpbmcgfCBudWxsIHtcbiAgICAgICAgaWYgKHRoaXMuZGlzYWJsZWQpIHtcbiAgICAgICAgICAgIHJldHVybiAnZGlzYWJsZWQnO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMucmVhZE9ubHkpIHtcbiAgICAgICAgICAgIHJldHVybiAncmVhZG9ubHknO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMuYWN0aXZlKSB7XG4gICAgICAgICAgICByZXR1cm4gJ2FjdGl2ZSc7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5ob3Zlcikge1xuICAgICAgICAgICAgcmV0dXJuICdob3Zlcic7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgZ2V0IG5vSG92ZXIoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLnJlYWRPbmx5IHx8IHRoaXMuaG92ZXIgPT09IGZhbHNlO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBnZXQgbm9BY3RpdmUoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLnJlYWRPbmx5IHx8IHRoaXMuYWN0aXZlID09PSBmYWxzZTtcbiAgICB9XG59XG4iXX0=