import { InjectionToken } from '@angular/core';
import { TuiMonthPipe } from '@taiga-ui/core/pipes/month';
import { map, of } from 'rxjs';
/**
 * @deprecated: drop in v5.0
 * A function to get localized formatted month
 */
export const TUI_MONTH_FORMATTER = new InjectionToken('[TUI_MONTH_FORMATTER]');
export const TUI_MONTH_FORMATTER_PROVIDER = {
    provide: TUI_MONTH_FORMATTER,
    deps: [TuiMonthPipe],
    useFactory: (pipe) => (month) => month
        ? pipe
            .transform(month)
            .pipe(map((formatted) => `${formatted} ${month.formattedYear}`))
        : of(''),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9udGgtZm9ybWF0dGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbGVnYWN5L3Rva2Vucy9tb250aC1mb3JtYXR0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUc3QyxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sNEJBQTRCLENBQUM7QUFFeEQsT0FBTyxFQUFDLEdBQUcsRUFBRSxFQUFFLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFFN0I7OztHQUdHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQUcsSUFBSSxjQUFjLENBRW5ELHVCQUF1QixDQUFDLENBQUM7QUFFM0IsTUFBTSxDQUFDLE1BQU0sNEJBQTRCLEdBQW9CO0lBQ3pELE9BQU8sRUFBRSxtQkFBbUI7SUFDNUIsSUFBSSxFQUFFLENBQUMsWUFBWSxDQUFDO0lBQ3BCLFVBQVUsRUFDTixDQUFDLElBQWtCLEVBQW1ELEVBQUUsQ0FDeEUsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUNOLEtBQUs7UUFDRCxDQUFDLENBQUMsSUFBSTthQUNDLFNBQVMsQ0FBQyxLQUFLLENBQUM7YUFDaEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLFNBQVMsRUFBRSxFQUFFLENBQUMsR0FBRyxTQUFTLElBQUksS0FBSyxDQUFDLGFBQWEsRUFBRSxDQUFDLENBQUM7UUFDdEUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUM7Q0FDdkIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHtGYWN0b3J5UHJvdmlkZXJ9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtJbmplY3Rpb25Ub2tlbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgdHlwZSB7VHVpTW9udGh9IGZyb20gJ0B0YWlnYS11aS9jZGsvZGF0ZS10aW1lJztcbmltcG9ydCB0eXBlIHtUdWlIYW5kbGVyfSBmcm9tICdAdGFpZ2EtdWkvY2RrL3R5cGVzJztcbmltcG9ydCB7VHVpTW9udGhQaXBlfSBmcm9tICdAdGFpZ2EtdWkvY29yZS9waXBlcy9tb250aCc7XG5pbXBvcnQgdHlwZSB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XG5pbXBvcnQge21hcCwgb2Z9IGZyb20gJ3J4anMnO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkOiBkcm9wIGluIHY1LjBcbiAqIEEgZnVuY3Rpb24gdG8gZ2V0IGxvY2FsaXplZCBmb3JtYXR0ZWQgbW9udGhcbiAqL1xuZXhwb3J0IGNvbnN0IFRVSV9NT05USF9GT1JNQVRURVIgPSBuZXcgSW5qZWN0aW9uVG9rZW48XG4gICAgVHVpSGFuZGxlcjxUdWlNb250aCB8IG51bGwsIE9ic2VydmFibGU8c3RyaW5nPj5cbj4oJ1tUVUlfTU9OVEhfRk9STUFUVEVSXScpO1xuXG5leHBvcnQgY29uc3QgVFVJX01PTlRIX0ZPUk1BVFRFUl9QUk9WSURFUjogRmFjdG9yeVByb3ZpZGVyID0ge1xuICAgIHByb3ZpZGU6IFRVSV9NT05USF9GT1JNQVRURVIsXG4gICAgZGVwczogW1R1aU1vbnRoUGlwZV0sXG4gICAgdXNlRmFjdG9yeTpcbiAgICAgICAgKHBpcGU6IFR1aU1vbnRoUGlwZSk6IFR1aUhhbmRsZXI8VHVpTW9udGggfCBudWxsLCBPYnNlcnZhYmxlPHN0cmluZz4+ID0+XG4gICAgICAgIChtb250aCkgPT5cbiAgICAgICAgICAgIG1vbnRoXG4gICAgICAgICAgICAgICAgPyBwaXBlXG4gICAgICAgICAgICAgICAgICAgICAgLnRyYW5zZm9ybShtb250aClcbiAgICAgICAgICAgICAgICAgICAgICAucGlwZShtYXAoKGZvcm1hdHRlZCkgPT4gYCR7Zm9ybWF0dGVkfSAke21vbnRoLmZvcm1hdHRlZFllYXJ9YCkpXG4gICAgICAgICAgICAgICAgOiBvZignJyksXG59O1xuIl19