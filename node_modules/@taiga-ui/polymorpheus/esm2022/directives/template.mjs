import { ChangeDetectorRef, Directive, inject, TemplateRef } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * ng-template wrapper directive also stores {@link ChangeDetectorRef} to properly handle change detection.
 */
class PolymorpheusTemplate {
    constructor(template = inject((TemplateRef), { self: true }), cdr = inject(ChangeDetectorRef)) {
        this.template = template;
        this.cdr = cdr;
        this.polymorpheus = '';
    }
    static ngTemplateContextGuard(_dir, _ctx) {
        return true;
    }
    check() {
        this.cdr.markForCheck();
    }
    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: PolymorpheusTemplate, deps: [{ token: i0.TemplateRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive }); }
    /** @nocollapse */ static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: PolymorpheusTemplate, isStandalone: true, selector: "ng-template[polymorpheus]", inputs: { polymorpheus: "polymorpheus" }, exportAs: ["polymorpheus"], ngImport: i0 }); }
}
export { PolymorpheusTemplate };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: PolymorpheusTemplate, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                    selector: 'ng-template[polymorpheus]',
                    inputs: ['polymorpheus'],
                    exportAs: 'polymorpheus',
                }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.ChangeDetectorRef }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1wb2x5bW9ycGhldXMvc3JjL2RpcmVjdGl2ZXMvdGVtcGxhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLGlCQUFpQixFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsV0FBVyxFQUFDLE1BQU0sZUFBZSxDQUFDOztBQUVoRjs7R0FFRztBQUNILE1BTWEsb0JBQW9CO0lBRzdCLFlBQ29CLFdBQTJCLE1BQU0sQ0FBQyxDQUFBLFdBQWMsQ0FBQSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksRUFBQyxDQUFDLEVBQzlELE1BQXlCLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQztRQURuRCxhQUFRLEdBQVIsUUFBUSxDQUF1RDtRQUM5RCxRQUFHLEdBQUgsR0FBRyxDQUErQztRQUpoRSxpQkFBWSxHQUFXLEVBQUUsQ0FBQztJQUs5QixDQUFDO0lBRUcsTUFBTSxDQUFDLHNCQUFzQixDQUNoQyxJQUE2QixFQUM3QixJQUFTO1FBRVQsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQUVNLEtBQUs7UUFDUixJQUFJLENBQUMsR0FBRyxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQzVCLENBQUM7a0lBakJRLG9CQUFvQjtzSEFBcEIsb0JBQW9COztTQUFwQixvQkFBb0I7NEZBQXBCLG9CQUFvQjtrQkFOaEMsU0FBUzttQkFBQztvQkFDUCxVQUFVLEVBQUUsSUFBSTtvQkFDaEIsUUFBUSxFQUFFLDJCQUEyQjtvQkFDckMsTUFBTSxFQUFFLENBQUMsY0FBYyxDQUFDO29CQUN4QixRQUFRLEVBQUUsY0FBYztpQkFDM0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NoYW5nZURldGVjdG9yUmVmLCBEaXJlY3RpdmUsIGluamVjdCwgVGVtcGxhdGVSZWZ9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKipcbiAqIG5nLXRlbXBsYXRlIHdyYXBwZXIgZGlyZWN0aXZlIGFsc28gc3RvcmVzIHtAbGluayBDaGFuZ2VEZXRlY3RvclJlZn0gdG8gcHJvcGVybHkgaGFuZGxlIGNoYW5nZSBkZXRlY3Rpb24uXG4gKi9cbkBEaXJlY3RpdmUoe1xuICAgIHN0YW5kYWxvbmU6IHRydWUsXG4gICAgc2VsZWN0b3I6ICduZy10ZW1wbGF0ZVtwb2x5bW9ycGhldXNdJyxcbiAgICBpbnB1dHM6IFsncG9seW1vcnBoZXVzJ10sXG4gICAgZXhwb3J0QXM6ICdwb2x5bW9ycGhldXMnLFxufSlcbmV4cG9ydCBjbGFzcyBQb2x5bW9ycGhldXNUZW1wbGF0ZTxDID0gYW55PiB7XG4gICAgcHVibGljIHBvbHltb3JwaGV1czogQyB8ICcnID0gJyc7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHVibGljIHJlYWRvbmx5IHRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxDPiA9IGluamVjdChUZW1wbGF0ZVJlZjxDPiwge3NlbGY6IHRydWV9KSxcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBjZHI6IENoYW5nZURldGVjdG9yUmVmID0gaW5qZWN0KENoYW5nZURldGVjdG9yUmVmKSxcbiAgICApIHt9XG5cbiAgICBwdWJsaWMgc3RhdGljIG5nVGVtcGxhdGVDb250ZXh0R3VhcmQ8VD4oXG4gICAgICAgIF9kaXI6IFBvbHltb3JwaGV1c1RlbXBsYXRlPFQ+LFxuICAgICAgICBfY3R4OiBhbnksXG4gICAgKTogX2N0eCBpcyBUIGV4dGVuZHMgJycgPyBhbnkgOiBUIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgcHVibGljIGNoZWNrKCk6IHZvaWQge1xuICAgICAgICB0aGlzLmNkci5tYXJrRm9yQ2hlY2soKTtcbiAgICB9XG59XG4iXX0=