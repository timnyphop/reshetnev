import { ChangeDetectorRef, TemplateRef } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * ng-template wrapper directive also stores {@link ChangeDetectorRef} to properly handle change detection.
 */
export declare class PolymorpheusTemplate<C = any> {
    readonly template: TemplateRef<C>;
    private readonly cdr;
    polymorpheus: C | '';
    constructor(template?: TemplateRef<C>, cdr?: ChangeDetectorRef);
    static ngTemplateContextGuard<T>(_dir: PolymorpheusTemplate<T>, _ctx: any): _ctx is T extends '' ? any : T;
    check(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<PolymorpheusTemplate<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<PolymorpheusTemplate<any>, "ng-template[polymorpheus]", ["polymorpheus"], { "polymorpheus": { "alias": "polymorpheus"; "required": false; }; }, {}, never, never, true, never>;
}
