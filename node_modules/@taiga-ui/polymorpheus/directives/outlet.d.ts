import type { DoCheck, OnChanges, SimpleChanges } from '@angular/core';
import { PolymorpheusContext } from '../classes/context';
import type { PolymorpheusContent } from '../types/content';
import type { PolymorpheusPrimitive } from '../types/primitive';
import * as i0 from "@angular/core";
export declare class PolymorpheusOutlet<C> implements OnChanges, DoCheck {
    private readonly vcr;
    private readonly i;
    private readonly t;
    private c?;
    content: PolymorpheusContent<C>;
    context?: C;
    static ngTemplateContextGuard<T>(_dir: PolymorpheusOutlet<T>, _ctx: any): _ctx is PolymorpheusContext<T extends PolymorpheusPrimitive ? T : never>;
    ngOnChanges({ content }: SimpleChanges): void;
    ngDoCheck(): void;
    private get template();
    private getContext;
    private process;
    static ɵfac: i0.ɵɵFactoryDeclaration<PolymorpheusOutlet<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<PolymorpheusOutlet<any>, "[polymorpheusOutlet]", never, { "content": { "alias": "polymorpheusOutlet"; "required": false; }; "context": { "alias": "polymorpheusOutletContext"; "required": false; }; }, {}, never, never, true, never>;
}
